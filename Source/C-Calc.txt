
										/*
										The CALCULATE command controls the aggregation of leaf cells in the cube.
										If the CALCULATE command is deleted or modified, the data within the cube is affected.
										You should edit this command only if you manually specify how the cube is aggregated.
										*/
										CALCULATE;


										///////////////////////////////////////////////////////////////////
										///////// Server System Variables
										///////////////////////////////////////////////////////////////////
										CREATE MEMBER CURRENTCUBE.[Measures].[Server Name] AS
										ASSP.DMVSingleValue(
										"Value"
										,"Select Value from $System.discover_properties Where PropertyName = 'ServerName'"
										)
										,  DISPLAY_FOLDER = 'System';



										CREATE MEMBER CURRENTCUBE.[Measures].[Last Processed] AS
										ASSP.GetCubeLastProcessedDate()
										,  DISPLAY_FOLDER = 'System';
										///////////////////////////////////////////////////////////////////
										///////// Basic Calc Measures
										///////////////////////////////////////////////////////////////////

										CREATE
										MEMBER CURRENTCUBE.[Measures].[FX Rate] AS NULL

										,FORMAT_STRING = "#,##0.00;-#,##0.00"
										,VISIBLE = 1
										,NON_EMPTY_BEHAVIOR = { [Measures].[Cur Amount] }
										,ASSOCIATED_MEASURE_GROUP = 'FX Rate';
										CREATE
										MEMBER CURRENTCUBE.[Measures].[hAllBridge] AS
										[Measures].[hBri Account Account Tree Count]
										--+ [Measures].[hBri Accounting Period Status Count]
										--+ [Measures].[hBri Entity Entity Tree Count]
										--+ [Measures].[hBri Product Product Tree]
										--+ [Measures].[hBri Trifocus Trifocus Tree Count]
										,FORMAT_STRING = "#,##0.00;-#,##0.00"
										,VISIBLE = 0
										,ASSOCIATED_MEASURE_GROUP = 'Amounts';
										CREATE
										MEMBER CURRENTCUBE.[Measures].[hBridge] AS
										[Measures].[hAllBridge] / [Measures].[hAllBridge]
										,FORMAT_STRING = "#,##0.00;-#,##0.00"
										,VISIBLE = 0
										,ASSOCIATED_MEASURE_GROUP = 'Amounts';
										CREATE
										MEMBER CURRENTCUBE.[Measures].[Amt Delta] AS
										[Measures].[Converted Amount] - [Measures].[Amount]
										,FORMAT_STRING = "#,##0.00;(#,##0.00)"
										,NON_EMPTY_BEHAVIOR = { [Measures].[Cur Amount] }
										,VISIBLE = 0
										,ASSOCIATED_MEASURE_GROUP = 'Amounts';


										CREATE MEMBER CURRENTCUBE.[Measures].[Amount 2]
										AS [Measures].[Value],
										FORMAT_STRING = "#,##0.00;(#,##0.00)",
										NON_EMPTY_BEHAVIOR = { [Measures].[Value] },
										VISIBLE = 1 ,  ASSOCIATED_MEASURE_GROUP = 'Amounts'
										,DISPLAY_FOLDER = 'Pre-AMC' ;

										CREATE
										MEMBER CURRENTCUBE.[Measures].[Amount 3] AS
										[Measures].[Value 2]
										,FORMAT_STRING = "#,##0.00;(#,##0.00)"
										,NON_EMPTY_BEHAVIOR = { [Measures].[Value 2] }
										,VISIBLE = 1
										,ASSOCIATED_MEASURE_GROUP = 'Amounts'
										,DISPLAY_FOLDER = 'Pre-AMC';

										CREATE
										MEMBER CURRENTCUBE.[Measures].[Amount 4] AS
										[Measures].[Value 3]
										,FORMAT_STRING = "#,##0.00;(#,##0.00)"
										,NON_EMPTY_BEHAVIOR = { [Measures].[Value 3] }
										,VISIBLE = 1
										,ASSOCIATED_MEASURE_GROUP = 'Amounts'
										,DISPLAY_FOLDER = 'Pre-AMC';

										//CREATE MEMBER CURRENTCUBE.[Measures].[Group Currency Amount]
										// AS [Measures].[Amount],
										//FORMAT_STRING = "#,##0.00;(#,##0.00)",
										//NON_EMPTY_BEHAVIOR = { [Measures].[Amount] },
										//VISIBLE = 1 ,  ASSOCIATED_MEASURE_GROUP = 'Amounts'  ;
										//
										//CREATE
										//  MEMBER CURRENTCUBE.[Measures].[Functional Currency Amount] AS
										//    [Measures].[Value 2]
										//   ,FORMAT_STRING = "#,##0.00;(#,##0.00)"
										//   ,NON_EMPTY_BEHAVIOR = { [Measures].[Value 2] }
										//   ,VISIBLE = 1
										//   ,ASSOCIATED_MEASURE_GROUP = 'Amounts';
										//
										//CREATE
										//  MEMBER CURRENTCUBE.[Measures].[Lloyds Currency Amount] AS
										//    [Measures].[Value 3]
										//   ,FORMAT_STRING = "#,##0.00;(#,##0.00)"
										//   ,NON_EMPTY_BEHAVIOR = { [Measures].[Value 3] }
										//   ,VISIBLE = 1
										//   ,ASSOCIATED_MEASURE_GROUP = 'Amounts';
										//
										//CREATE
										//  MEMBER CURRENTCUBE.[Measures].[Trans Currency Amount] AS
										//    [Measures].[Cur Amount]
										//   ,FORMAT_STRING = "#,##0.00;(#,##0.00)"
										//   ,NON_EMPTY_BEHAVIOR = { [Measures].[Cur Amount] }
										//   ,VISIBLE = 1
										//   ,ASSOCIATED_MEASURE_GROUP = 'Amounts';

										CREATE MEMBER CURRENTCUBE.[Measures].[TFYOA%] AS
										(
										[Measures].[Trans Currency Amount]

										)
										/
										(
										[Measures].[Trans Currency Amount]
										,ROOT([Tri Focus])
										)
										,FORMAT_STRING = "Percent"
										;

										CREATE MEMBER CURRENTCUBE.[MEASURES].[TF % of TFGroup]AS
										Case
										// Test to avoid division by zero.
										When IsEmpty
										(
										[Measures].[Trans Currency Amount]
										)
										Then Null

										// Test for current coordinate being on the (All) member.
										When [Tri Focus].[Group - Trifocus].CurrentMember.Level Is
										[Tri Focus].[Group - Trifocus].[(All)]
										Then 1

										Else ( [Tri Focus].[Group - Trifocus].CurrentMember,
										[Measures].[Trans Currency Amount] )
										/
										( [Tri Focus].[Group - Trifocus].CurrentMember.Parent,
										[Measures].[Trans Currency Amount] )

										End
										,FORMAT_STRING = "Percent"
										,NON_EMPTY_BEHAVIOR =1.00
										;

										CREATE set PrmEarningsSet as
										{
										([Data Stage].[Data Stage].&[2],[Process].[Process Code].[UA],[Account].[Account].&[10100])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Uj],[Account].[Account].&[10100])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Uj],[Account].[Account].&[10200])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Uj],[Account].[Account].&[1161005])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Uj],[Account].[Account].&[1161006])
										,([Data Stage].[Data Stage].&[3],[Process].[Process Code].[Uj],[Account].[Account].&[10200])
										,([Data Stage].[Data Stage].&[4],[Process].[Process Code].[Uj],[Account].[Account].&[10200])
										,([Data Stage].[Data Stage].&[4],[Process].[Process Code].[Uj],[Account].[Account].&[1161005])
										,([Data Stage].[Data Stage].&[4],[Process].[Process Code].[Uj],[Account].[Account].&[1161006])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Um],[Account].[Account].&[10100])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Um],[Account].[Account].&[10200])
										,([Data Stage].[Data Stage].&[3],[Process].[Process Code].[Um],[Account].[Account].&[15100])
										,([Data Stage].[Data Stage].&[4],[Process].[Process Code].[Um],[Account].[Account].&[15100])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Un],[Account].[Account].&[10100])
										,([Data Stage].[Data Stage].&[2],[Process].[Process Code].[Un],[Account].[Account].&[10200])
										,([Data Stage].[Data Stage].&[3],[Process].[Process Code].[Un],[Account].[Account].&[15100])
										,([Data Stage].[Data Stage].&[4],[Process].[Process Code].[Un],[Account].[Account].&[15100])
										};


										/*

										///////////////////////////////////////////////////////////////////
										///////// Dynamic Budget and Forecast
										///////////////////////////////////////////////////////////////////
										SCOPE (
										MEASUREGROUPMEASURES( 'Amounts' )
										);
										[Scenario].[Scenario].&[-10] = (
										[Measures].CurrentMember
										,LinkMember([Scenario Budget].[Budget Scenario].CurrentMember,[Scenario].[Scenario])
										);
										[Scenario].[Scenario].&[-20] = (
										[Measures].CurrentMember
										,LinkMember([Scenario Forecast].[Forecast Scenario].CurrentMember,[Scenario].[Scenario])
										);
										END SCOPE;
										*/

										///////////////////////////////////////////////////////////////////
										///////// Pink if not prod
										///////////////////////////////////////////////////////////////////
										//SCOPE MEASUREGROUPMEASURES("Amounts");
										//    BACK_COLOR(This) = iif(Measures.[Server Name]="UKPRDB051\UKAC01",16777215 /*White*/,16765695 /*R=255, G=210, B=255*/);
										//END SCOPE;

										// Create Earning Process Set
										CREATE HIDDEN SET [DisableAllCurCurAmountProcess] AS
										{
										[Process].[Process Code].[UN]
										, [Process].[Process Code].[UM]
										, [Process].[Process Code].[UJ]
										, [Process].[Process Code].[UK]
										, [Process].[Process Code].[UP]
										, [Process].[Process Code].[UQ]
										, [Process].[Process Code].[3K]
										, [Process].[Process Code].[FX]
										, [Process].[Process Code].[UI]
										};


										///////////////////////////////////////////////////////////////////
										///////// Cur Amount all All Currency Level
										///////////////////////////////////////////////////////////////////
										SCOPE ([Measures].[Cur Amount], [Cur Transaction Currency].[Tran Curr].[All]);
										BACK_COLOR(THIS) = 14737632;
										END SCOPE;


										//Commented by RG 2016-11-11 due to perfromance Issue in Live Agresso Granular Queries
										//// Allocation Group include -1
										//SCOPE ([Data Stage].[Data Stage].&[4],[Allocation Rules].[Allocation Group].MEMBERS);
										//       THIS  = [Allocation Rules].[Allocation Group].&[-1];
										// END SCOPE;


										///////////////////////////////////////////////////////////////////
										///////// FX
										///////////////////////////////////////////////////////////////////

										// Agresso Opening Rates
										SCOPE ( [Cur Rate Scenario].[Rate Scenario].[Agresso Opening]
										,{[Measures].[FX Rate Numerator],[Measures].[FX Rate Denominator] }
										,[Accounting Period].[Y - H - Q - M].Members);

										THIS = ([Cur Rate Scenario].[Rate Scenario].[Agresso]
										,ClosingPeriod(  [Accounting Period].[Y - H - Q - M].[Accounting Period]
										, ANCESTOR( [Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Year]
										).Prevmember
										)
										);

										END SCOPE;

										// TB FX Rate
										SCOPE ( [Cur FX Rate].[FX Rate Name].[TB] );
										SCOPE
										[Account].[IS BS].[Account Group].&[BS].Children;
										This = [Cur FX Rate].[FX Rate Name].[Spot];
										END SCOPE;
										SCOPE
										{
										[Account].[IS BS].[Account Group].&[IS].Children
										,[Account].[IS BS].[Account Group].&[FX].Children
										,[Account].[IS BS].[Account Group].&[].Children
										};
										This =
										[Cur FX Rate].[FX Rate Name].[Average];
										END SCOPE;

										END SCOPE;


										SCOPE (
										[Accounting Period].[Y - H - Q - M].Members
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].Members
										,{[Cur FX Rate].[FX Rate Name].[Average],[Cur FX Rate].[FX Rate Name].[Spot]}
										,[Cur Reporting Currency].[Rep Curr].[Rep Curr].Members
//                                        ,{[Account].[Account].[Account]} -({[Account].[Account].&[1010083],[Account].[Account].&[1010088]})  // Bidac lr claims (FIN 2434)
										,[Cur Bridge Currency].[Bridge Currency].[Bridge Currency].Members
										,[Cur Rate Scenario].[Rate Scenario].[Rate Scenario].Members
										);


										[Measures].[Converted Amount]  =
										IIF ( NOT ISEMPTY (    (   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										)
										)
										,    ([Measures].[Cur Amount]
										/
										(   (   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										)
										/
										IIF(
										(   [Measures].[FX Rate Denominator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										) =0
										,([Measures].[Cur Amount])/([Measures].[Cur Amount])
										,(   [Measures].[FX Rate Denominator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										)
										)
										)

										)
										,    ([Measures].[Cur Amount]
										/
										(   ([Measures].[FX Rate Numerator],[Accounting Period].[Y - H - Q - M].[Accounting Period].&[190001])
										/
										IIF(
										([Measures].[FX Rate Denominator] ,[Accounting Period].[Y - H - Q - M].[Accounting Period].&[190001]) =0
										,([Measures].[Cur Amount])/([Measures].[Cur Amount])
										,([Measures].[FX Rate Denominator] ,[Accounting Period].[Y - H - Q - M].[Accounting Period].&[190001])
										)
										)

										)
										);
										[Measures].[FX Rate]  =
										IIF ( NOT ISEMPTY (    (   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										)
										)
										,       (   (   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										)
										/
										IIF(
										(   [Measures].[FX Rate Denominator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										) =0
										,([Measures].[Cur Amount])/([Measures].[Cur Amount])
										,(   [Measures].[FX Rate Denominator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										)
										)
										)
										,    (   ([Measures].[FX Rate Numerator],[Accounting Period].[Y - H - Q - M].[Accounting Period].&[190001])
										/
										IIF(
										([Measures].[FX Rate Denominator] ,[Accounting Period].[Y - H - Q - M].[Accounting Period].&[190001]) =0
										,([Measures].[Cur Amount])/([Measures].[Cur Amount])
										,([Measures].[FX Rate Denominator] ,[Accounting Period].[Y - H - Q - M].[Accounting Period].&[190001])
										)
										)
										);


										Format_String( [Measures].[Converted Amount] ) = "#,##0.00 ;(#,##0.00)";
										Format_String( [Measures].[FX Rate] ) = "#,##0.0000 ;(#,##0.0000)";
										END SCOPE;

                                        ///////////////////////////////////////////////////////////////////
                                        ///////// Bidac lr claims (FIN 2434)
                                        ///////////////////////////////////////////////////////////////////


                                       SCOPE (
                                        [Accounting Period].[Y - H - Q - M].Members
                                        ,[Data Stage].[Data Stage].&[1]
                                        ,[Time Series].[Time Series].Members
                                        ,[Entity].[Entity].members
                                        ,{[Account].[Account].&[1010083],[Account].[Account].&[1010088]}
                                        ,[Tri Focus].[Trifocus Code].members
                                        , [Measures].[Converted Amount]
                                        );



                                       [Account].[Account].&[1010083] = ([Account].[Account].&[1010082], [Measures].[Converted Amount] )/([Account].[Account].&[1010081], [Measures].[Converted Amount]);
                                        [Account].[Account].&[1010088]= ([Account].[Account].&[1010087], [Measures].[Converted Amount])/([Account].[Account].&[1010086], [Measures].[Converted Amount]);
                                        //[Measures].[Converted Amount]  = ([Account].[Account Code].&[1010082], [Measures].[Converted Amount]  )*100/([Account].[Account Code].&[1010081],[Measures].[Converted Amount]);
                                                                        
                                        
                                        Format_String( [Measures].[Converted Amount] ) = "#,##0.00 ;(#,##0.00)";                                        
                                        END SCOPE;


                                       SCOPE (
                                        [Accounting Period].[Y - H - Q - M].Members
                                        ,[Data Stage].[Data Stage].&[1]
                                        ,[Time Series].[Time Series].Members
                                        ,[Entity].[Entity].members
                                        ,{[Account].[Account].&[1010083],[Account].[Account].&[1010088]}
                                        ,[Tri Focus].[Trifocus Code].members
                                        ,[Measures].[Trans Currency Amount]
                                        );



                                       [Account].[Account].&[1010083] = ([Account].[Account].&[1010082],[Measures].[Trans Currency Amount] )/([Account].[Account].&[1010081],[Measures].[Trans Currency Amount]);
                                        [Account].[Account].&[1010088]= ([Account].[Account].&[1010087],[Measures].[Trans Currency Amount])/([Account].[Account].&[1010086],[Measures].[Trans Currency Amount]);
                                        //[Measures].[Converted Amount]  = ([Account].[Account Code].&[1010082], [Measures].[Converted Amount]  )*100/([Account].[Account Code].&[1010081],[Measures].[Converted Amount]);
                                                                        
                                        
                                        Format_String( [Measures].[Trans Currency Amount] ) = "#,##0.00 ;(#,##0.00)";                                        
                                        END SCOPE;


										///////////////////////////////////////////////////////////////////
										///////// Time Series
										///////////////////////////////////////////////////////////////////


										// Create RolloverProecss Dataset
										CREATE HIDDEN SET [RolloverProcess] AS
										FILTER ([Process].[Process Code].MEMBERS,LEFT([Process].[Process Code].Properties("NAME"),1) = "Y");


										//Create Set TimeSeries Measures
										CREATE SET [TimeSeriesMeasures] AS
										{     [Measures].[Transaction Count]
										, [Measures].[Amount]
										, [Measures].[Cur Amount]
										, [Measures].[Value]
										, [Measures].[Value 2]
										, [Measures].[Value 3]
										, [Measures].[UW Percentage]
										, [Measures].[US Premium Tax Rate]
										};

										// Percent of Year total
										SCOPE
										(
										{Measuregroupmeasures('Amounts'),Measuregroupmeasures('Accounting Period')}
										--,[Scenario].[Scenario].&[1]
										, {[Data Stage].[Data Stage].&[1],[Data Stage].[Data Stage].&[2],[Data Stage].[Data Stage].&[4],[Data Stage].[Data Stage].&[5]}
										);
										[Time Series].[Time Series].&[10] =
										(
										[Account].[Account].CurrentMember
										,[Time Series].[Time Series].&[1]
										)
										/
										(
										[Account].[Account].CurrentMember
										,[Time Series].[Time Series].&[1]
										,Ancestor
										(
										[Accounting Period].[Y - H - Q - M].CurrentMember
										,[Accounting Period].[Y - H - Q - M].[Accounting Year]
										)
										);
										Format_String
										(
										[Time Series].[Time Series].&[10]
										) = "Percent";
										--------------------------------------------------------------------------------------------
										//  YTD
										([Time Series].[Time Series].&[30],[TimeSeriesMeasures]) =

										SUM([Time Series].[Time Series].&[1]
										,
										SUM
										(

										PeriodsToDate
										(
										[Accounting Period].[Y - H - Q - M].[Accounting Year]
										,[Accounting Period].[Y - H - Q - M].CurrentMember
										)

										));
										Format_String
										(
										[Time Series].[Time Series].&[30]
										) = "#,##0.00 ;(#,##0.00)";
										--------------------------------------------------------------------------------------------
										//Rolling Year
										([Time Series].[Time Series].&[61],[TimeSeriesMeasures]) =

										SUM(
										[Accounting Period].[Accounting Period].CurrentMember.Lag(14):[Accounting Period].[Accounting Period].NextMember.Lag([Accounting Period].[LAG Adjustment].CurrentMember.Properties("NAME"))
										,([Time Series].[Time Series].&[1])
										)/12

										;
										Format_String
										(
										[Time Series].[Time Series].&[61]
										) = "#,##0.00 ;(#,##0.00)";

										//LTD for Roll Over Proecss

										SCOPE   (
										[RolloverProcess]
										, [Data Stage].[Data Stage].&[4]
										);
										[Time Series].[Time Series].&[61] = NULL;
										END SCOPE;

										//Rolling Quarter
										([Time Series].[Time Series].&[62],[TimeSeriesMeasures]) =

										SUM(
										[Accounting Period].[Accounting Period].CurrentMember.Lag([Accounting Period].[QTR LAG].CurrentMember.Properties("NAME")):[Accounting Period].[Accounting Period].CurrentMember.Lag([Accounting Period].[LAG Adjustment].CurrentMember.Properties("NAME"))
										,([Time Series].[Time Series].&[1])
										)/3
										;

										Format_String
										(
										[Time Series].[Time Series].&[62]
										) = "#,##0.00 ;(#,##0.00)";

										//LTD for Roll Over Proecss
										SCOPE   (
										[RolloverProcess]
										, [Data Stage].[Data Stage].&[4]
										);
										[Time Series].[Time Series].&[62] = NULL;
										END SCOPE;


										//Rolling Half Year
										([Time Series].[Time Series].&[63],[TimeSeriesMeasures]) =

										SUM(
										[Accounting Period].[Accounting Period].CurrentMember.Lag([Accounting Period].[HY LAG].CurrentMember.Properties("NAME")):[Accounting Period].[Accounting Period].CurrentMember.Lag([Accounting Period].[LAG Adjustment].CurrentMember.Properties("NAME"))
										,([Time Series].[Time Series].&[1])
										)/6
										;


										Format_String
										(
										[Time Series].[Time Series].&[63]
										) = "#,##0.00 ;(#,##0.00)";

										//LTD for Roll Over Proecss
										SCOPE   (
										[RolloverProcess]
										, [Data Stage].[Data Stage].&[4]
										);
										[Time Series].[Time Series].&[63] = NULL;
										END SCOPE;

										//YTD Average
										([Time Series].[Time Series].&[64],[TimeSeriesMeasures]) =

										SUM(
										([Time Series].[Time Series].&[30],[Accounting Period].[Accounting Period].CurrentMember.Lag([Accounting Period].[LAG Adjustment].CurrentMember.Properties("NAME")) )
										)/(([Accounting Period].[Month Number].CurrentMember.Properties("NAME"))-1)
										;


										Format_String
										(
										[Time Series].[Time Series].&[64]
										) = "#,##0.00 ;(#,##0.00)";

										//LTD for Roll Over Proecss
										SCOPE   (
										[RolloverProcess]
										, [Data Stage].[Data Stage].&[4]
										);
										[Time Series].[Time Series].&[64] = NULL;
										END SCOPE;

										//LTD for Roll Over Proecss
										SCOPE   (
										[Accounting Period].[Accounting Month].&[0]
										);
										[Time Series].[Time Series].&[64] = NULL;
										END SCOPE;

										--------------------------------------------------------------------------------------------
										//  YTD Target period
										([Time Series].[Time Series].&[50],[TimeSeriesMeasures]) =

										SUM([Time Series].[Time Series].&[1]
										,
										SUM
										(

										PeriodsToDate
										(
										[Target Period].[Tgt Y - H - Q - M].[Target Year]
										,[Target Period].[Tgt Y - H - Q - M].CurrentMember
										)
										))
										;
										Format_String
										(
										[Time Series].[Time Series].&[50]
										) = "#,##0.00 ;(#,##0.00)";

										--------------------------------------------------------------------------------------------
										//LTD
										([Time Series].[Time Series].&[40],[TimeSeriesMeasures]) =
										SUM([Time Series].[Time Series].&[1]
										,
										SUM(
										PeriodsToDate
										(
										[Accounting Period].[Y - H - Q - M].[(All)]
										,[Accounting Period].[Y - H - Q - M].currentMember
										)));
										Format_String
										(
										[Time Series].[Time Series].&[40]
										) = "#,##0.00 ;(#,##0.00)";

										//LTD for Roll Over Proecss
										SCOPE   (
										[RolloverProcess]
										, [Data Stage].[Data Stage].&[4]
										);
										[Time Series].[Time Series].&[40] = NULL;
										END SCOPE;
										--------------------------------------------------------------------------------------------
										//LTD Target Period

										([Time Series].[Time Series].&[60],[TimeSeriesMeasures]) =
										SUM([Time Series].[Time Series].&[1]
										,
										SUM(
										PeriodsToDate
										(
										[Target Period].[Tgt Y - H - Q - M].[(All)]
										,[Target Period].[Tgt Y - H - Q - M].currentMember
										)));
										Format_String
										(
										[Time Series].[Time Series].&[60]
										) = "#,##0.00 ;(#,##0.00)";

										//LTD for Roll Over Proecss
										SCOPE   (
										[RolloverProcess]
										, [Data Stage].[Data Stage].&[4]
										);
										[Time Series].[Time Series].&[60] = NULL;
										END SCOPE;
										--------------------------------------------------------------------------------------------
										END SCOPE;

										///////////////////////////////////////////////////////////////////
										///////// YOA Calcs
										///////////////////////////////////////////////////////////////////


										CREATE MEMBER CURRENTCUBE.[YOA].[YOA].[All].[YOA1]
										AS
										LINKMEMBER(ancestor([Accounting Period].[Y - H - Q - M].CurrentMember, [Accounting Period].[Y - H - Q - M].[Accounting Year]),[YOA].[YOA]),
										FORMAT_STRING = "#,##0.00 ;(#,##0.00)" ,
										VISIBLE = 1 ,  ASSOCIATED_MEASURE_GROUP = 'Amounts'  ;

										CREATE MEMBER CURRENTCUBE.[YOA].[YOA].[All].[YOA2]
										AS
										LINKMEMBER(ancestor([Accounting Period].[Y - H - Q - M].CurrentMember,[Accounting Period].[Y - H - Q - M].[Accounting Year]),[YOA].[YOA]).Lag(1),
										FORMAT_STRING = "#,##0.00 ;(#,##0.00)" ,
										VISIBLE = 1 ,  ASSOCIATED_MEASURE_GROUP = 'Amounts'  ;

										CREATE MEMBER CURRENTCUBE.[YOA].[YOA].[All].[YOA3]
										AS
										([Time Series].[Time Series].CurrentMember,LINKMEMBER(ancestor([Accounting Period].[Y - H - Q - M].CurrentMember,[Accounting Period].[Y - H - Q - M].[Accounting Year]),[YOA].[YOA]).lag(2)),
										FORMAT_STRING = "#,##0.00 ;(#,##0.00)",
										VISIBLE = 1 ,  ASSOCIATED_MEASURE_GROUP = 'Amounts'  ;

										CREATE MEMBER CURRENTCUBE.[YOA].[YOA].[All].[YOA3ae]
										AS
										([Time Series].[Time Series].CurrentMember,LINKMEMBER(ancestor([Accounting Period].[Y - H - Q - M].CurrentMember,[Accounting Period].[Y - H - Q - M].[Accounting Year]),[YOA].[YOA]).lag(2))
										+([YOA Group].[YOA Group].&[4],[YOA].[YOA].[All],[Time Series].[Time Series].[YTD]),
										FORMAT_STRING = "#,##0.00 ;(#,##0.00)" ,
										VISIBLE = 1 ,  ASSOCIATED_MEASURE_GROUP = 'Amounts'  ;



										///////////////////////////////////////////////////////////////////
										///////// Wizi Ratios
										///////////////////////////////////////////////////////////////////
										CREATE HIDDEN SET [WiziRatioAccounts] AS
										{    [Account].[Account].&[1121006]
										,[Account].[Account].&[1121007]
										,[Account].[Account].&[1121008]
										,[Account].[Account].&[1122006]
										,[Account].[Account].&[1122007]
										,[Account].[Account].&[1122008]
										,[Account].[Account].&[1122009]
										,[Account].[Account].&[1122010]
										,[Account].[Account].&[1123006]
										,[Account].[Account].&[1123007]
										,[Account].[Account].&[1123008]
										,[Account].[Account].&[1123009]
										,[Account].[Account].&[1123010]
										};

										SCOPE ([Time Series].[Time Series].[LTD],[Data Stage].[Data Stage].&[1],[WiziRatioAccounts]);

										[Account].[Account].&[1121006] = -1 * DIVIDE(ROUND([Account].[Account].&[1121004],2) , ROUND([Account].[Account].&[1111002],2) );
										[Account].[Account].&[1121007] = -1 * DIVIDE(ROUND([Account].[Account].&[1121002],2) , ROUND([Account].[Account].&[1111002],2) );
										[Account].[Account].&[1121008] = -1 * DIVIDE(ROUND([Account].[Account].&[1121001],2) , ROUND([Account].[Account].&[1111001],2) );

										[Account].[Account].&[1122006] = -1 * DIVIDE(ROUND([Account].[Account].&[1122004],2) , ROUND([Account].[Account].&[1112002],2) );
										[Account].[Account].&[1122007] = -1 * DIVIDE(ROUND([Account].[Account].&[1122002],2) , ROUND([Account].[Account].&[1112002],2) );
										[Account].[Account].&[1122008] = -1 * DIVIDE(ROUND([Account].[Account].&[1122001],2) , ROUND([Account].[Account].&[1112001],2) );
										[Account].[Account].&[1122009] = -1 * DIVIDE(ROUND([Account].[Account].&[1122004],2) , ROUND([Account].[Account].&[1112005],2) );
										[Account].[Account].&[1122010] = -1 * DIVIDE(ROUND([Account].[Account].&[1122002],2) , ROUND([Account].[Account].&[1112005],2) );

										[Account].[Account].&[1123006] = -1 * DIVIDE(ROUND([Account].[Account].&[1123004],2) , ROUND([Account].[Account].&[1113002],2) );
										[Account].[Account].&[1123007] = -1 * DIVIDE(ROUND([Account].[Account].&[1123002],2) , ROUND([Account].[Account].&[1113002],2) );
										[Account].[Account].&[1123008] = -1 * DIVIDE(ROUND([Account].[Account].&[1123001],2) , ROUND([Account].[Account].&[1113001],2) );
										[Account].[Account].&[1123009] = -1 * DIVIDE(ROUND([Account].[Account].&[1123004],2) , ROUND([Account].[Account].&[1113005],2) );
										[Account].[Account].&[1123010] = -1 * DIVIDE(ROUND([Account].[Account].&[1123002],2) , ROUND([Account].[Account].&[1113005],2) );


										Format_String(THIS) = "Percent";
										END SCOPE;




										// Ultimate Scoping and Calcs - calculations are done at leaf level of CCY, YOA, TriFocus, Product and Entity
										//                              to ensure they are aggregated up correctly


										SCOPE(
										[Account].[Account].&[10100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[US]

										, MeasureGroupMeasures('Amounts')
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);
										SCOPE([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);

										This =

										iif( //if Prem Forecast GrsGrsPrem= 0 or isempty

										([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember))

										, // take live agresso * -1

										([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].&[135], [Measures].CurrentMember )  * -1

										, // else do the following to gross up numbers

										(
										Aggregate(
										(  {[Account].[Account].&[2000021],[Account].[Account].&[2000022],[Account].[Account].&[2000023]}
										,[Data Stage].[Data Stage].&[1] -- External Data
										, [Process].[Process Code].&[152] ) -- US
										, [Measures].CurrentMember
										)
										-

										(Aggregate(
										(  {[Account].[Account].&[10100],[Account].[Account].&[30100],[Account].[Account].&[30500]}
										,[Data Stage].[Data Stage].&[4] -- Live Agresso
										, [Process].[Process Code].&[135] )  -- UA
										, [Measures].CurrentMember
										))
										-
										([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].&[256], [Measures].CurrentMember )  -- large Losses 1D



										)

										/ //divide by (1 + Ext Comm % + Int Brok %)

										(1 +
										//    Ext Brokerage %
										(
										Divide (
										([Account].[Account].&[2000022],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember)
										,
										([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember) ,
										0)
										)

										+
										//   Int Commission %
										(
										Divide (
										([Account].[Account].&[2000023],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember)
										,
										([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember) ,
										0)
										)
										)
										);

										END SCOPE;

										END SCOPE;
										END SCOPE;
										// Top Up External Brokerage

										SCOPE(
										[Account].[Account].&[30100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].&[152]
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										, MeasureGroupMeasures('Amounts')
										);

										SCOPE
										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);

										SCOPE([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										This =

										iif( //if Prem Forecast GrsGrsPrem = 0 or isempty

										([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember))

										, // take live agresso * -1

										([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].&[135], [Measures].CurrentMember )  * -1


										, // Take scoped value above (Gross Premium Top Up)
										(
										([Account].[Account].&[10100],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152], [Measures].CurrentMember)
										)

										*
										//External Brokerage %
										(
										Divide (
										([Account].[Account].&[2000022],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember),
										([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember),
										0)

										)
										)

										//;

										// END SCOPE;

										// END SCOPE;

										+

										// Top Up Internal Commission
										/*
										SCOPE(
										[Account].[Account].&[30500]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].&[152]
										, MeasureGroupMeasures('Amounts')
										);

										SCOPE
										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);


										This =
										*/ // Removed 18/11/2016 all going to one account now

										iif( //if Prem Forecast GrsGrsPrem = 0 or isempty
										([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember))
										, // take live agresso * -1

										([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].&[135], [Measures].CurrentMember )  * -1

										, // else take scoped value for 10100 (first Ultimates scope  statement)

										(
										([Account].[Account].&[10100],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152], [Measures].CurrentMember)
										)

										*
										//Internal Commission %
										(
										Divide (
										([Account].[Account].&[2000023],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember)
										,
										([Account].[Account].&[2000021],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember),
										0)
										)
										);



										END SCOPE;
										END SCOPE;
										END SCOPE;
										// Opposite Postings to Debtor Account (split BUSA Trifocus)

										SCOPE(
										[Account].[Account].&[74102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].&[152]
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										, MeasureGroupMeasures('Amounts')
										);

										SCOPE Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);

										SCOPE([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										This =
										(
										(
										([Account].[Account].&[10100],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152], [Measures].CurrentMember)

										+

										([Account].[Account].&[30100],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152], [Measures].CurrentMember)

										+

										([Account].[Account].&[30500],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152], [Measures].CurrentMember)

										)

										/*    -

										Aggregate(
										(
										Exists([Tri focus].[Tri focus].CurrentMember, [Tri focus].[Tri focus Group].&[BUSA]),
										[Account].[Account].&[30500],
										[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152] )
										,[Measures].CurrentMember
										) */
										)
										* -1;


										END SCOPE;

										END SCOPE;
										END SCOPE;

										/* Removed 18/11/2016 as all Ultimates in one BS no BUSA Int Comm Split
										// BUSA Trifocus Internal Commission goes to 74280

										SCOPE(
										[Account].[Account].&[74280]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].&[152]
										, MeasureGroupMeasures('Amounts')
										);

										SCOPE Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);

										This =

										Aggregate(
										( Exists([Tri focus].[Tri focus].CurrentMember, [Tri focus].[Tri focus Group].&[BUSA]),
										[Account].[Account].&[30500],
										[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152] )
										,[Measures].CurrentMember
										) * -1;


										END SCOPE;

										END SCOPE;
										*/

										// Scope Reinsurance values for 2623 and 623 into 11101

										SCOPE(
										[Account].[Account].&[11101]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].&[152]
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										, MeasureGroupMeasures('Amounts')
										);

										SCOPE Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);
										SCOPE([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);

										This  =   ([Account].[Account].&[2000024],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember)
										-
										([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].&[136], [Measures].CurrentMember)
										-
										([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].[2D], [Measures].CurrentMember )
										-
										([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].[2H], [Measures].CurrentMember ) ;


										END SCOPE;

										END SCOPE;

										END SCOPE;
										// Scope opposite of above to 82101

										SCOPE(
										[Account].[Account].&[82101]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].&[152]
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										, MeasureGroupMeasures('Amounts')
										);

										SCOPE Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);
										SCOPE([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										This  =
										(
										([Account].[Account].&[2000024],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[152], [Measures].CurrentMember)
										-
										([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].&[136], [Measures].CurrentMember)
										-
										([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].[2D], [Measures].CurrentMember )
										-
										([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],
										[Process].[Process Code].[2H], [Measures].CurrentMember )
										) * -1;


										END SCOPE;

										END SCOPE;
										END SCOPE;
										// End Ultimate Adjustment Scoping
										///////////////////////////////////////////////////////////////////
										///////// COB Mapping
										///////////////////////////////////////////////////////////////////
										/*
										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[4]
										,[Lloyds Class Of Business].[Pk Lloyds Class Of Business].Members
										,[YOA].[YOA].[YOA].MEMBERS
										,[Tri Focus].[Tri Focus].[Tri Focus].MEMBERS

										);

										This = ([Measures].CurrentMember
										) *
										iif(
										([Lloyds Class Of Business].[Pk Lloyds Class Of Business].CurrentMember
										,[Measures].[Allocation Percent]) = 0
										OR
										ISEMPTY(([Lloyds Class Of Business].[Pk Lloyds Class Of Business].CurrentMember
										, [Measures].[Allocation Percent]
										))
										,
										NULL
										,
										(
										[Lloyds Class Of Business].[Pk Lloyds Class Of Business].CurrentMember
										,[Measures].[Allocation Percent]
										)/100
										);  //end if
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[1]
										,[Lloyds Class Of Business].[Pk Lloyds Class Of Business].Members
										,[YOA].[YOA].[YOA].MEMBERS
										,[Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,{[Source System].[Source System].&[4],[Source System].[Source System].&[3],[Source System].[Source System].&[1]}

										);

										This = ([Measures].CurrentMember
										) *
										iif(
										([Lloyds Class Of Business].[Pk Lloyds Class Of Business].CurrentMember
										,[Measures].[Allocation Percent]) = 0
										OR
										ISEMPTY(([Lloyds Class Of Business].[Pk Lloyds Class Of Business].CurrentMember
										, [Measures].[Allocation Percent]
										))
										,
										NULL
										,
										(
										[Lloyds Class Of Business].[Pk Lloyds Class Of Business].CurrentMember
										,[Measures].[Allocation Percent]
										)/100
										);  //end if
										END SCOPE;

										*/
										///////////////////////////////////////////////////////////////////
										///////// Eurobase EPI Acounts 1000012 to 1000017
										///////////////////////////////////////////////////////////////////
										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[135]
										,[Account].[Account].&[10100]
										,[Data Stage].[Data Stage].&[2],[Policy Section].[US Policy].[US Policy].Members);

										This =

										iif( //if US Policy Prem this will be empty
										([Account].[Account].&[1000012],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[1000012],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember))
										,

										([Account].[Account].&[10100],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[135], [Measures].CurrentMember )

										, // else take scoped value for 1000012 (Eurobase EPI value)
										(
										[Account].[Account].&[1000012]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[135]
										)
										);  //end if
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[135]
										,[Account].[Account].&[30100]
										,[Data Stage].[Data Stage].&[2],[Policy Section].[US Policy].[US Policy].Members);



										This =

										iif( //if US Policy Prem this will be empty
										([Account].[Account].&[1000013],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[1000013],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember))
										,

										([Account].[Account].&[30100],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[135], [Measures].CurrentMember )

										, // else take scoped value for 1000013 (Eurobase EPI value)
										(
										[Account].[Account].&[1000013]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[135]
										)
										);  //end if
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[135]
										,[Account].[Account].&[30101]
										,[Data Stage].[Data Stage].&[2],[Policy Section].[US Policy].[US Policy].Members);



										This =

										iif( //if US Policy Prem this will be empty
										([Account].[Account].&[1000017],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[1000017],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember))
										,

										([Account].[Account].&[30101],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[135], [Measures].CurrentMember )

										, // else take scoped value for 1000013 (Eurobase EPI value)
										(
										[Account].[Account].&[1000017]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[135]
										)
										);  //end if
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[135]
										,[Account].[Account].&[50432]
										,[Data Stage].[Data Stage].&[2],[Policy Section].[US Policy].[US Policy].Members);



										This =

										iif( //if US Policy Prem this will be empty
										([Account].[Account].&[1000017],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[1000017],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember))
										,

										-0.9* ([Account].[Account].&[30101],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[135], [Measures].CurrentMember )

										, // else take scoped value for 1000013 (Eurobase EPI value)
										-0.9*(
										[Account].[Account].&[1000017]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[135]
										)
										);  //end if
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[135]
										,[Account].[Account].&[74405]
										,[Data Stage].[Data Stage].&[2],[Policy Section].[US Policy].[US Policy].Members);



										This =

										iif( //if US Policy Prem this will be empty
										([Account].[Account].&[1000017],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[1000017],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember))
										,

										0.9*([Account].[Account].&[30101],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[135], [Measures].CurrentMember )

										, // else take scoped value for 1000013 (Eurobase EPI value)
										0.9*(
										[Account].[Account].&[1000017]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[135]
										)
										);  //end if
										END SCOPE;


										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[135]
										,[Account].[Account].&[74102]
										,[Data Stage].[Data Stage].&[2],[Policy Section].[US Policy].[US Policy].Members);



										This =

										iif( //if US Policy Prem this will be empty
										([Account].[Account].&[1000014],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember) = 0
										OR
										ISEMPTY(([Account].[Account].&[1000014],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].&[135], [Measures].CurrentMember))
										,

										([Account].[Account].&[74102],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[135], [Measures].CurrentMember )

										, // else take scoped value for 1000013 (Eurobase EPI value)
										(
										[Account].[Account].&[1000014]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[135]
										)
										);  //end if
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[136]
										,[Account].[Account].&[11101]
										,[Data Stage].[Data Stage].&[2]);

										THIS =
										(
										[Account].[Account].&[1000015]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[136]
										);
										END SCOPE;
										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].&[136]
										,[Account].[Account].&[82101]
										,[Data Stage].[Data Stage].&[2]);

										THIS =
										(
										[Account].[Account].&[1000016]
										,[Data Stage].[Data Stage].&[1]
										,[Process].[Process Code].&[136]
										);
										END SCOPE;

										///////// End of Eurobase EPI
                                          ///////////////////////////////////////////////////////////////////
										///////// BIDAC Contract
										///////////////////////////////////////////////////////////////////
                                        CREATE HIDDEN SET [BIDACContractAccounts] AS
										{
                                        [Account].[Account].&[80200],
                                        [Account].[Account].&[22200],
                                        [Account].[Account].&[73200],
                                        [Account].[Account].&[23400],
                                        [Account].[Account].&[10100],
                                        [Account].[Account].&[74102],
                                        [Account].[Account].&[11100],
                                        [Account].[Account].&[82100]

                                        };
                                        

                                        SCOPE ( [Process].[Process Code].[QB],[Data Stage].[Data Stage].&[2],[BIDACContractAccounts]);
										
                                        ([Entity].[Entity].[BRQS],[Account].[Account].&[80200]) = ([Entity].[Entity].[BRQS],[Account].[Account].&[80200],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[BRQS],[Account].[Account].&[22200]) = ([Entity].[Entity].[BRQS],[Account].[Account].&[80200],[Data Stage].[Data Stage].&[1])*-1;
                                        ([Entity].[Entity].[BUQS],[Account].[Account].&[73200]) = ([Entity].[Entity].[BUQS],[Account].[Account].&[73200],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[BUQS],[Account].[Account].&[23400]) = ([Entity].[Entity].[BUQS],[Account].[Account].&[73200],[Data Stage].[Data Stage].&[1])*-1;
                                        ([Entity].[Entity].[QSGAAP],[Account].[Account].&[80200]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[80200],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[QSGAAP],[Account].[Account].&[22200]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[80200],[Data Stage].[Data Stage].&[1])*-1;
                                        ([Entity].[Entity].[QSGAAP],[Account].[Account].&[73200]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[73200],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[QSGAAP],[Account].[Account].&[23400]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[73200],[Data Stage].[Data Stage].&[1])*-1;
                                        ([Entity].[Entity].[QSGAAP],[Account].[Account].&[10100]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[10100],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[QSGAAP],[Account].[Account].&[74102]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[74102],[Data Stage].[Data Stage].&[1]);
                                        ([Entity].[Entity].[QSGAAP],[Account].[Account].&[11100]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[11100],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[QSGAAP],[Account].[Account].&[82100]) = ([Entity].[Entity].[QSGAAP],[Account].[Account].&[82100],[Data Stage].[Data Stage].&[1]);
                                        ([Entity].[Entity].[BRQS],[Account].[Account].&[10100]) = ([Entity].[Entity].[BRQS],[Account].[Account].&[10100],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[BRQS],[Account].[Account].&[74102]) = ([Entity].[Entity].[BRQS],[Account].[Account].&[74102],[Data Stage].[Data Stage].&[1]);
                                        ([Entity].[Entity].[BUQS],[Account].[Account].&[11100]) = ([Entity].[Entity].[BUQS],[Account].[Account].&[11100],[Data Stage].[Data Stage].&[1]);
										([Entity].[Entity].[BUQS],[Account].[Account].&[82100]) = ([Entity].[Entity].[BUQS],[Account].[Account].&[82100],[Data Stage].[Data Stage].&[1]);
                                                                                  
                                        
                                       
                                        
										END SCOPE;

										///////////////////////////////////////////////////////////////////
										///////// EIC EPI Acounts
										///////////////////////////////////////////////////////////////////



										CREATE MEMBER CURRENTCUBE.[Process].[Process].[All].[ARPremProcesses]
										AS
										AGGREGATE(
										{
										[Process].[Process Code].[R1]
										,[Process].[Process Code].[R2]
										,[Process].[Process Code].[R3]
										,[Process].[Process Code].[R4]
										,[Process].[Process Code].[R5]
										,[Process].[Process Code].[R6]
										,[Process].[Process Code].[R8]
										,[Process].[Process Code].[R9]
										,[Process].[Process Code].[RV]
										}
										),
										NON_EMPTY_BEHAVIOR = 0,
										VISIBLE = 0,
										FORMAT_STRING = "#,##0.00;(#,##0.00)";



										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[UA]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
										);
										THIS = ([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1]);
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[UA]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
										,[Account].[Account].&[74102]
										);
										THIS = ([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1],[Account].[Account].&[74100])
										+([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1],[Account].[Account].&[74102])
										;
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[UA]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
										,[Account].[Account].&[82007]
										);
										THIS = ([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1],[Account].[Account].&[82006])
										+([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1],[Account].[Account].&[82007])
										;
										END SCOPE;



									// R7

                                        SCOPE
                                        ( MEASUREGROUPMEASURES( 'Amounts' )
                                        ,[Process].[Process Code].[R7]
                                        ,[Data Stage].[Data Stage].&[2]
                                        ,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
                                        );
                                        THIS =  ([Data Stage].[Data Stage].&[1])
                                               +([Data Stage].[Data Stage].&[1],[Process].[Process Code].[RN])
                                               +([Data Stage].[Data Stage].&[1],[Process].[Process Code].[IP]);
                                        END SCOPE;

                                        SCOPE
                                        ( MEASUREGROUPMEASURES( 'Amounts' )
                                        ,[Process].[Process Code].[R7]
                                        ,[Data Stage].[Data Stage].&[2]
                                        ,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
                                        ,[Account].[Account].&[74102]
                                        );
                                        THIS = 
                                        (
                                          ([Data Stage].[Data Stage].&[1],[Account].[Account].&[74100])
                                         +([Data Stage].[Data Stage].&[1],[Account].[Account].&[74102])
                                        )
                                        +
                                        (
                                          ([Data Stage].[Data Stage].&[1],[Account].[Account].&[74100],[Process].[Process Code].[RN])
                                         +([Data Stage].[Data Stage].&[1],[Account].[Account].&[74102],[Process].[Process Code].[RN])
                                        )
                                        +
                                        (
                                          ([Data Stage].[Data Stage].&[1],[Account].[Account].&[74100],[Process].[Process Code].[IP])
                                         +([Data Stage].[Data Stage].&[1],[Account].[Account].&[74102],[Process].[Process Code].[IP])
                                        );
                                        END SCOPE;

                                        SCOPE
                                        ( MEASUREGROUPMEASURES( 'Amounts' )
                                        ,[Process].[Process Code].[R7]
                                        ,[Data Stage].[Data Stage].&[2]
                                        ,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
                                        ,[Account].[Account].&[82007]
                                        );
                                        THIS = 
                                        (
                                          ([Data Stage].[Data Stage].&[1],[Account].[Account].&[82006])
                                         +([Data Stage].[Data Stage].&[1],[Account].[Account].&[82007])
                                        )
                                        +
                                        (
                                          ([Data Stage].[Data Stage].&[1],[Account].[Account].&[82006],[Process].[Process Code].[RN])
                                         +([Data Stage].[Data Stage].&[1],[Account].[Account].&[82007],[Process].[Process Code].[RN])
                                        )
                                        +
                                        (
                                          ([Data Stage].[Data Stage].&[1],[Account].[Account].&[82006],[Process].[Process Code].[IP])
                                         +([Data Stage].[Data Stage].&[1],[Account].[Account].&[82007],[Process].[Process Code].[IP])
                                        );
                                        END SCOPE;




										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[RB]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
										);
										THIS = ([Data Stage].[Data Stage].&[1]);
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[RB]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
										,[Account].[Account].&[74102]
										);
										THIS = ([Data Stage].[Data Stage].&[1],[Account].[Account].&[74100])
										+([Data Stage].[Data Stage].&[1],[Account].[Account].&[74102]);
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[RB]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
										,[Account].[Account].&[82007]
										);
										THIS = ([Data Stage].[Data Stage].&[1],[Account].[Account].&[82006])
										+([Data Stage].[Data Stage].&[1],[Account].[Account].&[82007]);
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BIFR],[Entity].[Entity].[BIUK],[Entity].[Entity].[BISP],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISW]}
										,{[Account].[Account].&[82006],[Account].[Account].&[74100]}
										);
										THIS = NULL;
										END SCOPE;

										////////////////////////////////////////////
										///////BSOL AR 2 GL/////////////////////////
										////////////////////////////////////////////



										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[UA]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BSOLFR],[Entity].[Entity].[BSOLUK],[Entity].[Entity].[BSOLSP],[Entity].[Entity].[BSOLGE]}
										);
										THIS = ([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1]);
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[UA]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BSOLFR],[Entity].[Entity].[BSOLUK],[Entity].[Entity].[BSOLSP],[Entity].[Entity].[BSOLGE]}
										,[Account].[Account].&[74110]
										);
										THIS = ([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1],[Account].[Account].&[74100])
										+([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1],[Account].[Account].&[74102])
										+([Process].[Process].[All].[ARPremProcesses],[Data Stage].[Data Stage].&[1],[Account].[Account].&[74110])
										;
										END SCOPE;



										////JV////

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[R7]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BSOLFR],[Entity].[Entity].[BSOLUK],[Entity].[Entity].[BSOLSP],[Entity].[Entity].[BSOLGE]}
										);
										THIS = ([Data Stage].[Data Stage].&[1]);
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[R7]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BSOLFR],[Entity].[Entity].[BSOLUK],[Entity].[Entity].[BSOLSP],[Entity].[Entity].[BSOLGE]}
										,[Account].[Account].&[74110]
										);
										THIS = ([Data Stage].[Data Stage].&[1],[Account].[Account].&[74100])
										+([Data Stage].[Data Stage].&[1],[Account].[Account].&[74102])
										+([Data Stage].[Data Stage].&[1],[Account].[Account].&[74110]);
										END SCOPE;

										////RB////


										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[RB]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BSOLFR],[Entity].[Entity].[BSOLUK],[Entity].[Entity].[BSOLSP],[Entity].[Entity].[BSOLGE]}
										);
										THIS = ([Data Stage].[Data Stage].&[1]);
										END SCOPE;

										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Process].[Process Code].[RB]
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BSOLFR],[Entity].[Entity].[BSOLUK],[Entity].[Entity].[BSOLSP],[Entity].[Entity].[BSOLGE]}
										,[Account].[Account].&[74110]
										);
										THIS = ([Data Stage].[Data Stage].&[1],[Account].[Account].&[74100])
										+([Data Stage].[Data Stage].&[1],[Account].[Account].&[74102])
										+([Data Stage].[Data Stage].&[1],[Account].[Account].&[74110]);
										END SCOPE;


										SCOPE
										( MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[BSOLFR],[Entity].[Entity].[BSOLUK],[Entity].[Entity].[BSOLSP],[Entity].[Entity].[BSOLGE]}
										,{[Account].[Account].&[82006],[Account].[Account].&[74100],[Account].[Account].&[74102]}
										);
										THIS = NULL;
										END SCOPE;

										///////////////////////////////////////////////////////////////////
										///////// END of EIC BSOL Acounts
										///////////////////////////////////////////////////////////////////



										///////////////////////////////////////////////////////////////////
										///////// TP Data calcs
										///////////////////////////////////////////////////////////////////


										SCOPE(
										[Account].[Account].&[80720]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										THIS = (
										([Account].[Account].&[1180021],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180022],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180005],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180006],[Data Stage].[Data Stage].&[1])
										)  *-1;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[80720]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = NULL;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[80740]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = (
										([Account].[Account].&[1180021],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180022],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180005],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180006],[Data Stage].[Data Stage].&[1])
										)  *-1;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[80700]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[BERE]
										, [Entity].[Entity].[BERE]
										);

										THIS = (
										([Account].[Account].&[1180021],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180022],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180005],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180006],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180021],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180022],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180005],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180006],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180021],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										+ ([Account].[Account].&[1180022],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										+ ([Account].[Account].&[1180005],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										+ ([Account].[Account].&[1180006],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										)  *-0.75;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[80730]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										THIS = (
										([Account].[Account].&[1180023],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180024],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180007],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180008],[Data Stage].[Data Stage].&[1])
										)  *-1;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[80730]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = NULL;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[80750]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = (
										([Account].[Account].&[1180023],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180024],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180007],[Data Stage].[Data Stage].&[1])
										+ ([Account].[Account].&[1180008],[Data Stage].[Data Stage].&[1])
										)  *-1;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[80710]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[BERE]
										, [Entity].[Entity].[BERE]
										);

										THIS = (
										([Account].[Account].&[1180023],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180024],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180007],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180008],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180023],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180024],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180007],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180008],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180023],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										+ ([Account].[Account].&[1180024],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										+ ([Account].[Account].&[1180007],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										+ ([Account].[Account].&[1180008],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										)  *-0.75;

										END SCOPE;


										SCOPE(
										[Account].[Account].&[73710]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										THIS = (
										([Account].[Account].&[80720])-([Account].[Account].&[80730]  )
										)  *-1;

										END SCOPE;
										SCOPE(
										[Account].[Account].&[73710]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = NULL;
										END SCOPE;

										SCOPE(
										[Account].[Account].&[73720]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = (
										([Account].[Account].&[80740])-([Account].[Account].&[80750]  )
										)  *-1;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[73700]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[BERE]
										, [Entity].[Entity].[BERE]
										);

										THIS = (0.00);

										END SCOPE;


										SCOPE(
										[Account].[Account].&[74102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										THIS = (
										([Account].[Account].&[1180001],[Data Stage].[Data Stage].&[1])
										);

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = 0.00;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[BERE]
										, [Entity].[Entity].[BERE]
										);

										THIS = (
										([Account].[Account].&[1180003],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180004],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3623])
										+ ([Account].[Account].&[1180003],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180004],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[2623])
										+ ([Account].[Account].&[1180003],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										+ ([Account].[Account].&[1180004],[Data Stage].[Data Stage].&[1],[Entity].[Entity].[3622])
										)  *0.75;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74430]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[BERE]
										, [Entity].[Entity].[BERE]
										);

										THIS = 0.00;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74430]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										THIS = (
										([Account].[Account].&[1180002],[Data Stage].[Data Stage].&[1])
										);

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74430]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Entity Code].&[6050]
										, [Entity].[Entity].[6050]
										);

										THIS = (
										([Account].[Account].&[1180001],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[1180002],[Data Stage].[Data Stage].&[1])
										);

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74440]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Entity Code].&[BERE]
										, [Entity].[Entity].[BERE]
										);

										THIS = 0.00;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74440]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[TP]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										THIS = ((
										([Account].[Account].&[1180001],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[1180002],[Data Stage].[Data Stage].&[1])
										)
										-
										(
										([Account].[Account].&[1180003],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[1180004],[Data Stage].[Data Stage].&[1])
										)) *-1
										;

										END SCOPE;


										///////////////////////////////////////////////////////////////////
										///////// END OF TP Data calcs
										///////////////////////////////////////////////////////////////////


										CREATE MEMBER CURRENTCUBE.[Account].[Account].[All].[Loss and LAE Reserves]
										AS
										AGGREGATE(
										{
										[Account].[Account].&[80200] ,
										[Account].[Account].&[80250] ,
										[Account].[Account].&[80275] ,
										[Account].[Account].&[80300] ,
										[Account].[Account].&[80340] ,
										[Account].[Account].&[73200] ,
										[Account].[Account].&[73210] ,
										[Account].[Account].&[73250] ,
										[Account].[Account].&[73255] ,
										[Account].[Account].&[73260] ,
										[Account].[Account].&[73300] ,
										[Account].[Account].&[73310] ,
										[Account].[Account].&[73370] ,
										[Account].[Account].&[73380]
										}
										),
										NON_EMPTY_BEHAVIOR = 0,
										VISIBLE = 0;


										CREATE MEMBER CURRENTCUBE.[Entity].[Entity].[All].[USBICISYND]
										AS
										AGGREGATE(
										{
										[Entity].[Entity].[USBICI],
										[Entity].[Entity].[USSYND],
                                        [Entity].[Entity].[USBESI]
										}
										),
										NON_EMPTY_BEHAVIOR = 0,
										VISIBLE = 0;

										CREATE MEMBER CURRENTCUBE.[Entity].[Entity].[All].[USALLENTITIES]
										AS
										AGGREGATE(
										{
										[Entity].[Platform].&[US]
										}
										),
										NON_EMPTY_BEHAVIOR = 0,
										VISIBLE = 0;

										//EI Process Code for USUKConsol

										SCOPE ( {[Data Stage].[Data Stage].&[2]} ,[Account].[Account].&[1170001],[Time Series].[Time Series].[YTD],[Process].[Process Code].[EI],{[Entity].[Entity].[USBICI]});
										THIS
										=
										aggregate( (
										[Measures].[TFYOA%],[Data Stage].[Data Stage].&[4],[Account].[Account].[All].[Loss and LAE Reserves]
										,[Process].[Process Code].[ALL]
										) )
										;

										END SCOPE;

										SCOPE ( {[Data Stage].[Data Stage].&[2]}
										,[Measures].[Cur Amount],[Entity].[Entity].[USUKCONSOL],[Time Series].[Time Series].[YTD],[Process].[Process Code].[EI]
										,[Tri Focus].[Tri Focus].[Tri Focus].Members
										,
										{
										[Account].[Account].&[60100],
										[Account].[Account].&[60200],
										[Account].[Account].&[60210],
										[Account].[Account].&[60220],
										[Account].[Account].&[60260],
										[Account].[Account].&[60300],
										[Account].[Account].&[60400],
										[Account].[Account].&[60405],
										[Account].[Account].&[60500],
										[Account].[Account].&[60800]
										}
										,[YOA].[YOA].[YOA].Members
										);

										([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[EI],[YOA].[YOA].[ALL])=NULL;
										([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[EI],[YOA].[YOA].[ALL])=NULL;
										([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[EI],[YOA].[YOA].[ALL])=NULL;
										([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[EI],[YOA].[YOA].[ALL])=NULL;
										([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[EI],[YOA].[YOA].[ALL])=NULL;

										THIS =(
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z110],[Entity].[Entity].[USBICI],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z100],[Entity].[Entity].[USBICI],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z139],[Entity].[Entity].[USBICI],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z146],[Entity].[Entity].[USBICI],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z170],[Entity].[Entity].[USBICI],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z110],[Entity].[Entity].[USBUSA],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z100],[Entity].[Entity].[USBUSA],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z139],[Entity].[Entity].[USBUSA],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z146],[Entity].[Entity].[USBUSA],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z170],[Entity].[Entity].[USBUSA],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z110],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z100],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z139],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z146],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])+
										([Data Stage].[Data Stage].&[4],[Tri Focus].[Tri Focus].[Z170],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])
										)*([Account].[Account].&[1170001],[Entity].[Entity].[USBICI],[YOA].[YOA].[ALL])
										;
										END SCOPE;


										SCOPE ( {[Data Stage].[Data Stage].&[2]}
										,[Measures].[Cur Amount],[Entity].[Entity].[USUKCONSOL],[Time Series].[Time Series].[YTD],[Process].[Process Code].[EI]
										,
										{
										[Tri Focus].[Tri Focus].[Z110],
										[Tri Focus].[Tri Focus].[Z100],
										[Tri Focus].[Tri Focus].[Z139],
										[Tri Focus].[Tri Focus].[Z146],
										[Tri Focus].[Tri Focus].[Z170]
										}
										,
										{
										[Account].[Account].&[60100],
										[Account].[Account].&[60200],
										[Account].[Account].&[60210],
										[Account].[Account].&[60220],
										[Account].[Account].&[60260],
										[Account].[Account].&[60300],
										[Account].[Account].&[60400],
										[Account].[Account].&[60405],
										[Account].[Account].&[60500],
										[Account].[Account].&[60800]
										}
										,[YOA].[YOA].[YOA].Members
										);

										([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[EI],[YOA].[YOA].[ALL])=NULL;

										THIS = (([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USBICI],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])
										+([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USBUSA],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL])
										+([Data Stage].[Data Stage].&[4],[Entity].[Entity].[USUKCONSOL],[Process].[Process Code].[ALL],[YOA].[YOA].[ALL]))*-1;

										END SCOPE;

										//END of EI Process Code for USUKConsol



										SCOPE ( {[Data Stage].[Data Stage].&[2]}
										,[Account].[Account].&[1170002]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[Process].[Process Code].[EC],[Tri Focus].[Tri Focus].[Tri Focus].Members, { [Entity].[Entity].[USBICI], [Entity].[Entity].[USSYND]}
										,[YOA].[YOA].[ALL]
										);
										THIS
										=
										DIVIDE(
										(
										[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[10100]
										,[Process].[Process Code].[ALL]
										)
										,
										(
										[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[10100]
										,[Entity].[Entity].[All].[USBICISYND]
										,[Process].[Process Code].[ALL]
										,[Tri Focus].[Trifocus Grouping].CurrentMember.Parent
										)
										);
										END SCOPE;

										SCOPE ( {[Data Stage].[Data Stage].&[2]}
										,[Account].[Account].&[1170004]
										,[Time Series].[Time Series].[Current Period]
										,[Process].[Process Code].[EC],[Tri Focus].[Tri Focus].[Tri Focus].Members, { [Entity].[Entity].[USCONSUS]}
										);
										THIS
										=
										DIVIDE(

										(
										[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[51324]
										,[Process].[Process Code].[ALL]
										,[YOA].[YOA].[ALL]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										,
										(
										[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[51324]
										,[Entity].[Entity].[All].[USALLENTITIES]
										,[Process].[Process Code].[ALL]
										,[YOA].[YOA].[ALL]
										,[Tri Focus].[Tri Focus].[S140]
										)

										)
										;
										END SCOPE;


										SCOPE ( {[Data Stage].[Data Stage].&[2]}
										,[Account].[Account].&[1170003]
										,[Time Series].[Time Series].[Current Period]
										,[Process].[Process Code].[EC],[Tri Focus].[Tri Focus].[Tri Focus].Members, { [Entity].[Entity].[USCONSUS]}
										);
										THIS
										=
										DIVIDE(

										(
										[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[51325]
										,[Process].[Process Code].[ALL]
										,[YOA].[YOA].[ALL]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										,
										(
										[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[51325]
										,[Entity].[Entity].[All].[USALLENTITIES]
										,[Process].[Process Code].[ALL]
										,[YOA].[YOA].[ALL]
										,[Tri Focus].[Tri Focus].[P130]
										)

										)
										;
										END SCOPE;

										SCOPE (  MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[2]
										,[Account].[Account].&[1170005]
										,[Process].[Process Code].[EC]
										,[Tri Focus].[Tri Focus].[Tri Focus].Members

										);

										([Entity].[Entity].[USCONSUS],[Target Entity].[Target Entity].[USCONSUS])=
										((
										[Data Stage].[Data Stage].&[4]
										,[Account Tree].[Account Tree].&[16_10_10_10_10_100_10_1000_500_500_10_500_100_500_1000_5000_10_5000_100],[Account].[Account].[All]
										,[Process].[Process Code].[ALL]
										,[Tri Focus].[Tri Focus].[S140]
										,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[All]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										*
										(
										[Account].[Account].&[1170004]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Current Period]

										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All]
										)
										* -1
										)
										+
										((
										[Data Stage].[Data Stage].&[4]
										,[Account Tree].[Account Tree].&[16_10_10_10_10_100_10_1000_500_500_10_500_100_500_1000_5000_10_5000_100],[Account].[Account].[All]
										,[Process].[Process Code].[ALL]
										,[Tri Focus].[Tri Focus].[P130]
										,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[All]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										*
										(
										[Account].[Account].&[1170003]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Current Period]

										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All]
										)
										* -1
										)
										;


										END SCOPE;

										SCOPE (  MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[2]
										,[Account].[Account].&[1170005]
										,[Process].[Process Code].[EC]
										,[Tri Focus].[Tri Focus].[S140]
										,[Entity].[Entity].[USCONSUS]
										);

										([Target Entity].[Target Entity].[USCONSUS])=  NULL;
										END SCOPE;



										SCOPE (  MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[2]
										//,[Account].[Account].&[51600]
										,[Process].[Process Code].[EC]
										,[Tri Focus].[Tri Focus].[Tri Focus].Members
										,[Entity].[Entity].[USCONSUS]
										);

										([Target Entity].[Target Entity].[USBICI],[Account].[Account].&[51600])=
										IIF(
										([YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")   )
										,((
										[Data Stage].[Data Stage].&[4]
										,[Account Tree].[Account Tree].&[16_10_10_10_10_100_10_1000_500_500_10_500_100_500_1000_5000_10_5000_100],[Account].[Account].[All]
										,[Process].[Process Code].[ALL],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent
										,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[All]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USBICI]
										) * -1
										) +
										(([Account].[Account].&[1170005],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[USCONSUS])*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USBICI]
										) * -1)
										,NULL
										)

										;

										([Target Entity].[Target Entity].[USBUSA],[Account].[Account].&[51600])=
										IIF( (   [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")     )
										,((
										[Data Stage].[Data Stage].&[4]
										,[Account Tree].[Account Tree].&[16_10_10_10_10_100_10_1000_500_500_10_500_100_500_1000_5000_10_5000_100],[Account].[Account].[All]
										,[Process].[Process Code].[ALL],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent
										,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[All]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USSYND]
										) * -1 )
										+   (([Account].[Account].&[1170005],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[USCONSUS])*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USSYND]
										) * -1)
										,NULL)
										;



										END SCOPE;

										SCOPE (  MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[2]
										//,[Account].[Account].&[51600]
										,[Process].[Process Code].[EC]
										,[Tri Focus].[Tri Focus].[Tri Focus].Members
										,[Entity].[Entity].[USCONSUS]
										);

										([Target Entity].[Target Entity].[USBICI],[Account].[Account].&[30300])=
										IIF( (   [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")     )
										,   ((
										[Data Stage].[Data Stage].&[4]
										,[Account Tree].[Account Tree].&[16_10_10_10_10_100_10_1000_500_500_10_500_100_500_1000_5000_10_5000_100],[Account].[Account].[All]
										,[Process].[Process Code].[ALL],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent
										,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[All]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USBICI]
										)
										) +
										(([Account].[Account].&[1170005],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[USCONSUS])*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USBICI]
										) )
										, NULL
										)
										;

										([Target Entity].[Target Entity].[USBUSA],[Account].[Account].&[30300])=
										IIF( (   [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")     )
										,((
										[Data Stage].[Data Stage].&[4]
										,[Account Tree].[Account Tree].&[16_10_10_10_10_100_10_1000_500_500_10_500_100_500_1000_5000_10_5000_100],[Account].[Account].[All]
										,[Process].[Process Code].[ALL],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent
										,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[All]
										,[Entity].[Entity].[All].[USALLENTITIES]
										)
										*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USSYND]
										) )
										+   (([Account].[Account].&[1170005],[Tri Focus].[Trifocus Grouping].CurrentMember.Parent,[YOA].[YOA].[ALL],[Target Entity].[Target Entity].[USCONSUS])*
										(
										[Account].[Account].&[1170002]
										,[Process].[Process Code].[EC]
										,[Time Series].[Time Series].[Rolling Year Avg]
										,[YOA].[YOA].[ALL]
										,[Data Stage].[Data Stage].&[2],[Target Entity].[Target Entity].[All], [Entity].[Entity].[USSYND]
										) )
										,NULL
										)
										;



										END SCOPE;


										// RI Spend Calcs



										// Acc Non Munich QS (2B)

										SCOPE(
										[Account].[Account].&[11102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2B]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);


										This =
										iif (

										(  ROUND(([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B],[Measures].CurrentMember ),2) = 0.00
										OR IsEmpty(([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B],[Measures].CurrentMember)) )


										AND

										ROUND(([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B],[Measures].CurrentMember ),2) > 0.00

										,

										([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2B],[Measures].CurrentMember)
										,
										// else



										(
										Divide(
										([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2B],[Measures].CurrentMember )
										,
										([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2B],[Measures].CurrentMember )
										,0)
										)




										*

										(         -- change to Data Stage 2 (Base Allocation)
										Aggregate(
										({[Account].[Account].&[10100], [Account].[Account].&[10200], [Account].[Account].&[30100], [Account].[Account].&[30200],[Account].[Account].&[30500]}
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[UA] )
										, [Measures].CurrentMember
										)
										+

										Aggregate(
										({[Account].[Account].&[10100], [Account].[Account].&[10200], [Account].[Account].&[30100], [Account].[Account].&[30200],[Account].[Account].&[30500]}
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[UJ] )
										, [Measures].CurrentMember
										)
										+

										Aggregate(
										({[Account].[Account].&[10100], [Account].[Account].&[10200], [Account].[Account].&[30100], [Account].[Account].&[30200], [Account].[Account].&[30500]}
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[UK] )
										, [Measures].CurrentMember
										)

										+

										Aggregate(
										({[Account].[Account].&[10100], [Account].[Account].&[10200], [Account].[Account].&[30100], [Account].[Account].&[30200], [Account].[Account].&[30500]}
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[US] )
										, [Measures].CurrentMember
										)

										+

										Aggregate(
										({[Account].[Account].&[10100], [Account].[Account].&[10200], [Account].[Account].&[30100], [Account].[Account].&[30200], [Account].[Account].&[30500]}
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[1E] )
										, [Measures].CurrentMember
										)

										+

										([Account].[Account].&[10355]
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[1D]
										,[Measures].CurrentMember )

										)

										);



										END SCOPE;

										END SCOPE;



										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2B]
										, MeasureGroupMeasures('Amounts')
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[11102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2B]
										) * -1;

										END SCOPE;

										// Dont' Aggregate Percentages

										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[2000066]}
										);

										This = [Time Series].[Time Series].[Current Period] / 100 ;


										Format_String (THIS) = "Percent";
										END SCOPE;

										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[2000067]}
										);

										This = [Time Series].[Time Series].[Current Period] / 100;


										Format_String (THIS) = "Percent";
										END SCOPE;

										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[2000068]}
										);

										This = [Time Series].[Time Series].[Current Period] / 100;


										Format_String (THIS) = "Percent";
										END SCOPE;

										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[2000069]}
										);

										This = [Time Series].[Time Series].[Current Period] / 100;


										Format_String (THIS) = "Percent";
										END SCOPE;

										// FAC XL (2A)
										SCOPE(
										[Account].[Account].&[11100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2A]
										, MeasureGroupMeasures('Amounts')
										, [Policy Section].[Section Reference].&[NONBINDER]
										,[Earnings].[Earning Type].&[Non-Binder]
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);


										This =
										([Account].[Account].&[2000061],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2A],[Measures].CurrentMember
										,[Policy Section].[Section Reference].&[Unknown]
										,[Earnings].[Earning Type].&[Non-Binder]);


										//   END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2A]
										, MeasureGroupMeasures('Amounts')
										, [Earnings].[Earning Type].&[Non-Binder]
										, [Policy Section].[Section Reference].&[NONBINDER]
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[11100],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].[2A],
										[Measures].CurrentMember,
										[Earnings].[Earning Type].&[Non-Binder],
										[Policy Section].[Section Reference].&[NONBINDER]) * -1;

										END SCOPE;


										SCOPE(
										[Account].[Account].&[11100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2A]
										, MeasureGroupMeasures('Amounts')
										, [Policy Section].[Section Reference].&[BINDER]
										,[Earnings].[Earning Type].&[Binder]
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);


										This =
										([Account].[Account].&[2000061],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2A],[Measures].CurrentMember
										,[Policy Section].[Section Reference].&[Unknown]
										,[Earnings].[Earning Type].&[Binder]);


										//   END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2A]
										, MeasureGroupMeasures('Amounts')
										,[Earnings].[Earning Type].&[Binder]
										, [Policy Section].[Section Reference].&[BINDER]
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[11100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2A]
										,[Measures].CurrentMember
										,[Policy Section].[Section Reference].&[BINDER]
										,[Earnings].[Earning Type].&[Binder]) * -1;

										END SCOPE;


										// EIC RI Spend Non Munich Non Prop - 2A
										SCOPE(
										{[Account].[Account].&[11100],[Account].[Account].&[82100]}//,[Account].[Account].&[74530],[Account].[Account].&[74577],[Account].[Account].&[74578]
										//,[Account].[Account].&[74576],[Account].[Account].&[74575],[Account].[Account].&[74589]}
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2A]
										, [Measures].[Cur Amount]
										, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										, [Time Series].[Time Series].[LTD]
										);

										// 11100 Branch
										([Policy Section].[Section Reference].&[NONBINDER],[Earnings].[Earning Type].&[Non-Binder],[Account].[Account].&[11100])
										= ([Account].[Account].&[2000061],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2A],[Measures].CurrentMember
										,[Policy Section].[Section Reference].&[Unknown]);
										([Policy Section].[Section Reference].&[BINDER],[Earnings].[Earning Type].&[Binder],[Account].[Account].&[11100])
										= ([Account].[Account].&[2000061],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2A],[Measures].CurrentMember
										,[Policy Section].[Section Reference].&[Unknown]);
                                         
                                        ([Account].[Account].&[82100]) = ([Account].[Account].&[11100]) * -1;
                                        /*
										// InterCompnay Branch Account (74530)
										//([Account].[Account].&[74530]) = ([Account].[Account].&[11100]) * -1;
                                        
										// InterCompnay Head Office Account
										([Account].[Account].&[74577],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11100],[Entity].[Entity].[BIFR]);
										([Account].[Account].&[74578],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11100],[Entity].[Entity].[BIGE]);
										([Account].[Account].&[74576],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11100],[Entity].[Entity].[BISP]);
										([Account].[Account].&[74575],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11100],[Entity].[Entity].[BIUK]);
                                        ([Account].[Account].&[74589],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11100],[Entity].[Entity].[BISW]);

										// 82100 for HO
										([Account].[Account].&[82100],[Entity].[Entity].[BERE]) = (([Account].[Account].&[11100],[Entity].[Entity].[BIFR])
										+([Account].[Account].&[11100],[Entity].[Entity].[BISP])
										+([Account].[Account].&[11100],[Entity].[Entity].[BIGE])
                                        +([Account].[Account].&[11100],[Entity].[Entity].[BISW])
										+([Account].[Account].&[11100],[Entity].[Entity].[BIUK]) ) * -1;*/
										//   END SCOPE;
										END SCOPE;

										// EIC RI Spend Non Munich Prop - 2B
										SCOPE(
										{[Account].[Account].&[11102],[Account].[Account].&[82100]}//,[Account].[Account].&[74530],[Account].[Account].&[74577],[Account].[Account].&[74578]
										//,[Account].[Account].&[74576],[Account].[Account].&[74575]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2B]
										, [Measures].[Cur Amount]
										, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, [Time Series].[Time Series].[LTD]
										);

										// 11102 Branch
										([Account].[Account].&[11102]) =
										IIF(    (   ROUND(([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B]),2) = 0.00
										OR IsEmpty(([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B]))
										)
										AND
										ROUND(([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B]),2) > 0.00
										,   ([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B])
										,   // else
										(   DIVIDE( ([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B])
										, ([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B])
										,  0
										)
										)
										*
										(   -- change to Data Stage 2 (Base Allocation)
										([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1D])
										)
										);
                                         
                                        ([Account].[Account].&[82100]) = ([Account].[Account].&[11102]) * -1;
                                        /*
										// InterCompnay Branch Account (74530)
										([Account].[Account].&[74530]) = ([Account].[Account].&[11102]) * -1;

										// InterCompnay Head Office Account
										([Account].[Account].&[74577],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11102],[Entity].[Entity].[BIFR]) ;
										([Account].[Account].&[74578],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11102],[Entity].[Entity].[BIGE]) ;
										([Account].[Account].&[74576],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11102],[Entity].[Entity].[BISP]) ;
										([Account].[Account].&[74575],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11102],[Entity].[Entity].[BIUK]) ;

										// 82100 for HO
										([Account].[Account].&[82100],[Entity].[Entity].[BERE]) = (([Account].[Account].&[11102],[Entity].[Entity].[BIFR])
										+([Account].[Account].&[11102],[Entity].[Entity].[BISP])
										+([Account].[Account].&[11102],[Entity].[Entity].[BIGE])
										+([Account].[Account].&[11102],[Entity].[Entity].[BIUK]) ) * -1;*/
										//   END SCOPE;
										END SCOPE;


										// EIC RI Spend Munich - 2C
										SCOPE(
										{[Account].[Account].&[11103],[Account].[Account].&[82100]}//,[Account].[Account].&[74530],[Account].[Account].&[74577],[Account].[Account].&[74578]
										//,[Account].[Account].&[74576],[Account].[Account].&[74575]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2C]
										, [Measures].[Cur Amount]
										, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										);

										// 11103 Branch
										([Account].[Account].&[11103]) = 
										([Account].[Account].&[2000066],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2C])
										* -1 * 
										(
                                          ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
                                         + ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
                                         + ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
                                         + ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ])
                                         + ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
                                         + ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
                                         + ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
                                         + ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK])
                                         //+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
                                         //+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
                                         //+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
                                         + ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1D])
                                         //+ ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2A])
                                         +

                                        (
                                        // RISPD01 RI Spend FAC XL RI - (FAC RI only) 
                                        ([Account].[Account].&[2000061],[Process].[Process Code].[2A],[Data Stage].[Data Stage].&[1]
                                        ,[RI Policy].[RI Type].&[FAC],[Measures].CurrentMember)
                                        
                                        +

                                        // RISPD01 FIDMOL RISPD10
                                        Divide(
                                        ([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B]
                                        ,[RI Policy].[RI Programme].&[FIDOML QS],[Measures].CurrentMember)
                                         ,
                                         // RISPD01 RI Spend FAC XL RI - (FAC RI only) 
                                        ([Account].[Account].&[2000064],[Process].[Process Code].[2B],[Data Stage].[Data Stage].&[1]
                                        ,[Measures].CurrentMember)
                                        ,0)
										*
										(
                                        ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK])
										//+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										//+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										//+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1D])
										//+ ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2A])
                                        )
										+ Divide(
                                       
                                        Divide(
										([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[RI Policy].[RI Programme].&[MUNICH - Surplus],
										[Process].[Process Code].[2B],[Measures].CurrentMember )
										,
										([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2B],[Measures].CurrentMember )
										,0)
                                        
                                        *
                                        (
                                        ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1D])
										),0.85) //FDM-766
										));
                                        
                                        ([Account].[Account].&[82100]) = ([Account].[Account].&[11103]) * -1;                                          
                                       
       
                                        /*
										// InterCompnay Branch Account (74530)
										([Account].[Account].&[74530]) = ([Account].[Account].&[11103]) * -1;

										// InterCompnay Head Office Account
										([Account].[Account].&[74577],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11103],[Entity].[Entity].[BIFR]) ;
										([Account].[Account].&[74578],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11103],[Entity].[Entity].[BIGE]) ;
										([Account].[Account].&[74576],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11103],[Entity].[Entity].[BISP]) ;
										([Account].[Account].&[74575],[Entity].[Entity].[BERE]) = ([Account].[Account].&[11103],[Entity].[Entity].[BIUK]) ;

										// 82100 for HO
										([Account].[Account].&[82100],[Entity].[Entity].[BERE]) = (([Account].[Account].&[11103],[Entity].[Entity].[BIFR])
										+([Account].[Account].&[11103],[Entity].[Entity].[BISP])
										+([Account].[Account].&[11103],[Entity].[Entity].[BIGE])
										+([Account].[Account].&[11103],[Entity].[Entity].[BIUK]) ) * -1;*/
										//   END SCOPE;
										END SCOPE;


										// EIC ORC  - 2E, 2F, 2G
										SCOPE(
										{[Account].[Account].&[51300],[Account].[Account].&[82100]}//,[Account].[Account].&[74530],[Account].[Account].&[74577],[Account].[Account].&[74578]
										//,[Account].[Account].&[74576],[Account].[Account].&[74575]
										, [Data Stage].[Data Stage].&[2]
										, {[Process].[Process Code].[2E],[Process].[Process Code].[2F],[Process].[Process Code].[2G]}
										, [Measures].[Cur Amount]
										, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										);

										// 2E 51300 Branch
										([Account].[Account].&[51300],[Process].[Process Code].[2E]) =
										([Account].[Account].&[2000068],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2E] )
										* -1 *
										(   -- change to Data Stage 2 (Base Allocation)
										([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2A])
										/*+ ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[3G])--ORC
										+ ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[3H])*/
										);

										// 2F 51300 Branch
										([Account].[Account].&[51300],[Process].[Process Code].[2F]) =
										([Account].[Account].&[2000069],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2F])
										* -1 *
										(   -- change to Data Stage 2 (Base Allocation)
										([Account].[Account].&[11102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2B])
										/*+ ([Account].[Account].&[16102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[3I])*/
										);

										// 2G 51300 Branch
										([Account].[Account].&[51300],[Process].[Process Code].[2G]) =
										([Account].[Account].&[2000067],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2G])
										* -1 *
										(   -- change to Data Stage 2 (Base Allocation)
										([Account].[Account].&[11103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2C])
										/*+ ([Account].[Account].&[16103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[3J])*/
										);
                                         ([Account].[Account].&[82100]) = ([Account].[Account].&[51300]) * -1;
                                        /*
										// InterCompnay Branch Account (74530)
										([Account].[Account].&[74530]) = ([Account].[Account].&[51300]+[Account].[Account].&[51331]) * -1;

										// InterCompnay Head Office Account
										([Account].[Account].&[74577],[Entity].[Entity].[BERE]) = ([Account].[Account].&[51300],[Entity].[Entity].[BIFR]+[Account].[Account].&[51331],[Entity].[Entity].[BIFR]);
										([Account].[Account].&[74578],[Entity].[Entity].[BERE]) = ([Account].[Account].&[51300],[Entity].[Entity].[BIGE]+[Account].[Account].&[51331],[Entity].[Entity].[BIGE]);
										([Account].[Account].&[74576],[Entity].[Entity].[BERE]) = ([Account].[Account].&[51300],[Entity].[Entity].[BISP]+[Account].[Account].&[51331],[Entity].[Entity].[BISP]);
										([Account].[Account].&[74575],[Entity].[Entity].[BERE]) = ([Account].[Account].&[51300],[Entity].[Entity].[BIUK]+[Account].[Account].&[51331],[Entity].[Entity].[BIUK]);

										// 82100 for HO
										([Account].[Account].&[82100],[Entity].[Entity].[BERE]) = (([Account].[Account].&[51300],[Entity].[Entity].[BIFR])
										+([Account].[Account].&[51300],[Entity].[Entity].[BISP])
										+([Account].[Account].&[51300],[Entity].[Entity].[BIGE])
										+([Account].[Account].&[51300],[Entity].[Entity].[BIUK]) ) * -1;*/
										//   END SCOPE;
										END SCOPE;

                                        //SYND 2E,2F,2G for 51331
                                         SCOPE(   
										{[Account].[Account].&[51331],[Account].[Account].&[83110]}//,[Account].[Account].&[74530],[Account].[Account].&[74577],[Account].[Account].&[74578]
										//,[Account].[Account].&[74576],[Account].[Account].&[74575]
										, [Data Stage].[Data Stage].&[2]
										, {[Process].[Process Code].[2E],[Process].[Process Code].[2F],[Process].[Process Code].[2G]}
										, [Measures].[Cur Amount]
										, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										);

                                        // 2E 51331 Branch
										([Account].[Account].&[51331],[Process].[Process Code].[2E]) =
										([Account].[Account].&[2000068],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2E] )
										* -1 *
										(   -- change to Data Stage 2 (Base Allocation)
										/*([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2A])*/
										 ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[3G])--ORC
										+ ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[3H])
										);
              
                                        //2F 51331
                                        ([Account].[Account].&[51331],[Process].[Process Code].[2F]) =
                                        (
                                          IIF(isempty(([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UM],[Measures].CurrentMember)),
                                         NULL,

                                         (([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],
                                         [Process].[Process Code].[UM],[Measures].CurrentMember ) -1  )
                                          *
                                          (
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										)
                                        ));
                                       
                                        //2G-51331
                                        ([Account].[Account].&[51331],[Process].[Process Code].[2G]) =
                                        (
                                          IIF(isempty(([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UM],[Measures].CurrentMember)),
                                         NULL,

                                         (([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],
                                         [Process].[Process Code].[UM],[Measures].CurrentMember ) -1  )
                                          *
                                          (
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										)
                                        ));
                                        ([Account].[Account].&[83110]) = ([Account].[Account].&[51331]) * -1; 

                                        /*
                                        // InterCompnay Branch Account (74530)
										([Account].[Account].&[74530]) = ([Account].[Account].&[51331]+[Account].[Account].&[51300]) * -1;

										// InterCompnay Head Office Account
										([Account].[Account].&[74577],[Entity].[Entity].[BERE]) = (([Account].[Account].&[51331],[Entity].[Entity].[BIFR])+([Account].[Account].&[51300],[Entity].[Entity].[BIFR])) ;
										([Account].[Account].&[74578],[Entity].[Entity].[BERE]) = (([Account].[Account].&[51331],[Entity].[Entity].[BIGE])+([Account].[Account].&[51300],[Entity].[Entity].[BIGE])) ;
										([Account].[Account].&[74576],[Entity].[Entity].[BERE]) = (([Account].[Account].&[51331],[Entity].[Entity].[BISP])+([Account].[Account].&[51300],[Entity].[Entity].[BISP])) ;
										([Account].[Account].&[74575],[Entity].[Entity].[BERE]) = (([Account].[Account].&[51331],[Entity].[Entity].[BIUK])+([Account].[Account].&[51300],[Entity].[Entity].[BIUK])) ;

										// 83110 for HO
										([Account].[Account].&[83110],[Entity].[Entity].[BERE]) = (([Account].[Account].&[51331],[Entity].[Entity].[BIFR])
										+([Account].[Account].&[51331],[Entity].[Entity].[BISP])
										+([Account].[Account].&[51331],[Entity].[Entity].[BIGE])
										+([Account].[Account].&[51331],[Entity].[Entity].[BIUK])) * -1;*/
                                        
										END SCOPE;


										// Large Loss Inwards (1D)

										SCOPE(
										[Account].[Account].&[10355]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[1D]
										, MeasureGroupMeasures('Amounts')
										);

										This =
										([Account].[Account].&[2000062],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[1D],[Measures].CurrentMember) * -1;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[74102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[1D]
										, MeasureGroupMeasures('Amounts')
										);

										This =
										(
										([Account].[Account].&[10355]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[1D]
										)
										)
										* -1;

										END SCOPE;

										// Large Loss Outwards (2D)

										SCOPE(
										[Account].[Account].&[11250]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2D]
										, MeasureGroupMeasures('Amounts')
										);


										This =
										([Account].[Account].&[2000063],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2D],[Measures].CurrentMember) ;


										//   END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2D]
										, MeasureGroupMeasures('Amounts')
										);

										This =
										(
										([Account].[Account].&[11250]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2D]
										)
										)
										* -1;

										END SCOPE;

                                        // 2C Munich QS

										SCOPE(
										[Account].[Account].&[11103]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2C]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus]);//*
										//Leaves([Entity]);


										This =
										(
										([Account].[Account].&[2000066],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2C],[Measures].CurrentMember )   * -1

										)
										*
										(
                                        (
                                        ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1D])
										)+

										(
                                        // RISPD01 RI Spend FAC XL RI - (FAC RI only) 
                                        ([Account].[Account].&[2000061],[Process].[Process Code].[2A],[Data Stage].[Data Stage].&[1]
                                        ,[RI Policy].[RI Type].&[FAC],[Measures].CurrentMember)
                                        
                                        +

                                        // RISPD01 FIDMOL RISPD10
                                        Divide(
                                        ([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[Process].[Process Code].[2B]
                                        ,[RI Policy].[RI Programme].&[FIDOML QS],[Measures].CurrentMember)
                                         ,
                                         // RISPD04 RI Spend FAC XL RI - (FAC RI only) 
                                        ([Account].[Account].&[2000064],[Process].[Process Code].[2B],[Data Stage].[Data Stage].&[1]
                                        ,[Measures].CurrentMember)
                                        ,0)
										*
										(
                                           ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1D])
//										+ ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2A])
                                        )
                                        
                                        )
                                        +
    									Divide(
                                       
                                        Divide(
										([Account].[Account].&[2000070],[Data Stage].[Data Stage].&[1],[RI Policy].[RI Programme].&[MUNICH - Surplus],
										[Process].[Process Code].[2B],[Measures].CurrentMember )
										,
										([Account].[Account].&[2000064],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2B],[Measures].CurrentMember )
										,0)
                                        
                                        *
                                        (
                                        ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
//										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[1D])
										),0.85)
										) ;


										END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2C]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[11103]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2C]
										) * -1;

										END SCOPE;

										////////////////////////////////////////////////////////////
										// FX Process
										////////////////////////////////////////////////////////////



										CREATE HIDDEN SET [GBPEntityCurrencies] AS
										{   [Cur Transaction Currency].[Tran Curr].&[CAD], [Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur Transaction Currency].[Tran Curr].&[GBP], [Cur Transaction Currency].[Tran Curr].&[EUR] };

										CREATE HIDDEN SET [USDEntityCurrencies] AS
										{   [Cur Transaction Currency].[Tran Curr].&[CAD], [Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur Transaction Currency].[Tran Curr].&[GBP], [Cur Transaction Currency].[Tran Curr].&[EUR]
										, [Cur Transaction Currency].[Tran Curr].&[AED],[Cur Transaction Currency].[Tran Curr].&[HKD],[Cur Transaction Currency].[Tran Curr].&[CHF]  };


										CREATE HIDDEN SET [AUDEntityCurrencies] AS
										{   [Cur Transaction Currency].[Tran Curr].&[CAD], [Cur Transaction Currency].[Tran Curr].&[USD], [Cur Transaction Currency].[Tran Curr].&[AUD]
										,[Cur Transaction Currency].[Tran Curr].&[GBP], [Cur Transaction Currency].[Tran Curr].&[EUR], [Cur Transaction Currency].[Tran Curr].&[NZD] };

										CREATE HIDDEN SET [NMACurrencies] AS
										{   [Cur Transaction Currency].[Tran Curr].&[CAD] ,[Cur Transaction Currency].[Tran Curr].&[GBP], [Cur Transaction Currency].[Tran Curr].&[EUR] };



										CREATE HIDDEN SET [FXAccounts] AS
										FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Exclude from FX Calcs') = 'N')
										- {[Account].[Account].&[75700],[Account].[Account].&[75710]}
										-  FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');

										CREATE HIDDEN SET [FXNonUSDAmtAccounts] AS
										{[Account].[Account].[Account].MEMBERS}
										- {[Account].[Account].&[64100],[Account].[Account].&[64200],[Account].[Account].&[75700],[Account].[Account].&[75710]}
										- FILTER([Account].[Account].[Account].MEMBERS,LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),1) = "9")
										-  FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');

										CREATE HIDDEN SET [FXEntities] AS
										FILTER ([Entity].[Entity].MEMBERS
										, [Entity].[Entity].CURRENTMEMBER.Properties('Exclude from FX Calcs') = 'N'
										AND [Entity].[Entity].CURRENTMEMBER.Properties('Status') = 'N'
										);


										CREATE HIDDEN SET [FXTargetEntities] AS
										{[Entity].[Entity].[GAAP],[Entity].[Entity].[IFRS],[Entity].[Entity].[BUCO],[Entity].[Entity].[USCONSUS],[Entity].[Entity].[USUKCONSOL],[Entity].[Entity].[QSGAAP]};

										CREATE HIDDEN SET [FXNonTargetEntities] AS
										[FXEntities] - [FXTargetEntities];

										CREATE HIDDEN SET [FXGBPEntities] AS
										FILTER ([FXEntities], [Entity].[Entity].CURRENTMEMBER.Properties('Functional Currency') = 'GBP');


										CREATE HIDDEN SET [FXAUDEntities] AS
										FILTER ([FXEntities], [Entity].[Entity].CURRENTMEMBER.Properties('Functional Currency') = 'AUD');

										CREATE HIDDEN SET [FXUSDEntities] AS
										FILTER ([FXEntities], [Entity].[Entity].CURRENTMEMBER.Properties('Functional Currency') = 'USD');

										CREATE HIDDEN SET [FXNonUSDEntities] AS
										FILTER ([FXEntities], [Entity].[Entity].CURRENTMEMBER.Properties('Functional Currency') <> 'USD');

										CREATE HIDDEN SET [SyndicateEntities] AS
										{[Entity].[Entity].[623] ,[Entity].[Entity].[2623] ,[Entity].[Entity].[3622] ,[Entity].[Entity].[3623] ,[Entity].[Entity].[6107] ,[Entity].[Entity].[6050],[Entity].[Entity].[5623]};

                                        CREATE HIDDEN SET [BIDACBadDebtsBidEntities] AS                                           
										{[Entity].[Entity].[BIFR] ,[Entity].[Entity].[BIUK] ,[Entity].[Entity].[BISP] ,[Entity].[Entity].[BIGE] ,[Entity].[Entity].[BISW]};

										CREATE HIDDEN SET [CoreEntities] AS
										{[Entity].[Entity].[623] ,[Entity].[Entity].[2623] ,[Entity].[Entity].[3622] ,[Entity].[Entity].[3623] };

	                                    CREATE HIDDEN SET [SwissEntities] AS
										{[Entity].[Entity].[BISW]};

										CREATE HIDDEN SET [NonSynNonUSDFXEntities] AS
										[FXNonUSDEntities] -  [SyndicateEntities] - [SwissEntities];
										

										CREATE HIDDEN SET [NMAEntities] AS
										{[Entity].[Entity].[2623] ,[Entity].[Entity].[3622] ,[Entity].[Entity].[3623]};


										CREATE HIDDEN SET [QMAAccounts] AS FILTER(	[Account].[Account].[Account].MEMBERS
										,	 ( [Account].[Account].CURRENTMEMBER.PROPERTIES("Account Group") = "BS"
										OR
										[Account].[Account].CURRENTMEMBER.PROPERTIES("Account Group") = "IS"
										)
										)
										- {[Account].[Account].&[75700],[Account].[Account].&[75710]}
										-  FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');


										CREATE HIDDEN SET [QMASTRGLCalcAccounts] AS FILTER(	[Account].[Account].[Account].MEMBERS
										,	( LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),1) = "7"
										OR LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),1) = "8"
										)
										)
										- {[Account].[Account].&[75700],[Account].[Account].&[75710]}
										-  FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');

										CREATE HIDDEN SET [QMAReserveAccounts] AS FILTER(	[Account].[Account].[Account].MEMBERS
										,	( LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),1) = "9"
										AND LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),3) <> "999"
										)
										)
										-  FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');


										CREATE HIDDEN SET [QMABSAccounts] AS FILTER(	[Account].[Account].[Account].MEMBERS
										,	( LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),1) <>"9"
										AND [Account].[Account].CURRENTMEMBER.PROPERTIES("Account Group") = "BS"
										)
										)
										- {[Account].[Account].&[75700],[Account].[Account].&[75710]}
										-  FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');


										CREATE HIDDEN SET [QMAISAccounts] AS FILTER(	[Account].[Account].[Account].MEMBERS
										,	( LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),1) <>"9"
										AND [Account].[Account].CURRENTMEMBER.PROPERTIES("Account Group") = "IS"
										)
										) -{[Account].[Account].&[59600]}
										-  FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');

										CREATE HIDDEN SET [CloseAccounts] AS
										FILTER ([Account].[Account].MEMBERS,[Account].[Account].CURRENTMEMBER.Properties('Status') = 'Close');

										CREATE HIDDEN SET [FXNonUSDAmtExcludedAccounts] AS
										{[Account].[Account].&[64100],[Account].[Account].&[64200],[Account].[Account].&[75700],[Account].[Account].&[75710]}
										+ FILTER([Account].[Account].[Account].MEMBERS,LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),1) = "9")
										- {[Account].[Account].&[90360]};


										CREATE HIDDEN SET [FXUSDQMAExcludedAccounts] AS
										{[Account].[Account].&[75700],[Account].[Account].&[75710]}
										+ FILTER([Account].[Account].[Account].MEMBERS,LEFT([Account].[Account].CURRENTMEMBER.PROPERTIES("Account Code"),3) = "999");

										CREATE HIDDEN SET [FXNonUSDQMAExcludedAccounts] AS
										{[Account].[Account].&[75700],[Account].[Account].&[75710]};



										SCOPE([Calculation Mode].[Calculation Mode].&[Full],[Tri Focus].[Status - Trifocus].[Trifocus Status].&[Open].CHILDREN);
										// FX Calculations
										SCOPE ({ [Data Stage].[Data Stage].&[1], [Data Stage].[Data Stage].&[2]}, [Process].[Process Code].[FX], [Time Series].[Time Series].[YTD],[FXEntities],[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS );

										// Non USD Entities

										SCOPE ([FXNonUSDEntities],[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS);

										SCOPE ([FXAccounts]);
										// Data stage 1 for Value 2
										([Measures].[Value 2] , [Data Stage].[Data Stage].&[1],[Account].[IS BS].[Account Group].&[BS].Children )
										=   DIVIDE(
										([Measures].[Cur Amount],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4])
										,
										(    [Measures].[Func Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										)
										);

										([Measures].[Value 2] , [Data Stage].[Data Stage].&[1],[Account].[IS BS].[Account Group].&[IS].Children )
										=   DIVIDE(
										([Measures].[Cur Amount],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4])
										,
										(    [Measures].[Func Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										)
										);

										// Data stage 2 for Value 2
										([Measures].[Value 2] , [Data Stage].[Data Stage].&[2],[Account].[IS BS].[Account Group].&[IS].Children)
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										([Measures].[Value 2] , [Data Stage].[Data Stage].&[2],[Account].[IS BS].[Account Group].&[BS].Children)
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);


										END SCOPE;

										SCOPE ([FXNonUSDAmtAccounts]);
										// Data stage 1 for Amount
										([Measures].[Amount],[Account].[IS BS].[Account Group].&[BS].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(    [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										)
										);

										([Measures].[Amount],[Account].[IS BS].[Account Group].&[IS].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										//([Measures].[Value 2])
										,
										(    [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										([Measures].[Amount],[Account].[IS BS].[Account Group].&[FX].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((     ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All] )
										// - ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[FX] )
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(    [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										// Data stage 2 for Amount
										([Measures].[Amount] , [Data Stage].[Data Stage].&[2] )
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);


										// Value 3 BSOL type Entities
										SCOPE ([NonSynNonUSDFXEntities]);
										// Data stage 1 for Value3
										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[BS].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(    [Measures].[GBP Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										)
										);

										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[IS].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										//([Measures].[Value 2])
										,
										(    [Measures].[GBP Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[FX].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((     ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All] )
										// - ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[FX] )
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(    [Measures].[GBP Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										// Data stage 2 for Value 3
										([Measures].[Value 3] , [Data Stage].[Data Stage].&[2] )
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										END SCOPE;
                                        
                                        // Value 3 BSIL type Entities//

										SCOPE ({[Entity].[Entity].[BSILSP],[Entity].[Entity].[BSILGE],[Entity].[Entity].[BSILFR],[Entity].[Entity].[BSIL],[Entity].[Entity].[BSILUK]});
										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[BS].Children , [Data Stage].[Data Stage].&[1] )
				                        =DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(  [Measures].[EUR Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										)
										);

										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[IS].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										//([Measures].[Value 2])
										,
										(   [Measures].[EUR Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[FX].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((     ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All] )
										// - ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[FX] )
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(    [Measures].[EUR Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										// Data stage 2 for Value 3
										([Measures].[Value 3] , [Data Stage].[Data Stage].&[2] )
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										END SCOPE;

                                        // Value 3 BISW type Entities
										SCOPE ([Entity].[Entity].[BISW]);
										// Data stage 1 for Value3
										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[BS].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(    [Measures].[CHF Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										)
										);

										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[IS].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((  ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										//([Measures].[Value 2])
										,
										(    [Measures].[CHF Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										([Measures].[Value 3],[Account].[IS BS].[Account Group].&[FX].Children , [Data Stage].[Data Stage].&[1] )
										=DIVIDE((     ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All] )
										// - ([Measures].[Value 2], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[FX] )
										+ ([Measures].[Value 2], [Data Stage].[Data Stage].&[3],[Process].[Process Code].[FX] )
										)
										,
										(    [Measures].[CHF Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));


										// Data stage 2 for Value 3
										([Measures].[Value 3] , [Data Stage].[Data Stage].&[2] )
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										END SCOPE;
										END SCOPE;


										// End Non USD Entities
										END SCOPE;


										// USD Funtional Currency Entities
										SCOPE ([FXUSDEntities],[FXAccounts],[USDEntityCurrencies],{[Measures].[Amount] ,[Measures].[Value 2]});

										// Data stage 1 for Amount
										([Data Stage].[Data Stage].&[1],[Account].[IS BS].[Account Group].&[BS].Children )
										= ([Measures].[Cur Amount],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										*
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										( [Data Stage].[Data Stage].&[1],[Account].[IS BS].[Account Group].&[IS].Children )
										= ([Measures].[Cur Amount],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										*
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);


										// Data stage 2 for Amount
										([Data Stage].[Data Stage].&[2],[Account].[IS BS].[Account Group].&[IS].Children)
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										([Data Stage].[Data Stage].&[2],[Account].[IS BS].[Account Group].&[BS].Children)
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);



										// End of USD entities Scope
										END SCOPE;


										END SCOPE;




										// FX Process of Amount 4
										SCOPE ({ [Data Stage].[Data Stage].&[1], [Data Stage].[Data Stage].&[2]} , [SyndicateEntities],[Measures].[Value 3],[GBPEntityCurrencies]
										, [Time Series].[Time Series].[YTD],[Process].[Process Code].[FX]);

										// Generic Rule for all Entities

										// Data stage 1 for Amount 4 for USD entities
										([Data Stage].[Data Stage].&[1],[QMABSAccounts],[FXUSDEntities] )
										=   ([Measures].[Cur Amount],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										([Data Stage].[Data Stage].&[1],[QMAISAccounts],[FXUSDEntities] )
										=   ([Measures].[Cur Amount],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);


										// Reseerve Accounts Amount 4 for USD entities
										SCOPE ([FXUSDEntities],[QMAReserveAccounts],[Data Stage].[Data Stage].&[1] );
										THIS =  ([Measures].[Amount],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso Opening]
										);
										END SCOPE;

										// Functional Currency P&L Account to Amount 4 Data Stage 1 USD Entities
										SCOPE ([FXUSDEntities],[Data Stage].[Data Stage].&[1] );
										([Account].[Account].&[59500]) =
										ROUND( ([Measures].[Amount],[Data Stage].[Data Stage].&[3])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										),2)
										+ ROUND( ([Measures].[Amount],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										),2) ;
										END SCOPE;


										// Data stage 2 Amount 4 USD Entities
										([Data Stage].[Data Stage].&[2],[QMAISAccounts],[FXUSDEntities])
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										([Data Stage].[Data Stage].&[2],[QMABSAccounts],[FXUSDEntities])
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										([Data Stage].[Data Stage].&[2],[QMAReserveAccounts],[FXUSDEntities])
										= ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);

										([Data Stage].[Data Stage].&[2],[Account].[Account].&[59500],[FXUSDEntities])
										=ROUND(([Data Stage].[Data Stage].&[1])
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) ),2);


										// Data Stage 1 Amount 4 for GBP Entities
										SCOPE ([FXGBPEntities],[QMAAccounts],[Data Stage].[Data Stage].&[1] );
										THIS = ([Measures].[Value 2],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Measures].[Value 2],[Data Stage].[Data Stage].&[3]);
										END SCOPE;


										// Data stage 2 for Amount 4 GBP Entities
										([Data Stage].[Data Stage].&[2],[QMAAccounts],[FXGBPEntities])
										= ROUND( ([Data Stage].[Data Stage].&[1]),2)
										- ( ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]) - ([Process].[Process Code].[FX],[Data Stage].[Data Stage].&[4]) );


										// Amount 4 STGL(59600) for GBP entities
										([Account].[Account].&[59600],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[FX],[FXGBPEntities] )
										=([Measures].[hBri Account Account Tree Count] /[Measures].[hBri Account Account Tree Count]) *
										ROUND(   (    [Account].[QMA-STGL].[QMA-STGL Account].&[QMA-STGL Account]
										,[Measures].[Cur Amount]
										,[Process].[Process Code].[All]
										,[Data Stage].[Data Stage].&[4]
										,OPENINGPERIOD( [Accounting Period].[Y - H - Q - M].[Accounting Period]
										,ANCESTOR([Accounting Period].[Y - H - Q - M].CURRENTMEMBER  ,[Accounting Period].[Y - H - Q - M].[Accounting Year])
										)

										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										-
										(    [Account].[QMA-STGL].[QMA-STGL Account].&[QMA-STGL Account]
										,[Measures].[Cur Amount]
										,[Process].[Process Code].[All]
										,[Data Stage].[Data Stage].&[4]
										,OPENINGPERIOD( [Accounting Period].[Y - H - Q - M].[Accounting Period]
										,ANCESTOR([Accounting Period].[Y - H - Q - M].CURRENTMEMBER  ,[Accounting Period].[Y - H - Q - M].[Accounting Year])
										)

										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso Opening]
										)
										,2);



										END SCOPE;


										// NMA - P&L
										SCOPE ( [Process].[Process Code].[UI], [Time Series].[Time Series].[Current Period],[Data Stage].[Data Stage].&[1]
										,{[Entity].[Entity].[IFRS],[Entity].[Entity].[BIIFR],[Entity].[Entity].[BIIGE],[Entity].[Entity].[BIISP],[Entity].[Entity].[BIIUK],[Entity].[Entity].[BIISW]}
										,[Accounting Period].[Accounting Period].[Accounting Period].MEMBERS
										,[Earnings].[Inception Period].[Inception Period].MEMBERS
										,{[Account].[Account].&[15100],[Account].[Account].&[35100],[Account].[Account].&[16100],[Account].[Account].&[16101]
										,[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104],[Account].[Account].&[16105]}
										,{[Measures].[Amount],[Measures].[Value 2]}
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										);

										([Entity].[Entity].[IFRS],[Target Entity].[Target Entity].[2623]) = ROUND(([Entity].[Entity].[2623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[USD]),2) ;

										([Entity].[Entity].[IFRS],[Target Entity].[Target Entity].[3622]) = ROUND(([Entity].[Entity].[3622],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[USD]),2) ;

										([Entity].[Entity].[IFRS],[Target Entity].[Target Entity].[3623]) = ROUND(([Entity].[Entity].[3623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[USD]),2) ;

										SCOPE([YOA].[YOA].&[2018]);
										([Entity].[Entity].[IFRS],[Target Entity].[Target Entity].[BC3L],[Account].[Account].&[16105]) = ROUND(([Entity].[Entity].[3623],[Account].[Account].&[16105],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[USD]),2) * -0.3385;
										END SCOPE;

										([Entity].[Entity].[BIIFR],[Target Entity].[Target Entity].[BIFR],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIFR],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[EUR]),2) ;

                                        ([Entity].[Entity].[BIISW],[Target Entity].[Target Entity].[BISW],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BISW],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[EUR]),2) ;

										([Entity].[Entity].[BIIGE],[Target Entity].[Target Entity].[BIGE],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIGE],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[EUR]),2) ;

										([Entity].[Entity].[BIISP],[Target Entity].[Target Entity].[BISP],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BISP],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[EUR]),2) ;

										([Entity].[Entity].[BIIUK],[Target Entity].[Target Entity].[BIUK],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIUK],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[YTD])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Average],[Entity].[Functional Currency].&[GBP]),2) ;

                                        ([Entity].[Entity].[BIISW],[Target Entity].[Target Entity].[BISW],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));

										([Entity].[Entity].[BIIFR],[Target Entity].[Target Entity].[BIFR],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));

										([Entity].[Entity].[BIIGE],[Target Entity].[Target Entity].[BIGE],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));

										([Entity].[Entity].[BIISP],[Target Entity].[Target Entity].[BISP],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));

										([Entity].[Entity].[BIIUK],[Target Entity].[Target Entity].[BIUK],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));
										END SCOPE;


										// NMA - BS
										SCOPE ( [Process].[Process Code].[UI], [Time Series].[Time Series].[Current Period],[Data Stage].[Data Stage].&[1]
										,{[Entity].[Entity].[IFRS],[Entity].[Entity].[BIIFR],[Entity].[Entity].[BIIGE],[Entity].[Entity].[BIISP],[Entity].[Entity].[BIIUK],[Entity].[Entity].[BIISW]}
										,[Accounting Period].[Accounting Period].[Accounting Period].MEMBERS
										,[Earnings].[Inception Period].[Inception Period].MEMBERS
										,{[Account].[Account].&[80100],[Account].[Account].&[76200],[Account].[Account].&[73100]}
										,{[Measures].[Amount],[Measures].[Value 2]}
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										);

										([Target Entity].[Target Entity].[2623],[Account].[Account].&[80100],[Entity].[Entity].[IFRS]) = ROUND(([Entity].[Entity].[2623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD]) *-1 ,2);

										([Target Entity].[Target Entity].[2623],[Measures].[Amount],[Account].[Account].&[76200],[Entity].[Entity].[IFRS]) = ROUND(([Entity].[Entity].[2623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD])*-1 ,2);


										([Target Entity].[Target Entity].[2623],[Account].[Account].&[73100],[Entity].[Entity].[IFRS])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104],[Account].[Account].&[16105]}
										,([Entity].[Entity].[2623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD]) *-1 ,2);


										([Target Entity].[Target Entity].[3622],[Account].[Account].&[80100],[Entity].[Entity].[IFRS]) = ROUND(([Entity].[Entity].[3622],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD]) *-1 ,2);

										([Target Entity].[Target Entity].[3622],[Account].[Account].&[76200],[Entity].[Entity].[IFRS]) = ROUND(([Entity].[Entity].[3622],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD])*-1 ,2);


										([Target Entity].[Target Entity].[3622],[Account].[Account].&[73100],[Entity].[Entity].[IFRS])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104],[Account].[Account].&[16105]}
										,([Entity].[Entity].[3622],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD]) *-1 ,2);

										([Target Entity].[Target Entity].[3623],[Account].[Account].&[80100],[Entity].[Entity].[IFRS]) = ROUND(([Entity].[Entity].[3623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD]) *-1 ,2);

										([Target Entity].[Target Entity].[3623],[Account].[Account].&[76200],[Entity].[Entity].[IFRS]) = ROUND(([Entity].[Entity].[3623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD])*-1 ,2);


										([Target Entity].[Target Entity].[3623],[Account].[Account].&[73100],[Entity].[Entity].[IFRS])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104],[Account].[Account].&[16105]}
										,([Entity].[Entity].[3623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD]) *-1 ,2);
										SCOPE ([YOA].[YOA].&[2018]);
										([Target Entity].[Target Entity].[BC3L],[Account].[Account].&[73100],[Entity].[Entity].[IFRS])
										= ROUND(Aggregate ({[Account].[Account].&[16105]}
										,([Entity].[Entity].[3623],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[USD]) *-1 ,2)* -0.3385;
										END SCOPE;

										([Target Entity].[Target Entity].[BIFR],[Account].[Account].&[80100],[Entity].[Entity].[BIIFR],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIFR],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);

										([Target Entity].[Target Entity].[BIFR],[Account].[Account].&[76200],[Entity].[Entity].[BIIFR],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIFR],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR])*-1 ,2);


										([Target Entity].[Target Entity].[BIFR],[Account].[Account].&[73100],[Entity].[Entity].[BIIFR],[Measures].[Value 2])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104]}
										,([Entity].[Entity].[BIFR],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);


										([Target Entity].[Target Entity].[BIGE],[Account].[Account].&[80100],[Entity].[Entity].[BIIGE],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIGE],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);

										([Target Entity].[Target Entity].[BIGE],[Account].[Account].&[76200],[Entity].[Entity].[BIIGE],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIGE],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR])*-1 ,2);


										([Target Entity].[Target Entity].[BIGE],[Account].[Account].&[73100],[Entity].[Entity].[BIIGE],[Measures].[Value 2])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104]}
										,([Entity].[Entity].[BIGE],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);


										([Target Entity].[Target Entity].[BISP],[Account].[Account].&[80100],[Entity].[Entity].[BIISP],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BISP],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);

										([Target Entity].[Target Entity].[BISP],[Account].[Account].&[76200],[Entity].[Entity].[BIISP],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BISP],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR])*-1 ,2);


										([Target Entity].[Target Entity].[BISP],[Account].[Account].&[73100],[Entity].[Entity].[BIISP],[Measures].[Value 2])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104]}
										,([Entity].[Entity].[BISP],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);


										([Target Entity].[Target Entity].[BIUK],[Account].[Account].&[80100],[Entity].[Entity].[BIIUK],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIUK],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[GBP]) *-1 ,2);

										([Target Entity].[Target Entity].[BIUK],[Account].[Account].&[76200],[Entity].[Entity].[BIIUK],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BIUK],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[GBP])*-1 ,2);


										([Target Entity].[Target Entity].[BIUK],[Account].[Account].&[73100],[Entity].[Entity].[BIIUK],[Measures].[Value 2])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104]}
										,([Entity].[Entity].[BIUK],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[GBP]) *-1 ,2);

                                       ([Target Entity].[Target Entity].[BISW],[Account].[Account].&[80100],[Entity].[Entity].[BIISW],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BISW],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[15100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);

										([Target Entity].[Target Entity].[BISW],[Account].[Account].&[76200],[Entity].[Entity].[BIISW],[Measures].[Value 2]) = ROUND(([Entity].[Entity].[BISW],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD],[Account].[Account].&[35100])*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR])*-1 ,2);


										([Target Entity].[Target Entity].[BISW],[Account].[Account].&[73100],[Entity].[Entity].[BIISW],[Measures].[Value 2])
										= ROUND(Aggregate ({[Account].[Account].&[16100],[Account].[Account].&[16101],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104]}
										,([Entity].[Entity].[BISW],[Target Entity].[Target Entity].[All],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Measures].[Cur Amount],[Time Series].[Time Series].[LTD]))*
										([Measures].[Rate Difference],[Cur FX Rate].[FX Rate Name].[Spot],[Entity].[Functional Currency].&[EUR]) *-1 ,2);                                       

                                        
                                        ([Entity].[Entity].[BIISW],[Target Entity].[Target Entity].[BISW],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										));                                       


										([Entity].[Entity].[BIIFR],[Target Entity].[Target Entity].[BIFR],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										));

										([Entity].[Entity].[BIIGE],[Target Entity].[Target Entity].[BIGE],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										));

										([Entity].[Entity].[BIISP],[Target Entity].[Target Entity].[BISP],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										));

										([Entity].[Entity].[BIIUK],[Target Entity].[Target Entity].[BIUK],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Spot]
										));


										END SCOPE;

										//NMA DataStage 2
										SCOPE ( [Process].[Process Code].[UI], [Time Series].[Time Series].[Current Period],[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[IFRS],[Entity].[Entity].[BIIFR],[Entity].[Entity].[BIIGE],[Entity].[Entity].[BIISP],[Entity].[Entity].[BIIUK],[Entity].[Entity].[BIISW]}
										, {[Account].[Account].&[15100],[Account].[Account].&[35100],[Account].[Account].&[16100],[Account].[Account].&[16101]
										,[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[16104],[Account].[Account].&[16105],[Account].[Account].&[80100]
										,[Account].[Account].&[76200],[Account].[Account].&[73100]}
										,{[Measures].[Amount],[Measures].[Value 2]}
										);
										THIS = ([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Time Series].[Time Series].[YTD])
										+ ([Data Stage].[Data Stage].&[4]);

										([Measures].[Value 2],[Entity].[Entity].[IFRS]) =  ([Measures].[Amount]);

										END SCOPE;


										// NMA - 59500
										SCOPE ( [Process].[Process Code].[UI], [Time Series].[Time Series].[Current Period],[Data Stage].[Data Stage].&[2]
										,{[Entity].[Entity].[IFRS],[Entity].[Entity].[BIIFR],[Entity].[Entity].[BIIGE],[Entity].[Entity].[BIISP],[Entity].[Entity].[BIIUK],[Entity].[Entity].[BIISW]}
										,[Accounting Period].[Accounting Period].[Accounting Period].MEMBERS
										,[Earnings].[Inception Period].[Inception Period].MEMBERS
										,{[Account].[Account].&[59500],[Account].[Account].&[90360]}
										,{[Measures].[Amount],[Measures].[Value 2]}
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										);

										([Account].[Account].&[59500],[Measures].[Value 2]) =   -1 *(([Account].[Account].&[15100])
										+([Account].[Account].&[35100])
										+([Account].[Account].&[16100])
										+([Account].[Account].&[16101])
										+([Account].[Account].&[16102])
										+([Account].[Account].&[16103])
										+([Account].[Account].&[16104])
										+([Account].[Account].&[16105])
										+([Account].[Account].&[80100])
										+([Account].[Account].&[76200])
										+([Account].[Account].&[73100]));


										([Account].[Account].&[59500],[Measures].[Amount])
										= DIVIDE(   ([Measures].[Value 2])
										,(  [Measures].[Grp Rate]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur FX Rate].[FX Rate Name].[Average]
										));

										([Account].[Account].&[59500],[Measures].[Amount],[Entity].[Entity].[IFRS])
										=  ([Measures].[Value 2]);

										([Account].[Account].&[90360],[Measures].[Amount]) =   -1 *(([Account].[Account].&[15100])
										+([Account].[Account].&[35100])
										+([Account].[Account].&[16100])
										+([Account].[Account].&[16101])
										+([Account].[Account].&[16102])
										+([Account].[Account].&[16103])
										+([Account].[Account].&[16104])
										+([Account].[Account].&[16105])
										+([Account].[Account].&[80100])
										+([Account].[Account].&[76200])
										+([Account].[Account].&[73100])
										+([Account].[Account].&[59500]));


										([Account].[Account].&[90360],[Measures].[Amount],[Entity].[Entity].[IFRS]) =  NULL;
										END SCOPE;

										// End of Calculation Mode
										END SCOPE;



										CREATE HIDDEN SET [OpenYears] AS
										FILTER(			{[YOA].[YOA].[YOA].MEMBERS} * {[Accounting Period].[Accounting Period].[Accounting Period].MEMBERS}
										,([YOA].[YOA].CURRENTMEMBER,[YOA Group].[YOA Group].&[1],[Measures].[hBri YOAto YOA Group Count],[Accounting Period].[Accounting Period].CURRENTMEMBER) > 0
										);



										/////////////////////////////////////////////////////////////////////
										/////////// EPI Adjustments
										/////////////////////////////////////////////////////////////////////
										SCOPE([Calculation Mode].[Calculation Mode].&[Full]);



										// Binder Adjustments (Premium and Brokerage)
										SCOPE   (   [Process].[Process Code].[1F], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[1]
										,[Measures].[Cur Amount] ,[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										,[Earnings].[US Policy].&[0],{[Account].[Account].&[10200],[Account].[Account].&[30200],[Account].[Account].&[30201]}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}
										);
										([Account].[Account].&[10200]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[30200]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );

                                        ([Account].[Account].&[30201]) = ([Account].[Account].&[30101], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;


										// Base Allocation Posting for 1F (Gross)
										SCOPE   (   [Process].[Process Code].[1F], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],[Measures].[Cur Amount]
										,{   [Account].[Account].&[10100]
										,[Account].[Account].&[30100]
                                        ,[Account].[Account].&[30101]
										,[Account].[Account].&[10200]
										,[Account].[Account].&[30200]
                                        ,[Account].[Account].&[30201]
										,[Account].[Account].&[15100]
										,[Account].[Account].&[35100]
                                        ,[Account].[Account].&[35101]
										,[Account].[Account].&[74102]
										,[Account].[Account].&[76200]
										,[Account].[Account].&[80100]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}
										);

										([Account].[Account].&[10100]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA]),0);

										([Account].[Account].&[30100]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA]),0);
                                            
                                        ([Account].[Account].&[30101]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA]),0);

										([Account].[Account].&[10200]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ]),0);

										([Account].[Account].&[30200]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK]),0);

                                        ([Account].[Account].&[30201]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK]),0);

										([Account].[Account].&[15100]) = ( ([Account].[Account].&[10100]) + ([Account].[Account].&[10200]) ) * -1;

										([Account].[Account].&[35100]) = ( ([Account].[Account].&[30100]) + ([Account].[Account].&[30200]) ) * -1;

                                        ([Account].[Account].&[35101]) = ( ([Account].[Account].&[30101]) + ([Account].[Account].&[30201]) ) * -1;

										([Account].[Account].&[74102]) = ( ([Account].[Account].&[10100]) + ([Account].[Account].&[10200])
										+ ([Account].[Account].&[30100]) + ([Account].[Account].&[30200]) + ([Account].[Account].&[30101]) + ([Account].[Account].&[30201]) ) * -1;

										([Account].[Account].&[76200]) = ( ([Account].[Account].&[35100]) + ([Account].[Account].&[35101]) ) * -1;

										([Account].[Account].&[80100]) = ( ([Account].[Account].&[15100]) ) * -1;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;






										// Base Allocation Posting for 1G (R1 SideCar)
										SCOPE   (   [Process].[Process Code].[1G], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],[Measures].[Cur Amount]
										,{   [Account].[Account].&[11101]
										,[Account].[Account].&[16101]
										,[Account].[Account].&[73100]
										,[Account].[Account].&[82101]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}

										);
										SCOPE   (  [Earnings].[Earning Type].&[Non-Binder].CHILDREN);

										([Account].[Account].&[11101]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UB])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E]),0);

										END SCOPE;

										SCOPE   (  [Earnings].[Earning Type].&[Binder].CHILDREN);

										([Account].[Account].&[11101]) = ROUND(  (  ([Data Stage].[Data Stage].&[1])
										*  ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										)
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UB])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[3N])
										,0);

										END SCOPE;

										([Account].[Account].&[82101]) = ([Account].[Account].&[11101]) * -1;

										([Account].[Account].&[16101]) = ([Account].[Account].&[11101]) * -1;

										([Account].[Account].&[73100]) = ([Account].[Account].&[11101]);

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;


										SCOPE   (   {[Process].[Process Code].[1F],[Process].[Process Code].[1G]}, [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,{[Measures].[Amount],[Measures].[Value 2] ,[Measures].[Value 3]  }
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}
										);

										// Amount
										([Measures].[Amount] ,[Account].[IS BS].[Account Group].&[BS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										*
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										([Measures].[Amount] ,[Account].[IS BS].[Account Group].&[IS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										*
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										// Value 3
										([Measures].[Value 3] ,[Account].[IS BS].[Account Group].&[BS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										([Measures].[Value 3] ,[Account].[IS BS].[Account Group].&[IS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);


										SCOPE ([FXGBPEntities]);
										([Measures].[Value 2]) = ([Measures].[Value 3]);
										END SCOPE;

										END SCOPE;

										// Base Allocation Reversal for 1F (Gross)
										SCOPE   (   [Process].[Process Code].[1F], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],{[Measures].[Cur Amount] ,[Measures].[Amount],[Measures].[Amount],[Measures].[Value 2],[Measures].[Value 3]}
										,{   [Account].[Account].&[10100]
										,[Account].[Account].&[30100]
										,[Account].[Account].&[10200]
										,[Account].[Account].&[30200]
										,[Account].[Account].&[15100]
										,[Account].[Account].&[35100]
										,[Account].[Account].&[74102]
										,[Account].[Account].&[76200]
										,[Account].[Account].&[80100]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[1].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[4].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[7].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[10].CHILDREN
										}
										);

										THIS = NULL;

										END SCOPE;

										// Base Allocation Reversal for 1G (R1 SideCar)
										SCOPE   (   [Process].[Process Code].[1G], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],{[Measures].[Cur Amount] ,[Measures].[Amount],[Measures].[Amount],[Measures].[Value 2],[Measures].[Value 3]}
										,{   [Account].[Account].&[11101]
										,[Account].[Account].&[16101]
										,[Account].[Account].&[73100]
										,[Account].[Account].&[82101]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[1].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[4].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[7].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[10].CHILDREN
										}

										);

										THIS = NULL;

										END SCOPE;


										/////////////////////////////////////////////////////////////////////
										/////////// //STart of EIC 2nd Cut
										/////////////////////////////////////////////////////////////////////

										SCOPE([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										// Binder Adjustments (Premium and Brokerage)
										SCOPE   (   [Process].[Process Code].[1F], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[1]
										,[Measures].[Cur Amount] ,[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										,[Earnings].[US Policy].&[0],{[Account].[Account].&[10200],[Account].[Account].&[30200]}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}
										);
										([Account].[Account].&[10200]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[2],[Process].[Process Code].[UA]) *  (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[30200]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[2],[Process].[Process Code].[UA]) *  (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;


										// Base Allocation Posting for 1F (Gross)
										SCOPE   (   [Process].[Process Code].[1F], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],[Measures].[Cur Amount]
										,{   [Account].[Account].&[10100]
										,[Account].[Account].&[30100]
										,[Account].[Account].&[10200]
										,[Account].[Account].&[30200]
										,[Account].[Account].&[15100]
										,[Account].[Account].&[35100]
										,[Account].[Account].&[74102]
										,[Account].[Account].&[76200]
										,[Account].[Account].&[80100]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}
										);


										([Account].[Account].&[10100]) = ROUND(([Data Stage].[Data Stage].&[2],[Process].[Process Code].[UA])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA]),0);

										([Account].[Account].&[30100]) = ROUND(([Data Stage].[Data Stage].&[2],[Process].[Process Code].[UA])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UA]),0);

										([Account].[Account].&[10200]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UJ]),0);


										([Account].[Account].&[30200]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UK]),0);

										([Account].[Account].&[15100]) = ( ([Account].[Account].&[10100]) + ([Account].[Account].&[10200]) ) * -1;

										([Account].[Account].&[35100]) = ( ([Account].[Account].&[30100]) + ([Account].[Account].&[30200]) ) * -1;

										([Account].[Account].&[74102]) = ( ([Account].[Account].&[10100]) + ([Account].[Account].&[10200])
										+ ([Account].[Account].&[30100]) + ([Account].[Account].&[30200]) ) * -1;

										([Account].[Account].&[76200]) = ( ([Account].[Account].&[35100]) ) * -1;

										([Account].[Account].&[80100]) = ( ([Account].[Account].&[15100]) ) * -1;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;






										// Base Allocation Posting for 1G (R1 SideCar)
										SCOPE   (   [Process].[Process Code].[1G], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],[Measures].[Cur Amount]
										,{   [Account].[Account].&[11101]
										,[Account].[Account].&[16101]
										,[Account].[Account].&[73100]
										,[Account].[Account].&[82101]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}

										);
										SCOPE   (  [Earnings].[Earning Type].&[Non-Binder].CHILDREN);

										([Account].[Account].&[11101]) = ROUND(([Data Stage].[Data Stage].&[1])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UB])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E]),0);

										END SCOPE;

										SCOPE   (  [Earnings].[Earning Type].&[Binder].CHILDREN);

										([Account].[Account].&[11101]) = ROUND(  (  ([Data Stage].[Data Stage].&[1])
										*  ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										)
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[UB])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[3N])
										,0);

										END SCOPE;

										([Account].[Account].&[82101]) = ([Account].[Account].&[11101]) * -1;

										([Account].[Account].&[16101]) = ([Account].[Account].&[11101]) * -1;

										([Account].[Account].&[73100]) = ([Account].[Account].&[11101]);

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;


										SCOPE   (   {[Process].[Process Code].[1F],[Process].[Process Code].[1G]}, [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,{[Measures].[Amount],[Measures].[Value 2] ,[Measures].[Value 3]  }
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[3].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[6].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[9].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[12].CHILDREN
										}
										);

										// Amount
										([Measures].[Amount] ,[Account].[IS BS].[Account Group].&[BS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										*
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										([Measures].[Amount] ,[Account].[IS BS].[Account Group].&[IS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										*
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										// Value 3
										([Measures].[Value 3] ,[Account].[IS BS].[Account Group].&[BS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										([Measures].[Value 3] ,[Account].[IS BS].[Account Group].&[IS].Children )
										= ([Measures].[Cur Amount])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);


										SCOPE ([FXGBPEntities]);
										([Measures].[Value 2]) = ([Measures].[Value 3]);
										END SCOPE;

										END SCOPE;

										// Base Allocation Reversal for 1F (Gross)
										SCOPE   (   [Process].[Process Code].[1F], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],{[Measures].[Cur Amount] ,[Measures].[Amount],[Measures].[Amount],[Measures].[Value 2],[Measures].[Value 3]}
										,{   [Account].[Account].&[10100]
										,[Account].[Account].&[30100]
										,[Account].[Account].&[10200]
										,[Account].[Account].&[30200]
										,[Account].[Account].&[15100]
										,[Account].[Account].&[35100]
										,[Account].[Account].&[74102]
										,[Account].[Account].&[76200]
										,[Account].[Account].&[80100]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[1].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[4].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[7].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[10].CHILDREN
										}
										);

										THIS = NULL;

										END SCOPE;

										// Base Allocation Reversal for 1G (R1 SideCar)
										SCOPE   (   [Process].[Process Code].[1G], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Earnings].[US Policy].&[0],{[Measures].[Cur Amount] ,[Measures].[Amount],[Measures].[Amount],[Measures].[Value 2],[Measures].[Value 3]}
										,{   [Account].[Account].&[11101]
										,[Account].[Account].&[16101]
										,[Account].[Account].&[73100]
										,[Account].[Account].&[82101]
										}
										,{   [Accounting Period].[Month - Period].[Accounting Month].&[1].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[4].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[7].CHILDREN
										,[Accounting Period].[Month - Period].[Accounting Month].&[10].CHILDREN
										}

										);

										THIS = NULL;

										END SCOPE;

										END SCOPE;

										END SCOPE;

										/////////////////////////////////////////////////////////////////////
										/////////// Y0 - Year end roll over
										/////////////////////////////////////////////////////////////////////

										SCOPE (
										[Process].[Process Code].[Y0]
										,[Time Series].[Time Series].[Current Period]
										, [Data Stage].[Data Stage].&[1]
										,{EXISTS([Account].[Account].[Account].MEMBERS,{[Account].[Account Group].&[BS],[Account].[Account Group].&[IS],[Account].[Account Group].&[FX]})
										- [Account].[Account].&[99995] - [Account].[Account].&[99999]}
										,EXISTS([Accounting Period].[Accounting Period].[Accounting Period].Members,[Accounting Period].[Accounting Month].&[0])

										);

										THIS =

										(

										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER.PREVMEMBER.PREVMEMBER
										,[Time Series].[Time Series].[YTD]
										,[Process].[Process Code].[All]
										,[Data Stage].[Data Stage].&[4]
										,[Scenario].[Scenario].[Actual]
										)

										;
										//overwrite Functional Currency Amount (Value 2) with Group Amount (Amount) for US Entities - as Value 2 was not used in US entities pre AMC
										(   {
										EXISTS([Entity].[Entity].[Entity].MEMBERS,[Entity].[Functional Currency].&[USD])
										// - [Entity].[Entity].[USBUSA]
										}
										, [Measures].[Value 2]
										)
										=[Measures].[Amount];
										END SCOPE;


										// 99995 account = AMC o/bal for 99995 + any movement since (actual - BP client - balance for FDM YTD (to correct bal by YOA and Currency) )
										SCOPE (
										[Process].[Process Code].[Y0]
										,[Time Series].[Time Series].[Current Period]
										, [Data Stage].[Data Stage].&[1]
										,{[Account].[Account].&[99995]}
										, [Policy Section].[Pk Policy Section].&[-1]
										,EXISTS([Accounting Period].[Accounting Period].[Accounting Period].Members,[Accounting Period].[Accounting Month].&[0])
										);

										THIS =


										(

										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER.PREVMEMBER.PREVMEMBER
										,[Time Series].[Time Series].[YTD]
										,[Process].[Process Code].[All]
										,[Data Stage].[Data Stage].&[4]
										,[Account].[Account].[All]

										,[Policy Section].[Pk Policy Section].[All]

										) * -1
										//dg fix 20190220 - issue with excluding prior year 99995 value - adding in
										+ (

										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER.PREVMEMBER.PREVMEMBER
										,[Time Series].[Time Series].[YTD]
										,[Process].[Process Code].[All]
										,[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[99995]

										,[Policy Section].[Pk Policy Section].[All]

										)
										// end dg fix 20190220
										//dg fix 20190305 - move 99999 into 99995 to get around NOYOA No YOA issues
										+ (

										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER.PREVMEMBER.PREVMEMBER
										,[Time Series].[Time Series].[YTD]
										,[Process].[Process Code].[All]
										,[Data Stage].[Data Stage].&[4]
										,[Account].[Account].&[99999]

										,[Policy Section].[Pk Policy Section].[All]

										)
										// end dg fix 20190305

										;
										//overwrite Functional Currency Amount (Value 2) with Group Amount (Amount) for US Entities - as Value 2 was not used in US entities pre AMC
										(   {
										EXISTS([Entity].[Entity].[Entity].MEMBERS,[Entity].[Functional Currency].&[USD])
										// - [Entity].[Entity].[USBUSA]
										}
										, [Measures].[Value 2]
										)
										=[Measures].[Amount];
										END SCOPE;

										// Data Stage 2 - 3 activities
										// 1. Only open Trifocus codes (but add closed TriFocuis codes to new Trifocus Y0)
										// 2. Roll FX and IS accounts up into Rollover Account 90400
										// 3. 90400 aggregated removing policy, product, target entity, Project, State, RI policy, Earnings, UserID

										SCOPE (
										[Process].[Process Code].[Y0]
										,[Time Series].[Time Series].[Current Period]
										, [Data Stage].[Data Stage].&[2]
										,EXISTS([Account].[Account].[Account].MEMBERS,{[Account].[Account Group].&[BS],[Account].[Account Group].&[IS],[Account].[Account Group].&[FX]})
										--,[Tri Focus].[Trifocus Status].&[Open]
										,EXISTS([Accounting Period].[Accounting Period].[Accounting Period].Members,[Accounting Period].[Accounting Month].&[0])
										);

										SCOPE ([Account].[IS BS].[Account Group].&[BS].Children);
										SCOPE([Tri Focus].[Status - Trifocus].[Trifocus Status].&[Open].Children -[Tri Focus].[Status - Trifocus].[Tri Focus].[Y0]);
										THIS = [Data Stage].[Data Stage].&[1];
										END SCOPE;
										SCOPE([Tri Focus].[Status - Trifocus].[Tri Focus].[Y0]);
										THIS = [Data Stage].[Data Stage].&[1] + ([Data Stage].[Data Stage].&[1],[Tri Focus].[Status - Trifocus].[Trifocus Status].&[Close]);
										END SCOPE;
										END SCOPE;

										SCOPE  ([Account].[Account].&[90400]
										, [Policy Section].[Pk Policy Section].&[-1]
										,[Product].[Product].&[-1]
										,[Target Entity].[Target Entity].[NOTA]
										,[Project].[Project].&[-1]
										,[State].[State].[All].UNKNOWNMEMBER
										,[RI Policy].[RI Policy].[NO POLICY]
										,[Earnings].[Earnings].&[-1]
										,[User].[User ID].&[TRIGG]
										);
										// open Trifocus Codes
										SCOPE([Tri Focus].[Status - Trifocus].[Trifocus Status].&[Open].Children -[Tri Focus].[Status - Trifocus].[Tri Focus].[Y0]);
										THIS =
										//(
										//                    [Account].[Account].&[90400]
										//                    ,[Data Stage].[Data Stage].&[1]
										//                    ,[Policy Section].[Section Reference].[All]
										//                    ,[Product].[Product].[All]
										//                    ,[Target Entity].[Target Entity].[All]
										//                    ,[Project].[Project].[All]
										//                    ,[State].[State].[All]
										//                    ,[Process].[Process].[All]
										//                    ,[RI Policy].[RI Policy].[All]
										//                    ,[Earnings].[Earnings].[All]
										//                    ,[User].[User ID].[All]
										//                    )
										+
										(
										[Account].[IS BS].[Account Group].&[FX]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All]
										,[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]
										)
										+
										(
										[Account].[IS BS].[Account Group].&[IS]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All]
										,[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]
										)
										;
										END SCOPE;

										// Catch closed Trifocus Codes and add them to Y0 Trifocus Code
										SCOPE([Tri Focus].[Status - Trifocus].[Tri Focus].[Y0]);
										THIS = // existing  Y0 data
										(
										[Account].[Account].&[90400]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All]
										,[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]

										)
										+(
										[Account].[IS BS].[Account Group].&[FX]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All],[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]

										)
										+
										(
										[Account].[IS BS].[Account Group].&[IS]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All]
										,[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]

										)
										// plus closed balances
										+
										(
										[Account].[Account].&[90400]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All]
										,[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]
										,[Tri Focus].[Status - Trifocus].[Trifocus Status].&[Close]
										)
										+(
										[Account].[IS BS].[Account Group].&[FX]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All],[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]
										,[Tri Focus].[Status - Trifocus].[Trifocus Status].&[Close]
										)
										+
										(
										[Account].[IS BS].[Account Group].&[IS]
										,[Data Stage].[Data Stage].&[1]
										,[Policy Section].[Pk Policy Section].[All]
										,[Product].[Product].[All]
										,[Target Entity].[Target Entity].[All]
										,[Project].[Project].[All]
										,[State].[State].[All]
										,[Process].[Process].[All]
										,[RI Policy].[RI Policy].[All]
										,[Earnings].[Earnings].[All]
										,[User].[User ID].[All]
										,[Tri Focus].[Status - Trifocus].[Trifocus Status].&[Close]
										)
										;
										END SCOPE;
										END SCOPE;


										END SCOPE;


                                        /////////////////////////////////////////////////////////////////////
										/////////// Intercompany commission (FIN-10061) Modified by: Sruthi Pitchikala, Dt:25-09-2023
										/////////////////////////////////////////////////////////////////////



										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										, { [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN, [Entity].[Platform Entity].[Platform].&[OTHER].CHILDREN }
										, [YOA].[YOA].[YOA].MEMBERS
										, {[Tri Focus].[Tri Focus].[TRI00004],[Tri Focus].[Tri Focus].[TRI00012]}
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, {[Account].[Account].&[62100],[Account].[Account].&[74530],[Account].[Account].&[30125],[Account].[Account].&[74501],[Account].[Account].&[74502]}
                                        , [Process].[Process Code].[1H]
										);

                                        SCOPE ( {[Entity].[Entity].[623]});                 
                                        [Account].[Account].&[62100] = -0.075 * ([Account].[Account].&[11110],[Process].[Process Code].[1B],[Entity].[Entity].[623],[Data Stage].[Data Stage].&[4]);
                                        [Account].[Account].&[74530] = ([Account].[Account].&[62100]) * -1;
                                        
										END SCOPE;
										
                                        SCOPE ( {[Entity].[Entity].[2623]});                 
                                        [Account].[Account].&[62100] = -0.075 * ([Account].[Account].&[11110],[Process].[Process Code].[1B],[Entity].[Entity].[2623],[Data Stage].[Data Stage].&[4]);
                                        [Account].[Account].&[74530] = ([Account].[Account].&[62100]) * -1;
                                        
                                        END SCOPE;

                                        SCOPE ( {[Entity].[Entity].[BERE]});                                          
                                        [Account].[Account].&[30125] =  -1 * (([Account].[Account].&[62100],[Entity].[Entity].[623])
                                                                         +([Account].[Account].&[62100],[Entity].[Entity].[2623]));

                                        [Account].[Account].&[74502] = ([Account].[Account].&[62100],[Entity].[Entity].[623]);

                                        [Account].[Account].&[74501] = ([Account].[Account].&[62100],[Entity].[Entity].[2623]);
										END SCOPE;

                                        SCOPE ( {[Entity].[Entity].[QSGAAP]});                                          
                                        [Account].[Account].&[62100] =  ([Account].[Account].&[30125],[Entity].[Entity].[BERE]);
										
                                        ({[Account].[Account].&[74530],[Account].[Account].&[30125]}) =  ([Account].[Account].&[62100]) * -1;

                                        [Account].[Account].&[74502] =  -1 * ([Account].[Account].&[62100],[Entity].[Entity].[623]);

                                        [Account].[Account].&[74501] =  -1 * ([Account].[Account].&[62100],[Entity].[Entity].[2623]);

                                        END SCOPE;
                                        
										END SCOPE;



										/////////////////////////////////////////////////////////////////////
										/////////// US Premium Tax
										/////////////////////////////////////////////////////////////////////

										SCOPE ( [Process].[Process Code].[EP],{[Entity].[Entity].[USBICI],[Entity].[Entity].[USBAIC]},[State].[State].[State].MEMBERS,[Time Series].[Time Series].&[1],[Measures].[Cur Amount]);
										([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);
										([Account].[Account].&[63100], [Data Stage].[Data Stage].&[2]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1])
										* ([Measures].[US Premium Tax Rate],[Time Series].[Time Series].[LTD])*-1;
										([Account].[Account].&[82120], [Data Stage].[Data Stage].&[2]) = ([Account].[Account].&[63100])*-1;
										END SCOPE;

										/////////////////////////////////////////////////////////////////////
										/////////// 6107 ORC
										/////////////////////////////////////////////////////////////////////

                                        // FIN-10055, Modified by : Sruthi Pitchikala, Modified Dt: 18-10-2023

										SCOPE ( {[Process].[Process Code].[UO]},[Entity].[Entity].[6107],[Measures].[Cur Amount], [YOA].[YOA].[YOA].MEMBERS,
										{[Data Stage].[Data Stage].&[1],[Data Stage].[Data Stage].&[2]}, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS, [Time Series].[Time Series].[LTD],[Calculation Mode].[Calculation Mode].&[Full] );

										([Account].[Account].&[1152122],[Data Stage].[Data Stage].&[1]) = ([Time Series].[Time Series].[Current Period]);
										-- ([Account].[Account].&[51300], [Data Stage].[Data Stage].&[2]) = ([Data Stage].[Data Stage].&[4]);
										([Account].[Account].&[51310], [Data Stage].[Data Stage].&[2]) = (  ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10260], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10265], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10300], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10350], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10355], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										/*+([Account].[Account].&[15100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[15200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])    //ORC
										+([Account].[Account].&[15250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])*/
										+([Account].[Account].&[30100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30110], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30120], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30400], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30500], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30501], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30505], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										/*+([Account].[Account].&[30510], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30511], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30512], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])  //ORC
										+([Account].[Account].&[35150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35600], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35700], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35801], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35802], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])*/
										+([Account].[Account].&[35998], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35999], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										) * ([Account].[Account].&[1152122],[Process].[Process Code].[UO],[Data Stage].[Data Stage].&[1],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[Unknown])
										*-1
										;
										([Account].[Account].&[74102], [Data Stage].[Data Stage].&[2]) = ( ([Account].[Account].&[51310],[Data Stage].[Data Stage].&[2]))*-1;

										END SCOPE;

                                        //51331 UO Deferral
                                        //////// FIN-11701 Modified By: Shashidhar Kandula; Date: 13- Mar-2024 /////////////////// 
                                        SCOPE ( [Process].[Process Code].[UO],[Entity].[Entity].[6107],[Measures].[Cur Amount], [YOA].[YOA].[YOA].MEMBERS,
										{[Data Stage].[Data Stage].&[1],[Data Stage].[Data Stage].&[2]}, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS, [Time Series].[Time Series].[LTD],[Calculation Mode].[Calculation Mode].&[Full] );

										([Account].[Account].&[1152122],[Data Stage].[Data Stage].&[1]) = ([Time Series].[Time Series].[Current Period]);
										-- ([Account].[Account].&[51300], [Data Stage].[Data Stage].&[2]) = ([Data Stage].[Data Stage].&[4]);
										([Account].[Account].&[51331], [Data Stage].[Data Stage].&[2]) = (  
										([Account].[Account].&[15100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[15200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])    //ORC
										+([Account].[Account].&[15250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30510], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30511], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30512], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])  //ORC
										+([Account].[Account].&[35150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35600], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35700], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35801], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35802], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										) * ([Account].[Account].&[1152122],[Data Stage].[Data Stage].&[1],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[Unknown])
										*-1
										;
//										([Account].[Account].&[76300], [Data Stage].[Data Stage].&[2]) = ( ([Account].[Account].&[51331],[Data Stage].[Data Stage].&[2]))*-1;
                                        ([Account].[Account].&[76202], [Data Stage].[Data Stage].&[2]) = ( ([Account].[Account].&[51331],[Data Stage].[Data Stage].&[2]))*-1;


										END SCOPE;

                                        /////////////////////////////////////////////////////////////////////
										/////////// 6107 ORC FIN-11960, Modified Dt:29-04-2024, Modified by: Sruthi Pitchikala
										/////////////////////////////////////////////////////////////////////

										SCOPE ( {[Process].[Process Code].[U9]},[Entity].[Entity].[6107],[Measures].[Cur Amount], [YOA].[YOA].[YOA].MEMBERS,
										{[Data Stage].[Data Stage].&[1],[Data Stage].[Data Stage].&[2]}, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS, [Time Series].[Time Series].[LTD],[Calculation Mode].[Calculation Mode].&[Full] );

										([Account].[Account].&[1152122],[Data Stage].[Data Stage].&[1]) = ([Time Series].[Time Series].[Current Period]);
										-- ([Account].[Account].&[51300], [Data Stage].[Data Stage].&[2]) = ([Data Stage].[Data Stage].&[4]);
										([Account].[Account].&[51310], [Data Stage].[Data Stage].&[2]) = (  ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10260], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10265], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10300], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10350], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10355], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										/*+([Account].[Account].&[15100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[15200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])    //ORC
										+([Account].[Account].&[15250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])*/
										+([Account].[Account].&[30100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30110], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30120], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30400], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30500], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30501], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30505], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										/*+([Account].[Account].&[30510], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30511], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30512], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])  //ORC
										+([Account].[Account].&[35150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35600], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35700], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35801], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35802], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])*/
										+([Account].[Account].&[35998], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35999], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										) * ([Account].[Account].&[1152122],[Process].[Process Code].[U9],[Data Stage].[Data Stage].&[1],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[Unknown])
										*-1
										;
										([Account].[Account].&[74102], [Data Stage].[Data Stage].&[2]) = ( ([Account].[Account].&[51310],[Data Stage].[Data Stage].&[2]))*-1;

										END SCOPE;

                                        //51331 UO Deferral 
                                        //////// FIN-11701 Modified By: Shashidhar Kandula; Date: 13- Mar-2024 ///////////////////
                                        SCOPE ( {[Process].[Process Code].[U9]},[Entity].[Entity].[6107],[Measures].[Cur Amount], [YOA].[YOA].[YOA].MEMBERS,
										{[Data Stage].[Data Stage].&[1],[Data Stage].[Data Stage].&[2]}, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS, [Time Series].[Time Series].[LTD],[Calculation Mode].[Calculation Mode].&[Full] );

										([Account].[Account].&[1152122],[Data Stage].[Data Stage].&[1]) = ([Time Series].[Time Series].[Current Period]);
										-- ([Account].[Account].&[51300], [Data Stage].[Data Stage].&[2]) = ([Data Stage].[Data Stage].&[4]);
										([Account].[Account].&[51331], [Data Stage].[Data Stage].&[2]) = (  
										([Account].[Account].&[15100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[15200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])    //ORC
										+([Account].[Account].&[15250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30510], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30511], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30512], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])  //ORC
										+([Account].[Account].&[35150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35600], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35700], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35801], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35802], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										) * ([Account].[Account].&[1152122],[Process].[Process Code].[U9],[Data Stage].[Data Stage].&[1],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[Unknown])
										*-1
										;
//										([Account].[Account].&[76300], [Data Stage].[Data Stage].&[2]) = ( ([Account].[Account].&[51331],[Data Stage].[Data Stage].&[2]))*-1;
                                        ([Account].[Account].&[76202], [Data Stage].[Data Stage].&[2]) = ( ([Account].[Account].&[51331],[Data Stage].[Data Stage].&[2]))*-1;

										END SCOPE;

                                        /*************FIN-11960*******************************************/


										/////////////////////////////////////////////////////////////////////
										/////////// 6107 PC
										/////////////////////////////////////////////////////////////////////

										SCOPE ( [Process].[Process Code].[M2],[Entity].[Entity].[6107],[Measures].[Cur Amount], {[YOA].[YOA].[YOA].ALLMEMBERS},{[Data Stage].[Data Stage].&[1]},[Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,{[Cur Transaction Currency].[Tran Curr].[Tran Curr].[USD],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[CAD]
										,[Cur Transaction Currency].[Tran Curr].[Tran Curr].[EUR],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]}
										,[Calculation Mode].[Calculation Mode].&[Full] //, [Time Series].[Time Series].[LTD]
										,{[Account].[Account].&[1152123],[Account].[Account].&[1152124],[Account].[Account].&[1152125],[Account].[Account].&[1152126]
										,[Account].[Account].&[1152127],[Account].[Account].&[1152128],[Account].[Account].&[1152129],[Account].[Account].&[1152130],[Account].[Account].&[1152131]}
										);


										([Account].[Account].&[1152123], [Time Series].[Time Series].[LTD]) = ([Time Series].[Time Series].[Current Period],[Tri Focus].[Tri Focus].[All]);
										([Account].[Account].&[1152124], [Time Series].[Time Series].[LTD]) = ([Time Series].[Time Series].[Current Period],[Tri Focus].[Tri Focus].[All]);


										([Account].[Account].&[1152125], [Time Series].[Time Series].[LTD]) = ([Time Series].[Time Series].[Current Period]);
										([Account].[Account].&[1152126], [Time Series].[Time Series].[LTD]) = ([Time Series].[Time Series].[Current Period]);

										([Account].[Account].&[1152123], [Time Series].[Time Series].[YTD]) = ([Time Series].[Time Series].[Current Period],[Tri Focus].[Tri Focus].[All]);
										([Account].[Account].&[1152124], [Time Series].[Time Series].[YTD]) = ([Time Series].[Time Series].[Current Period],[Tri Focus].[Tri Focus].[All]);


										([Account].[Account].&[1152125], [Time Series].[Time Series].[YTD]) = ([Time Series].[Time Series].[Current Period]);
										([Account].[Account].&[1152126], [Time Series].[Time Series].[YTD]) = ([Time Series].[Time Series].[Current Period]);

										([Account].[Account].&[1152127])
										= (([Account].[Account].&[10100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10260], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10265], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10300], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10350], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[10355], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[15100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[15200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[15250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30110], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30120], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30400], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30500], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30501], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30505], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30510], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30511], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30512], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35150], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35600], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35700], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35801], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35802], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35998], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35999], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30280], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30300], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30305], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[30310], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35300], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35400], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[35500], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])

										)
										*(([Account].[Account].&[1152125],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP])+([Account].[Account].&[1152126],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]))
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										;

										([Account].[Account].&[1152128]) = (([Account].[Account].&[60100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60210], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60220], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60260], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60265], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60300], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60301], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60400], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60405], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60500], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60505], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60600], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60605], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60700], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60705], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60750], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60799], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60800], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60801], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60802], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60805], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60810], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60815], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60820], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60825], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60830], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60835], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60840], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60845], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[60900], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)*(([Account].[Account].&[1152125],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP])+([Account].[Account].&[1152126],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]))
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										;

										([Account].[Account].&[1152129]) = (([Account].[Account].&[20100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20105], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20110], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20211], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20220], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20221], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20300], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20310], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20320], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[20330], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22120], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22200], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22210], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22250], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22251], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22400], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22600], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22700], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22710], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22720], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22730], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22740], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22750], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22760], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+([Account].[Account].&[22770], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)*(([Account].[Account].&[1152125],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP])+([Account].[Account].&[1152126],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]))
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										([Account].[Account].&[1152130], [Time Series].[Time Series].[LTD]) =//([Account].[Account].&[1152127])*([Account].[Account].&[1152124],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP])*-1;
										IIF( (   [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										)
										//Youngest 2 YOA
										,   ([Account].[Account].&[1152127])*([Account].[Account].&[1152124],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP])*-1
										,  IIF( [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-2) + "]")
										,  ([Account].[Account].&[1152127], [Time Series].[Time Series].[LTD],[YOA].[YOA].[All].[YOA3ae])*([Account].[Account].&[1152124],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP])*-1
										,NULL
										)
										);
										([Account].[Account].&[1152131]) =([Account].[Account].&[1152127])+([Account].[Account].&[1152128])+([Account].[Account].&[1152129])+([Account].[Account].&[1152130]);


										END SCOPE;

										//YOA Allocation
										SCOPE ( [Process].[Process Code].[M2],[Entity].[Entity].[6107],[Measures].[Cur Amount],{[YOA].[YOA].[YOA].ALLMEMBERS}, {[Data Stage].[Data Stage].&[1]},[Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,{[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]}
										,[Calculation Mode].[Calculation Mode].&[Full] , [Time Series].[Time Series].[LTD]
										,{[Account].[Account].&[1152132],[Account].[Account].&[1152133],[Account].[Account].&[1152134],[Account].[Account].&[1152135],[Account].[Account].&[1152136]}
										);


										([Account].[Account].&[1152132])
										=   ([Account].[Account].&[1152123])*([Account].[Account].&[1152125])*
										IIF( (   [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										)
										AND ([Account].[Account].&[1152131],[Cur Transaction Currency].[Tran Curr].[All]) <=0
										//Youngest 2 YOA
										,   ([Account].[Account].&[1152131],[Cur Transaction Currency].[Tran Curr].[All])
										,  IIF( [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-2) + "]")
										AND    ([Account].[Account].&[1152131],[Cur Transaction Currency].[Tran Curr].[All] , [Time Series].[Time Series].[LTD],[YOA].[YOA].[All].[YOA3ae])<=0
										,  ([Account].[Account].&[1152131],[Cur Transaction Currency].[Tran Curr].[All] , [Time Series].[Time Series].[LTD],[YOA].[YOA].[All].[YOA3ae])
										,NULL
										)

										);


										([Account].[Account].&[1152133])
										=   ([Account].[Account].&[1152123])*([Account].[Account].&[1152126])*
										IIF( (   [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										)
										//Youngest 2 YOA
										,   ([Account].[Account].&[1152131],[Cur Transaction Currency].[Tran Curr].[All])
										,  IIF( [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-2) + "]")
										,  ([Account].[Account].&[1152131],[Cur Transaction Currency].[Tran Curr].[All] , [Time Series].[Time Series].[LTD],[YOA].[YOA].[All].[YOA3ae])
										,NULL
										)

										);


										//Test Case 2
										//    SCOPE([Account].[Account].&[1152133],[YOA].[YOA].&[2015]);
										//        THIS = ([Account].[Account].&[1152126])*500000;
										//    END SCOPE;

										//Test Case 3,5 and 6
										//    SCOPE([Account].[Account].&[1152133],[YOA].[YOA].&[2015]);
										//        THIS = ([Account].[Account].&[1152126])*700000;
										//    END SCOPE;

										//Test Case 4
										//    SCOPE([Account].[Account].&[1152133],[YOA].[YOA].&[2015]);
										//        THIS = ([Account].[Account].&[1152126])*1000000;
										//    END SCOPE;


										//Test Case 5
										//    SCOPE([Account].[Account].&[1152133],[YOA].[YOA].&[2016]);
										//        THIS = ([Account].[Account].&[1152126])*50000;
										//    END SCOPE;

										//Test Case 6
										//    SCOPE([Account].[Account].&[1152133],[YOA].[YOA].&[2016]);
										//        THIS = ([Account].[Account].&[1152126])*100000;
										//    END SCOPE;


										//Loss Offset
										([Account].[Account].&[1152134])
										= //Cur Year
										IIF( (IIF(    ([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]) > 0,([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]),NULL)
										+([Account].[Account].&[1152135],[Tri Focus].[Tri Focus].[All])) > ([Account].[Account].&[1152132],[Tri Focus].[Tri Focus].[All]) *-1
										,([Account].[Account].&[1152132])*-1
										,   (IIF(    ([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]) > 0,([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]),NULL)
										+([Account].[Account].&[1152135],[Tri Focus].[Tri Focus].[All]))
										* DIVIDE(([Account].[Account].&[1152132]),([Account].[Account].&[1152132],[Tri Focus].[Tri Focus].[All]))
										);


										// B/Fwd Loss
										([Account].[Account].&[1152135],[Tri Focus].[Tri Focus].[All].UNKNOWNMEMBER)
										=   ([Account].[Account].&[1152136],[YOA].[YOA].CURRENTMEMBER.PREVMEMBER);

										// C/Fwd Loss
										([Account].[Account].&[1152136],[Tri Focus].[Tri Focus].[All].UNKNOWNMEMBER)
										=   //Cur Year
										IIF(   IIF(([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]) > 0,([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]),NULL)
										+([Account].[Account].&[1152132],[Tri Focus].[Tri Focus].[All]) + ([Account].[Account].&[1152135],[Tri Focus].[Tri Focus].[All]) > 0
										, IIF(([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]) > 0,([Account].[Account].&[1152133],[Tri Focus].[Tri Focus].[All]),NULL)
										+([Account].[Account].&[1152132],[Tri Focus].[Tri Focus].[All]) + ([Account].[Account].&[1152135],[Tri Focus].[Tri Focus].[All])
										, NULL);

										END SCOPE;


										//Base Allocation
										SCOPE ( [Process].[Process Code].[M2],[Entity].[Entity].[6107],[Measures].[Cur Amount],{[YOA].[YOA].[YOA].MEMBERS}, {[Data Stage].[Data Stage].&[2]},[Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,{[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]}
										,[Calculation Mode].[Calculation Mode].&[Full] , [Time Series].[Time Series].[LTD]
										,{[Account].[Account].&[51365],[Account].[Account].&[62155],[Account].[Account].&[74501],[Account].[Account].&[74502]}
										);

										([Account].[Account].&[62155]) = IIF( ([YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-2) + "]"))
										,     (([Data Stage].[Data Stage].&[1],[Account].[Account].&[1152132])+([Data Stage].[Data Stage].&[1],[Account].[Account].&[1152134]))*-1
										,   NULL
										);


										([Account].[Account].&[74501]) = (  ([Account].[Account].&[62155])) * ([Measures].[Syndicate Split],[Entity].[Entity].[2623]) *-1;
										([Account].[Account].&[74502]) = ( ([Account].[Account].&[62155])) * ([Measures].[Syndicate Split],[Entity].[Entity].[623]) *-1;


										END SCOPE;

										/////////////////////////////////////////////////////////////////////////////
										///////// 6107 to CorePC
										/////////////////////////////////////////////////////////////////////////////
										SCOPE ( [Process].[Process Code].[M2],{[Entity].[Entity].[2623],[Entity].[Entity].[623]},[Measures].[Cur Amount],{[YOA].[YOA].[YOA].MEMBERS}, {[Data Stage].[Data Stage].&[2]},[Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										,{[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]}
										,[Calculation Mode].[Calculation Mode].&[Full] , [Time Series].[Time Series].[LTD]
										,{[Account].[Account].&[62100],[Account].[Account].&[11165],[Account].[Account].&[74534]}
										);

										([Time Series].[Time Series].[YTD]) = NULL;
										([Time Series].[Time Series].[Current Period]) = NULL;
										([Entity].[Entity].[623],[Account].[Account].&[62100]) = NULL;
										([Entity].[Entity].[2623],[Account].[Account].&[62100]) = NULL;
										([Entity].[Entity].[2623],[Account].[Account].&[11165]) = ([Entity].[Entity].[6107],[Account].[Account].&[74501])
										//                                                                       -- +([Entity].[Entity].[2623],[Account].[Account].&[11160],[Data Stage].[Data Stage].&[4])
										- IIF( ([YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-2) + "]"))
										,       ([Entity].[Entity].[2623],[Account].[Account].&[62100],[Data Stage].[Data Stage].&[4],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[USD])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										,   null
										);

										([Entity].[Entity].[623],[Account].[Account].&[11165]) = ([Entity].[Entity].[6107],[Account].[Account].&[74502])
										//                                                                        --+([Entity].[Entity].[623],[Account].[Account].&[11160],[Data Stage].[Data Stage].&[4])
										-   IIF( ([YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										OR [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-2) + "]"))
										,       ([Entity].[Entity].[623],[Account].[Account].&[62100],[Data Stage].[Data Stage].&[4],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[USD])
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										,   null
										);
										([Entity].[Entity].[2623],[Account].[Account].&[74534]) = ([Entity].[Entity].[2623],[Account].[Account].&[11165])*-1;
										([Entity].[Entity].[623],[Account].[Account].&[74534]) = ([Entity].[Entity].[623],[Account].[Account].&[11165])*-1;
										END SCOPE;

                                        /////////////////////////////////////////////////////////////////////
										/////////// Commission to USBESI(FIN-10006 Added by : Shashidhar Kandula dt:27-10-2023) 
										/////////////////////////////////////////////////////////////////////

								        SCOPE 
                                        ( 
                                        [Process].[Process Code].[1C]
//                                        ,[Account].[Account].&[62100],[Account].[Account].&[74598],[Account].[Account].&[74597],[Account].[Account].&[30125]
//                                        ,[Entity].[Entity].[USBESI],[Entity].[Entity].[BIUSGAAP],[Entity].[Entity].[BIUSPE]
                                        ,[YOA].[YOA].[YOA].MEMBERS
                                        ,[Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
                                        ,[Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										,[Data Stage].[Data Stage].&[2]);
                                        
										([Account].[Account].&[62100],[Entity].[Entity].[USBESI]) = IIF(([YOA].[YOA].CURRENTMEMBER.MemberValue) > 2023,([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Entity].[Entity].[BIUSPE])*-0.15 , null );
                                        
                                        ([Account].[Account].&[74598],[Entity].[Entity].[USBESI]) = ([Account].[Account].&[62100],[Entity].[Entity].[USBESI]) * -1 ;



                                        ([Account].[Account].&[74598],[Entity].[Entity].[BIUSGAAP]) = ([Account].[Account].&[62100],[Entity].[Entity].[USBESI]);

                                        ([Account].[Account].&[62100],[Entity].[Entity].[BIUSGAAP]) = ([Account].[Account].&[74598],[Entity].[Entity].[BIUSGAAP]) * -1 ;



                                        ([Account].[Account].&[74596],[Entity].[Entity].[BIUSPE]) = IIF(([YOA].[YOA].CURRENTMEMBER.MemberValue) > 2023,([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Entity].[Entity].[BIUSPE])*-0.15 , null );

                                        ([Account].[Account].&[30125],[Entity].[Entity].[BIUSPE]) = ([Account].[Account].&[74596],[Entity].[Entity].[BIUSPE]) * -1 ;



                                        ([Account].[Account].&[30125],[Entity].[Entity].[BIUSGAAP]) = ([Account].[Account].&[74596],[Entity].[Entity].[BIUSPE]);

                                        ([Account].[Account].&[74596],[Entity].[Entity].[BIUSGAAP]) = ([Account].[Account].&[30125],[Entity].[Entity].[BIUSGAAP]) * -1 ;

                                        END SCOPE;

										/////////////////////////////////////////////////////////////////////
										/////////// Earnings
										/////////////////////////////////////////////////////////////////////

										// Create Earning Process Set
										CREATE HIDDEN SET [EarningsProcess] AS
										{
										[Process].[Process Code].[UN]
										, [Process].[Process Code].[UM]
										, [Process].[Process Code].[UJ]
										, [Process].[Process Code].[UK]
										, [Process].[Process Code].[UP]
										, [Process].[Process Code].[UQ]
										, [Process].[Process Code].[3K]
										, [Process].[Process Code].[UL]
										};

										SCOPE([Calculation Mode].[Calculation Mode].&[Full]);

										// Get premium for Agresso Premium source systems
										SCOPE   (    [EarningsProcess], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1],[Measures].[Cur Amount]
										);

										// Source Agresso Syndicate and EIC
										SCOPE ([Premium Source System].[Premium Source System].[Agresso],{[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN,[Entity].[Platform Entity].[Platform].&[BID].CHILDREN});

                                        //FIN-12086(Modified Dt: 17-05-2024)(Excluded BIUSPE entity from the Entity list)
										SCOPE ( [Process].[Process Code].[UM],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[10100],Except([Entity].[Entity].[All].Children, {[Entity].[Entity].[BIUSPE]}));
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;

                                         //FIN-10005,FIN-12086(Modified Dt: 17-05-2024) Modified by :Sruthi Pitchikala,Modified dt:12-09-2023
                                        SCOPE ( [Process].[Process Code].[UM],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, {[Account].[Account].&[10265],[Account].[Account].&[10100]}
										,[Entity].[Entity].[BIUSPE]);

										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);

										END SCOPE;

										SCOPE ( [Process].[Process Code].[UN],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN, [Account].[Account].&[10100]);
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;

										SCOPE ( [Process].[Process Code].[UN],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN, [Account].[Account].&[10200]);
										THIS = ([Process].[Process Code].[UJ], [Data Stage].[Data Stage].&[2]);
										END SCOPE;

										SCOPE ( [Process].[Process Code].[UJ],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN, [Account].[Account].&[10100]);
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;

                                        //FIN-12086(Modified Dt: 17-05-2024)(Excluded BIUSPE entity from the Entity list)
										SCOPE ( [Process].[Process Code].[UP],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[30100],Except([Entity].[Entity].[All].Children, {[Entity].[Entity].[BIUSPE]}));
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+([Process].[Process Code].[UP], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;

                                         //FIN-12086(Modified Dt: 17-05-2024) Modified by :Sruthi Pitchikala,Modified dt:12-09-2023
                                        SCOPE ( [Process].[Process Code].[UP],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[30100],[Entity].[Entity].[BIUSPE]);
										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);
										END SCOPE;



										SCOPE ( [Process].[Process Code].[3K],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[30512],[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;


										SCOPE ( [Process].[Process Code].[3K],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[30510],[Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										THIS = ([Process].[Process Code].[EA], [Data Stage].[Data Stage].&[4]);
										END SCOPE;

										SCOPE ( [Process].[Process Code].[UK],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN, [Account].[Account].&[30100]);
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;

										SCOPE ( [Process].[Process Code].[UK],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN, [Account].[Account].&[30101]);
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;

										SCOPE ( [Process].[Process Code].[UK], [Account].[Account].&[50432],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN);
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])//+([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder])
										;
										END SCOPE;


										SCOPE ( [Process].[Process Code].[UQ],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN, [Account].[Account].&[30100]);
										THIS = ([Process].[Process Code].[UA], [Data Stage].[Data Stage].&[4])
										+ ([Process].[Process Code].[1E], [Data Stage].[Data Stage].&[4]);
										END SCOPE;




										SCOPE ( [Process].[Process Code].[UQ],[Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN, [Account].[Account].&[30200]);
										THIS = ([Process].[Process Code].[UK], [Data Stage].[Data Stage].&[2]);
										END SCOPE;

										// End Syndicate Source
										END SCOPE;



										// Source Agresso US Platform
										SCOPE ([Premium Source System].[Premium Source System].[Agresso],[Entity].[Platform Entity].[Platform].&[US].CHILDREN);

                                        //Added USBESI entity(FIN-8389)(Dt:28-06-2023)(USER:Sruthi Pitchikala)
										SCOPE ( [Process].[Process Code].[UM],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[10100]										
                                        ,{[Entity].[Entity].[USBICI],[Entity].[Entity].[USSYND],[Entity].[Entity].[USBAIC],[Entity].[Entity].[USBESI]});

										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);

										END SCOPE;

                                        //Added USBESI entity(FIN-8389)(Dt:28-06-2023)(USER:Sruthi Pitchikala)                                        
										//Added for co-surety
										SCOPE ( [Process].[Process Code].[UM],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[10260]
										,{[Entity].[Entity].[USBICI],[Entity].[Entity].[USBESI]});

										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);

										END SCOPE;
                                        //Added USBESI entity(FIN-8389)(Dt:28-06-2023)(USER:Sruthi Pitchikala)
										SCOPE ( [Process].[Process Code].[UM],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN, [Account].[Account].&[10265]
										,{[Entity].[Entity].[USBICI],[Entity].[Entity].[USBESI]});

										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);

										END SCOPE;
										//End of co-surety

										//US Ceded Premium Earning only for USBICI
                                        //Added 11102 and 11103 premium accounts (FIN:11489)(Dt:02-02-2024)(Modified by: Sruthi Pitchikala)
										SCOPE ( [Process].[Process Code].[UL],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN,[Entity].[Entity].[USBICI]
										,{[Account].[Account].&[11100],[Account].[Account].&[11110],[Account].[Account].&[11111],[Account].[Account].&[11102],[Account].[Account].&[11103]});
										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);
										END SCOPE;

                                        //US Ceded Premium Earning only for USBESI (FIN-8389)(Dt:28-06-2023)(USER:Sruthi Pitchikala)
                                        //Added 11102 and 11103 premium accounts (FIN:11489)(Dt:02-02-2024)(Modified by: Sruthi Pitchikala)
										SCOPE ( [Process].[Process Code].[UL],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN,[Entity].[Entity].[USBESI]
										,{[Account].[Account].&[11100],[Account].[Account].&[11110],[Account].[Account].&[11111],[Account].[Account].&[11102],[Account].[Account].&[11103]});
										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);
										END SCOPE;

										//US Ceded Premium Earning only for USBAIC
                                        //Added 11102 and 11103 premium accounts (FIN:11489)(Dt:02-02-2024)(Modified by: Sruthi Pitchikala)
										SCOPE ( [Process].[Process Code].[UL],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN,[Entity].[Entity].[USBAIC]
										,{[Account].[Account].&[11100],[Account].[Account].&[11110],[Account].[Account].&[11111],[Account].[Account].&[11102],[Account].[Account].&[11103]});
										THIS = ([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4]);
										END SCOPE;


										//US Earning DAC Entity / Target Entity

										SCOPE ( [Process].[Process Code].[UP],[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN,[Entity].[Entity].[USCONSUS]);

										//Commission Exp
										SCOPE ({[Account].[Account].&[30100],[Account].[Account].&[30110]},[Target Entity].[Target Entity].[USBICI]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBICI]);
										END SCOPE;

										SCOPE ({[Account].[Account].&[30100],[Account].[Account].&[30110]},[Target Entity].[Target Entity].[USBAIC]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBAIC]);
										END SCOPE;

										//Start of co-surety
										//Commission Exp
										SCOPE ({[Account].[Account].&[30120]},[Target Entity].[Target Entity].[USBICI]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBICI]);
										END SCOPE;
										SCOPE ({[Account].[Account].&[30125]},[Target Entity].[Target Entity].[USBICI]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBICI]);
										END SCOPE;
										//End of Co-surety

										//Commission Exp
										SCOPE ({[Account].[Account].&[30100],[Account].[Account].&[30110]},[Target Entity].[Target Entity].[USBUSA]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USSYND]);
										END SCOPE;

										//Ceded Commission BICI
										SCOPE ({[Account].[Account].&[30500],[Account].[Account].&[30510]},[Target Entity].[Target Entity].[USBICI]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBICI]);
										END SCOPE;

										//Ceded Commission BAIC
										SCOPE ({[Account].[Account].&[30500],[Account].[Account].&[30510]},[Target Entity].[Target Entity].[USBAIC]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBAIC]);
										END SCOPE;

										//Premium Tax
										SCOPE ({[Account].[Account].&[63100]},[Target Entity].[Target Entity].[USBICI]) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBICI]);
										END SCOPE;

										//Commission Income
										SCOPE ({[Account].[Account].&[61200],[Account].[Account].&[62100]},[Target Entity].[Target Entity].[USBUSA],[Tri Focus].[US SYND Trifocus].[Is US Synd Trifocus].&[1].CHILDREN) ;
										THIS =([Process].[Process Code].[All],[Data Stage].[Data Stage].&[4],[Target Entity].[Target Entity].[All],[Entity].[Entity].[USBUSA]);
										END SCOPE;
										END SCOPE;


										//US Earning DAC Entity G&A Exp
										SCOPE ( [Process].[Process Code].[UP],[Entity].[Entity].[USCONSUS]);

										//G&A Expenses
										SCOPE ( {[Account].[Account].&[30300]} ) ;
										THIS =([Process].[Process Code].[EC],[Data Stage].[Data Stage].&[4]);
										END SCOPE;

										END SCOPE;

										// End US Source
										END SCOPE;


										END SCOPE;


										// UM (Policy Earnings) for Policy Section - SYND
										SCOPE   (   [Process].[Process Code].[UM], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Measures].[Cur Amount] ,[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										,{[Account].[Account].&[15100],[Account].[Account].&[15200],[Account].[Account].&[15250],[Account].[Account].&[80100],[Account].[Account].&[80110],[Account].[Account].&[80120]}

										);
										SCOPE ( [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);

										([Account].[Account].&[15100]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161002],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[80100]) = ([Account].[Account].&[15100]) * -1;
										END SCOPE;

										SCOPE ( [Entity].[Platform Entity].[Platform].&[BID].CHILDREN);

										([Account].[Account].&[15100]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161017],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[80100]) = ([Account].[Account].&[15100]) * -1;
										END SCOPE;

                                        //FIN-10005,Modified by:Sruthi Pitchikala,Modified dt:12-09-2023
                                        SCOPE ( {[Entity].[Entity].[BIUSPE]},[Entity].[Platform Entity].[Platform].&[BID].CHILDREN);

                                        ([Account].[Account].&[15250]) = ([Account].[Account].&[10265], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161017],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[80120]) = ([Account].[Account].&[15250]) * -1;
										END SCOPE;
                                        // End of Fin-10005


                                        //Added USBESI(FIN-8389)(Dt:28-06-2023)(USER:Sruthi Pitchikala)
										SCOPE ( {[Entity].[Entity].[USBICI],[Entity].[Entity].[USBESI],[Entity].[Entity].[USSYND],[Entity].[Entity].[USBAIC]}, [Entity].[Platform Entity].[Platform].&[US].CHILDREN);
										([Account].[Account].&[15100]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[80100]) = ([Account].[Account].&[15100]) * -1;

										//start of co-surety


										([Account].[Account].&[15200]) = ([Account].[Account].&[10260], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[80110]) = ([Account].[Account].&[15200]) * -1;

										([Account].[Account].&[15250]) = ([Account].[Account].&[10265], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[RI Policy].[RI Policy].&[-1],[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[80120]) = ([Account].[Account].&[15250]) * -1;

										//End of Co-surety
										END SCOPE;



										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										// UL Ceded Premium Earnings USBICI & USBESI(FIN-8389)(Dt:28-06-2023)(USER:Sruthi Pitchikala)
										SCOPE   (   [Process].[Process Code].[UL], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Measures].[Cur Amount] ,[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										,{[Account].[Account].&[16100],[Account].[Account].&[16110],[Account].[Account].&[16111],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[73100],[Account].[Account].&[73110]}
										);
										SCOPE ( {[Entity].[Entity].[USBICI],[Entity].[Entity].[USBESI]}, [Entity].[Platform Entity].[Platform].&[US].CHILDREN );
										([Account].[Account].&[16100]) = ([Account].[Account].&[11100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										//([Account].[Account].&[73100]) = ([Account].[Account].&[16100]) * -1;
										([Account].[Account].&[16110]) = ([Account].[Account].&[11110], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[16111]) = ([Account].[Account].&[11111], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[73110]) = (([Account].[Account].&[16110])+([Account].[Account].&[16111])) * -1;

                                         //Added new accounts to the calculation (FIN-11489)(Dt:02-02-2024)(Modified by: Sruthi Pitchikala)
										([Account].[Account].&[16102]) = ([Account].[Account].&[11102], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[16103]) = ([Account].[Account].&[11103], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[73100]) = (([Account].[Account].&[16100])+([Account].[Account].&[16102])+([Account].[Account].&[16103])) * -1;
										END SCOPE;

										// UL Ceded Premium Earnings US BAIC

										SCOPE ( {[Entity].[Entity].[USBAIC]}, [Entity].[Platform Entity].[Platform].&[US].CHILDREN );
										([Account].[Account].&[16100]) = ([Account].[Account].&[11100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										//([Account].[Account].&[73100]) = ([Account].[Account].&[16100]) * -1;
										([Account].[Account].&[16110]) = ([Account].[Account].&[11110], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[16111]) = ([Account].[Account].&[11111], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[73110]) = (([Account].[Account].&[16110])+([Account].[Account].&[16111])) * -1;

                                         //Added new accounts to the calculation (FIN-11489)(Dt:02-02-2024)(Modified by: Sruthi Pitchikala)
										([Account].[Account].&[16102]) = ([Account].[Account].&[11102], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[16103]) = ([Account].[Account].&[11103], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1],[RI Policy].[RI Policy].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[73100]) = (([Account].[Account].&[16100])+([Account].[Account].&[16102])+([Account].[Account].&[16103])) * -1;
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;



										// UP (DAC Non Binders Earnings including internal commission)
										SCOPE   (   [Process].[Process Code].[UP], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										,{[Account].[Account].&[35100],[Account].[Account].&[35101],[Account].[Account].&[35600],[Account].[Account].&[76200]}
										);

										SCOPE ([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										([Account].[Account].&[35100]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161002],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[76200]) =  ([Account].[Account].&[35100]) * -1;

										END SCOPE;


										SCOPE ([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										([Account].[Account].&[35100]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161017],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[76200]) =  ([Account].[Account].&[35100]) * -1;
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;



										// UP US DAC
										SCOPE   (   [Process].[Process Code].[UP], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Measures].[Cur Amount] ,[Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										,{[Account].[Account].&[35100],[Account].[Account].&[35200],[Account].[Account].&[35400],[Account].[Account].&[35500]
										,[Account].[Account].&[35600],[Account].[Account].&[35700],[Account].[Account].&[35650],[Account].[Account].&[35750],[Account].[Account].&[76200]}
										,[Entity].[Platform Entity].[Platform].&[US].CHILDREN
										);
										SCOPE ( {[Entity].[Entity].[USCONSUS]} );
										([Account].[Account].&[35100]) =( ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[30110], [Data Stage].[Data Stage].&[1]))
										*  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );

										([Account].[Account].&[35400]) = ([Account].[Account].&[63100], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[35500]) =( ([Account].[Account].&[61200], [Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[62100], [Data Stage].[Data Stage].&[1]))
										*  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[35600]) = ([Account].[Account].&[30510], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[35700]) = ([Account].[Account].&[30500], [Data Stage].[Data Stage].&[1]) *  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										//Start of co-surety
										([Account].[Account].&[35750]) =( ([Account].[Account].&[30120], [Data Stage].[Data Stage].&[1]) )
										*  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										([Account].[Account].&[35650]) =( ([Account].[Account].&[30125], [Data Stage].[Data Stage].&[1]) )
										*  (   ([Account].[Account].&[1161021],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[State].[State].&[ZZ],[Product].[Product].&[-1],[Product Tree].[Product Tree].[All])
										-1 );
										//END OF CO-SURETY


										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;



										// UP US DAC G&A
										SCOPE   (   [Process].[Process Code].[UP], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Measures].[Cur Amount], [YOA].[YOA].[YOA].MEMBERS, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS,[Target Entity].[Target Entity].[Target Entity].MEMBERS
										,{[Account].[Account].&[35200]}
										,[Entity].[Platform Entity].[Platform].&[US].CHILDREN
										);
										SCOPE ( {[Entity].[Entity].[USCONSUS]} );
										([Account].[Account].&[35200]) = ([Account].[Account].&[30300], [Data Stage].[Data Stage].&[1])
										* IIF(  (([Account].[Account].&[10100],[Entity].[Entity].[USBICI],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1],[Target Entity].[Target Entity].[All],[State].[State].[All],[Product].[Product].[All])
										+ ([Account].[Account].&[10100],[Entity].[Entity].[USSYND],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1],[Target Entity].[Target Entity].[All],[State].[State].[All],[Product].[Product].[All]) )<> 0
										,DIVIDE(    ([Account].[Account].&[15100],[Entity].[Entity].[USBICI],[Process].[Process Code].[UM],[Target Entity].[Target Entity].[All],[State].[State].[All],[Product].[Product].[All])
										+ ([Account].[Account].&[15100],[Entity].[Entity].[USSYND],[Process].[Process Code].[UM],[Target Entity].[Target Entity].[All],[State].[State].[All],[Product].[Product].[All])
										, ([Account].[Account].&[10100],[Entity].[Entity].[USBICI],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1],[Target Entity].[Target Entity].[All],[State].[State].[All],[Product].[Product].[All])
										+ ([Account].[Account].&[10100],[Entity].[Entity].[USSYND],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1],[Target Entity].[Target Entity].[All],[State].[State].[All],[Product].[Product].[All])
										)
										,DIVIDE(    ([Account].[Account].&[15100],[Entity].[Entity].[USBICI],[Process].[Process Code].[UM],[Target Entity].[Target Entity].[All],[Tri Focus].[Tri Focus].[All],[State].[State].[All],[Product].[Product].[All])
										+ ([Account].[Account].&[15100],[Entity].[Entity].[USSYND],[Process].[Process Code].[UM],[Target Entity].[Target Entity].[All],[Tri Focus].[Tri Focus].[All],[State].[State].[All],[Product].[Product].[All])
										, ([Account].[Account].&[10100],[Entity].[Entity].[USBICI],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1],[Target Entity].[Target Entity].[All],[Tri Focus].[Tri Focus].[All],[State].[State].[All],[Product].[Product].[All])
										+ ([Account].[Account].&[10100],[Entity].[Entity].[USSYND],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1],[Target Entity].[Target Entity].[All],[Tri Focus].[Tri Focus].[All],[State].[State].[All],[Product].[Product].[All])
										)
										);
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;



										// UP US BS Account
										SCOPE   (   [Process].[Process Code].[UP], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Measures].[Cur Amount], [YOA].[YOA].[YOA].MEMBERS, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS,[Target Entity].[Target Entity].[Target Entity].MEMBERS
										,{[Account].[Account].&[76200]}
										,[Entity].[Platform Entity].[Platform].&[US].CHILDREN
										);
										SCOPE ( {[Entity].[Entity].[USCONSUS]} );
										([Account].[Account].&[76200]) =  ( ([Account].[Account].&[35100])
										+([Account].[Account].&[35200])
										+([Account].[Account].&[35400])
										+([Account].[Account].&[35500])
										+([Account].[Account].&[35600])
										+([Account].[Account].&[35700])
										//START OF CO-SURETY
										+([Account].[Account].&[35650])
										+([Account].[Account].&[35750])
										//END OF CO-SURETY
										) * -1;
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;





										// UJ (Binder Adjustment) for Policy Section
										SCOPE   (   [Process].[Process Code].[UJ], [Time Series].[Time Series].[LTD], [Data Stage].[Data Stage].&[2]
										,[Measures].[Cur Amount], [Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										,{[Account].[Account].&[10200],[Account].[Account].&[74102]}
										);

										SCOPE ([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										([Account].[Account].&[10200]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[74102]) = ([Account].[Account].&[10200]) * -1;
										END SCOPE;

										SCOPE ([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										([Account].[Account].&[10200]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161018],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[74102]) = ([Account].[Account].&[10200]) * -1;
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;


										// UN (Binder Earinngs) for Policy Section
										SCOPE   (   [Process].[Process Code].[UN], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount], [Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										,{[Account].[Account].&[15100],[Account].[Account].&[80100],[Account].[Account].&[10200]}
										);

										SCOPE ([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										([Account].[Account].&[15100]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) * (     ([Account].[Account].&[1161004],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 )  - ([Account].[Account].&[10200], [Data Stage].[Data Stage].&[1]);
										([Account].[Account].&[80100]) = ([Account].[Account].&[15100]) * -1;
										END SCOPE;

										SCOPE ([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										([Account].[Account].&[15100]) = ([Account].[Account].&[10100], [Data Stage].[Data Stage].&[1]) * (     ([Account].[Account].&[1161019],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 )  - ([Account].[Account].&[10200], [Data Stage].[Data Stage].&[1]);
										([Account].[Account].&[80100]) = ([Account].[Account].&[15100]) * -1;
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;




										// 3K (DAC Non Binders Earnings including internal commission)
										SCOPE   (   [Process].[Process Code].[3K], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										,{[Account].[Account].&[35802],[Account].[Account].&[76202]}
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);
										([Account].[Account].&[35802]) = ([Account].[Account].&[30512], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161002],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );

										([Account].[Account].&[76202]) =  ([Account].[Account].&[35802]) * -1;
										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										// 3K (DAC Non Binders Earnings including internal commission)
										SCOPE   (   [Process].[Process Code].[3K], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										,{[Account].[Account].&[35200],[Account].[Account].&[76202]}
										,[Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										);
										([Account].[Account].&[35200]) = ([Account].[Account].&[30510], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161002],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );

										([Account].[Account].&[76202]) =  ([Account].[Account].&[35200]) * -1;
										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										// UK (Binder Adjustment for Brokerage) for Policy Section
										SCOPE   (   [Process].[Process Code].[UK], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount], [Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										,{[Account].[Account].&[30200],[Account].[Account].&[30201],[Account].[Account].&[74102],[Account].[Account].&[50432],[Account].[Account].&[74405]}
										);

										SCOPE ([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										([Account].[Account].&[30200]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );

										([Account].[Account].&[30201]) = ([Account].[Account].&[30101], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );

										([Account].[Account].&[50432]) = ([Account].[Account].&[50432], [Data Stage].[Data Stage].&[1])-(0.9*([Account].[Account].&[30201]));
										([Account].[Account].&[74405]) = ([Account].[Account].&[50432])*-1;

										([Account].[Account].&[74102]) = ([Account].[Account].&[30200]+[Account].[Account].&[30201]) * -1;
										END SCOPE;

										SCOPE ([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										([Account].[Account].&[30200]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161018],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 );
										([Account].[Account].&[74102]) = ([Account].[Account].&[30200]) * -1;
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";
										END SCOPE;

										// UQ (DAC for Binders) for Policy Section
										SCOPE   (   [Process].[Process Code].[UQ], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount], [Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										,{[Account].[Account].&[35100],[Account].[Account].&[30200],[Account].[Account].&[76200]}
										);

										SCOPE ([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										([Account].[Account].&[35100]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161004],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 )  - ([Account].[Account].&[30200], [Data Stage].[Data Stage].&[1]);
										([Account].[Account].&[76200]) = ([Account].[Account].&[35100]) * -1;
										END SCOPE;

										SCOPE ([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										([Account].[Account].&[35100]) = ([Account].[Account].&[30100], [Data Stage].[Data Stage].&[1]) * (   ([Account].[Account].&[1161019],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All])
										-1 )  - ([Account].[Account].&[30200], [Data Stage].[Data Stage].&[1]);
										([Account].[Account].&[76200]) = ([Account].[Account].&[35100]) * -1;
										END SCOPE;

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										SCOPE   (   [Process].[Process Code].[3Y], [Time Series].[Time Series].[LTD],[Entity].[Entity].[Entity].Members,[Tri Focus].[Tri Focus].[Tri Focus].Members
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										);
										([Account].[Account].&[35800]) =    ([Account].[Account].&[30510],[Process].[Process Code].[C7],[Data Stage].[Data Stage].&[4])
										* (
										iif( //if Earning Pattern empty

										ISEMPTY(([Account].[Account].&[1161014]
										,[Process].[Process Code].[UM]
										,[Data Stage].[Data Stage].&[4]
										,[Cur Transaction Currency].[Tran Curr].[All]
										,[Measures].[Converted Amount]) )
										,
										0
										, // else take Earning Pattern
										(([Account].[Account].&[1161014],
										[Process].[Process Code].[UM],
										[Data Stage].[Data Stage].&[4],
										[Cur Transaction Currency].[Tran Curr].[All],[Measures].[Converted Amount])
										)-1)
										);

										[Account].[Account].&[76200] = -1*([Account].[Account].&[35800]);

										([Account].[Account].&[35800],[Entity].[Entity].[GAAP]) =-1* (([Account].[Account].&[35800],[Entity].[Entity Code].[ALL])
										- ([Account].[Account].&[35800],[Entity].[Entity].[623])) ;

										([Account].[Account].&[76200],[Entity].[Entity].[GAAP]) =-1* (([Account].[Account].&[76200],[Entity].[Entity Code].[ALL])
										- ([Account].[Account].&[76200],[Entity].[Entity].[623])) ;

										END SCOPE;

										// EA (DAC Earning adjustments)
										SCOPE   (   [Process].[Process Code].[3Z], [Time Series].[Time Series].[LTD],[Entity].[Entity].[Entity].Members,[Tri Focus].[Tri Focus].[Tri Focus].Members
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										);

										([Account].[Account].&[35200]) =    ([Account].[Account].&[30300],[Process].[Process Code].[EA],[Data Stage].[Data Stage].&[4])
										* (
										iif( //if Earning Pattern empty

										ISEMPTY(([Account].[Account].&[1161014]
										,[Process].[Process Code].[UM]
										,[Data Stage].[Data Stage].&[4]
										,[Cur Transaction Currency].[Tran Curr].[All]
										,[Measures].[Converted Amount]) )
										,
										0
										, // else take Earning Pattern
										(([Account].[Account].&[1161014],
										[Process].[Process Code].[UM],
										[Data Stage].[Data Stage].&[4],
										[Cur Transaction Currency].[Tran Curr].[All],[Measures].[Converted Amount])
										)-1)
										);


										//[Account].[Account].&[76200] = -1*[Account].[Account].&[35200];

										([Account].[Account].&[35300]) =    ([Account].[Account].&[30310],[Process].[Process Code].[EA],[Data Stage].[Data Stage].&[4])
										*  (
										iif( //if Earning Pattern empty

										ISEMPTY(([Account].[Account].&[1161014]
										,[Process].[Process Code].[UM]
										,[Data Stage].[Data Stage].&[4]
										,[Cur Transaction Currency].[Tran Curr].[All]
										,[Measures].[Converted Amount]) )
										,
										0
										, // else take Earning Pattern
										(([Account].[Account].&[1161014],
										[Process].[Process Code].[UM],
										[Data Stage].[Data Stage].&[4],
										[Cur Transaction Currency].[Tran Curr].[All],[Measures].[Converted Amount])
										)-1
										)//end iif
										);
										[Account].[Account].&[76200] = -1*((
										([Account].[Account].&[30300],[Process].[Process Code].[EA],[Data Stage].[Data Stage].&[4])
										* (
										iif( //if Earning Pattern empty

										ISEMPTY(([Account].[Account].&[1161014]
										,[Process].[Process Code].[UM]
										,[Data Stage].[Data Stage].&[4]
										,[Cur Transaction Currency].[Tran Curr].[All]
										,[Measures].[Converted Amount]) )
										,
										0
										, // else take Earning Pattern
										(([Account].[Account].&[1161014],
										[Process].[Process Code].[UM],
										[Data Stage].[Data Stage].&[4],
										[Cur Transaction Currency].[Tran Curr].[All],[Measures].[Converted Amount])
										)-1
										)//end iif
										))

										+
										(([Account].[Account].&[30310],[Process].[Process Code].[EA],[Data Stage].[Data Stage].&[4])
										* (
										iif( //if Earning Pattern empty

										ISEMPTY(([Account].[Account].&[1161014]
										,[Process].[Process Code].[UM]
										,[Data Stage].[Data Stage].&[4]
										,[Cur Transaction Currency].[Tran Curr].[All]
										,[Measures].[Converted Amount]) )
										,
										0
										, // else take Earning Pattern
										(([Account].[Account].&[1161014],
										[Process].[Process Code].[UM],
										[Data Stage].[Data Stage].&[4],
										[Cur Transaction Currency].[Tran Curr].[All],[Measures].[Converted Amount])
										)-1
										)//end iif
										))
										);



										/*END SCOPE;


										([Account].[Account].&[35200]) =    //( ([Account].[Account].&[1161006],StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]"),[Process].[Process Code].[UM]) );
										( ([Account].[Account].&[1161006]
										,StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										,StrtoMember("[accounting period].[accounting period].&[" +str(    (((int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1)*100)+12)   ) + "]")
										,[Process].[Process Code].[UM]) )
										-
										( ([Account].[Account].&[1161006]
										,StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-1) + "]")
										,[Process].[Process Code].[UM]) )
										;
										*/

										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										///////////////////////////////////////////////////
										// UPR / DAC Correction for new BICI Contract
										// Fully earn BICI Trifocus codes for 2016 and 2017 YOA
										// Dave Grant 07/08/2018
										// Req by Niall and Daragh https://www.wrike.com/open.htm?id=254132021
										///////////////////////////////////////////////////

										SCOPE (
										[Time Series].[Time Series].[LTD]
										,[Data Stage].[Data Stage].&[2]
										,{[Process].[Process Code].[3K], [Process].[Process Code].[UP], [Process].[Process Code].[UM]}
										,{[Account].[Account].&[15100],[Account].[Account].&[35100],[Account].[Account].&[35802]
										,[Account].[Account].&[80100],[Account].[Account].&[76200],[Account].[Account].&[76202]}
										,{[YOA].[YOA].&[2016],[YOA].[YOA].&[2017]}
										,filter (
										filter(
										filter([Tri Focus].[Tri Focus].[Tri Focus].members,([Trifocus Tree].[Trifocus Tree].[TFD Specialty Lines],[Measures].[Transaction Count]))
										,vba!instr([Tri Focus].[Tri Focus].CurrentMember.Properties("Tri Focus Name"),"BICI")>0
										)

										,([Measures].[Transaction Count],[Entity].[Entity].[USBICI],[YOA].[YOA].&[2016])
										+([Measures].[Transaction Count],[Entity].[Entity].[USBICI],[YOA].[YOA].&[2017])
										>0)
										,[Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										,[Measures].[Cur Amount]
										);
										THIS = null;
										END SCOPE;

										///////////////////////////////////////////////////
										// UPR / DAC Correction for new BICI Contract
										///////////////////////////////////////////////////

										// RI Spend Earnings
										//  FAC XL RAD Earnings (Binder Earnings) 3G RAD
										SCOPE   (   [Process].[Process Code].[3G], [Time Series].[Time Series].[LTD]
										,[Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										);

										([Account].[Account].&[11100]) = ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4], [Process].[Process Code].[2A]) ;

										SCOPE ([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										([Account].[Account].&[16100]) = ([Account].[Account].&[11100])  * (  ([Account].[Account].&[1161004],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[RI Policy].[RI Policy].&[-1]) - 1);
										([Account].[Account].&[73100]) = ([Account].[Account].&[16100]) * -1;
										END SCOPE;

										SCOPE ([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										([Account].[Account].&[16100]) = ([Account].[Account].&[11100])  * (  ([Account].[Account].&[1161019],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[RI Policy].[RI Policy].&[-1]) - 1);
										([Account].[Account].&[73100]) = ([Account].[Account].&[16100]) * -1;
										END SCOPE;


										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										// FAC XL LOD Earnings (Policy Earnings)  3H LOD
										SCOPE   (   [Process].[Process Code].[3H], [Time Series].[Time Series].[LTD]
										,[Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										);

										([Account].[Account].&[11100]) = ([Account].[Account].&[11100], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[2A]) ;

										SCOPE ([Entity].[Platform Entity].[Platform].&[SYND].CHILDREN);
										([Account].[Account].&[16100]) = ([Account].[Account].&[11100]) * (([Account].[Account].&[1161002],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[RI Policy].[RI Policy].&[-1]) - 1);
										([Account].[Account].&[73100]) = ([Account].[Account].&[16100]) * -1;
										END SCOPE;


										SCOPE ([Entity].[Platform Entity].[Platform].&[BID].CHILDREN);
										([Account].[Account].&[16100]) = ([Account].[Account].&[11100]) * (([Account].[Account].&[1161017],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[RI Policy].[RI Policy].&[-1]) - 1);
										([Account].[Account].&[73100]) = ([Account].[Account].&[16100]) * -1;
										END SCOPE;



										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;


										// Sidecar LOD Earnings 3L
										SCOPE   (   [Process].[Process Code].[3L], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Non-Binder].CHILDREN
										);

										([Account].[Account].&[11101]) = ([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[UB]) +
										([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E]) +
                                        ([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[2I]) +
										([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[2H]) ;

										([Account].[Account].&[16101]) = ([Account].[Account].&[11101]) * (([Account].[Account].&[1161002],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[RI Policy].[RI Policy].&[-1]) - 1);
										([Account].[Account].&[73100]) = ([Account].[Account].&[16101]) * -1;
										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										// Sidecar RAD Earnings 3M
										SCOPE   (   [Process].[Process Code].[3M], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										);

										([Account].[Account].&[11101]) = ([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[UB]) +
										([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E]) +
                                        ([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[2I]) +
										([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[2H]) ;

										([Account].[Account].&[16101]) = ([Account].[Account].&[11101]) * (([Account].[Account].&[1161004],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[RI Policy].[RI Policy].&[-1]) - 1)
										-([Account].[Account].&[11101],[Process].[Process Code].[3N]);
										([Account].[Account].&[73100]) = ([Account].[Account].&[16101]) * -1;
										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										// Sidecar Binder Adj
										SCOPE   (   [Process].[Process Code].[3N], [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount] , [Earnings].[Earnings Policy Type].[Earning Type].&[Binder].CHILDREN
										);

										([Account].[Account].&[11101]) = ( ([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[UB]) +
										([Account].[Account].&[11101], [Data Stage].[Data Stage].&[4],[Process].[Process Code].[1E]))
										* (([Account].[Account].&[1161003],[Measures].[UW Percentage],[Process].[Process Code].&[-1],[Entity].[Entity].&[-1],[Cur Transaction Currency].[Tran Curr].[All],[Client].[Client].&[-1],[Tri Focus].[Tri Focus].&[-1],[Policy Section].[Pk Policy Section].&[-1]
										,[Trifocus Tree].[Trifocus Tree].[All],[YOA Group].[YOA Group].[All],[Account Tree].[Account Tree].[All],[Entity Tree].[Entity Tree].[All],[RI Policy].[RI Policy].&[-1]) - 1);

										([Account].[Account].&[82101]) = ([Account].[Account].&[11101]) * -1;
										Format_String( THIS ) = "#,##0.00 ;(#,##0.00)";

										END SCOPE;

										
										//////////// FIN-12570 3I Process calclulations for exclude BERE Entity dt: 27-Aug-2024 ///
										// QS Non Munich 3I
										SCOPE(
										[Account].[Account].&[16102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[3I]
										, MeasureGroupMeasures('Amounts')
										,Except([Entity].[Entity].[All].Children, {[Entity].[Entity].[BERE]})
										// Same process should work for SYND and EIC, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);


										This =
										(
										iif(isempty(([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UM],[Measures].CurrentMember)),
										null,

										(([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].[UM],[Measures].CurrentMember ) -1  )
										*
										([Account].[Account].&[11102], [Data Stage].[Data Stage].&[4], [Process].[Process Code].[2B],[Measures].CurrentMember)
										)
										);
										END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[73100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[3I]
										, MeasureGroupMeasures('Amounts')
										,Except([Entity].[Entity].[All].Children, {[Entity].[Entity].[BERE]})
										// Same process should work for SYND and EIC, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[16102]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[3I]
										) * -1;

										END SCOPE;


										// QS Munich 3J
										SCOPE(
										[Account].[Account].&[16103]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[3J]
										, MeasureGroupMeasures('Amounts')
										// Same process should work for SYND and EIC, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity]);


										This =
										(

										iif(isempty(([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UM],[Measures].CurrentMember)),
										null,

										(  ([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].[UM],[Measures].CurrentMember ) - 1 )
										*
										([Account].[Account].&[11103], [Data Stage].[Data Stage].&[4], [Process].[Process Code].[2C],[Measures].CurrentMember)
										)
										);

										END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[73100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[3J]
										, MeasureGroupMeasures('Amounts')
										// Same process should work for SYND and EIC, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[16103]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[3J]
										) * -1;

										END SCOPE;

										// RI Spend ORC

										// FAC ORC

										SCOPE(
										  [Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2E]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity])
										;

										This =
										(
										([Account].[Account].&[2000068],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2E],[Measures].CurrentMember ) * -1
										)

										*
										(
										Aggregate(
										({[Account].[Account].&[11100]}//, [Account].[Account].&[16100]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[2A] )
										, [Measures].CurrentMember
										)

										+

										Aggregate(
										({[Account].[Account].&[11100]}//, [Account].[Account].&[16100]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[3G] )
										, [Measures].CurrentMember
										)
										+

										Aggregate(
										({[Account].[Account].&[11100]}//, [Account].[Account].&[16100]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[3H] )
										, [Measures].CurrentMember
										)
										);
										END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2E]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2E]
										) * -1;

										END SCOPE;

                                         //SYND 2E 51331 ORC
                                        SCOPE(
										[Account].[Account].&[51331]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2E]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);
                                        
										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity])
										;

										This =
										(
										([Account].[Account].&[2000068],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2E],[Measures].CurrentMember ) * -1
										)

										*
										(
										Aggregate(
										({[Account].[Account].&[16100]}//, [Account].[Account].&[11100]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[2A] )
										, [Measures].CurrentMember
										)

										+

										Aggregate(
										({[Account].[Account].&[16100]}//, [Account].[Account].&[11100]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[3G] )
										, [Measures].CurrentMember
										)
										+

										Aggregate(
										({[Account].[Account].&[16100]}//, [Account].[Account].&[11100]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[3H] )
										, [Measures].CurrentMember
										)
										);
										END SCOPE;
                                        END SCOPE;
                                        
                                        // 83110 2E

                                        SCOPE(
										[Account].[Account].&[83110]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2E]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[51331]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2E]
										) * -1;
										END SCOPE;

										// QS Non Munich ORC

										SCOPE(
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity])
										;

										This =
										(
										([Account].[Account].&[2000069],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2F],[Measures].CurrentMember ) * -1
										)

										*
										(
										Aggregate(
										({[Account].[Account].&[11102]}//, [Account].[Account].&[16102]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[2B] )
										, [Measures].CurrentMember
										)

										+

										Aggregate(
										({[Account].[Account].&[11102]}//, [Account].[Account].&[16102]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[3I] )
										, [Measures].CurrentMember
										)

										);
										END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										) * -1;

										END SCOPE;
                                        // SYND 2F 51331 ORC
                                        SCOPE(
										[Account].[Account].&[51331]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);
                                        SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity])
										;

                                        This =
                                        (
                                          IIF(isempty(([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UM],[Measures].CurrentMember)),
                                         NULL,

                                         (([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],
                                         [Process].[Process Code].[UM],[Measures].CurrentMember ) -1  )
                                          *
                                          (
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										)
                                        )
                                        );
                                        END SCOPE;
                                         END SCOPE;
                                        // 2F 83110  
                                        SCOPE(
										[Account].[Account].&[83110]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[51331]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2F]
										) * -1;
 
										END SCOPE;

										// QS Munich ORC

										SCOPE(
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])//*
										//Leaves([Entity])
										;

										This =
										(
										(  ([Account].[Account].&[2000067],[Data Stage].[Data Stage].&[1],
										[Process].[Process Code].[2G],[Measures].CurrentMember ) ) *  - 1
										)

										*
										(
										Aggregate(
										({[Account].[Account].&[11103]}//, [Account].[Account].&[16103]--ORC	
									    ,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[2C] )
										, [Measures].CurrentMember
										)

										+

										Aggregate(
										({[Account].[Account].&[11103]}//, [Account].[Account].&[16103]--ORC
										,[Data Stage].[Data Stage].&[4]
										,[Process].[Process Code].[3J] )
										, [Measures].CurrentMember
										)

										);
										END SCOPE;

										END SCOPE;

										SCOPE(
										[Account].[Account].&[82100]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										) * -1;

										END SCOPE;
                                        //SYND 2G 51331
                                        SCOPE(
										[Account].[Account].&[51331]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);
                                        SCOPE

										Leaves([Cur Transaction Currency])*
										Leaves([YOA]) *
										Leaves([Tri Focus])*
										Leaves([Entity])
										;
                                        This =
                                        (
                                          IIF(isempty(([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UM],[Measures].CurrentMember)),
                                         NULL,

                                         (([Account].[Account].&[1161014],[Data Stage].[Data Stage].&[2],
                                         [Process].[Process Code].[UM],[Measures].CurrentMember ) -1  )
                                          *
                                          (
										  [Account].[Account].&[51300]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										)
                                        ));
                                        END SCOPE;
                                        END SCOPE;

                                        // 2G 83110 
 
                                        SCOPE(
										[Account].[Account].&[83110]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										, MeasureGroupMeasures('Amounts')
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);

										This = (
										[Account].[Account].&[51331]
										, [Data Stage].[Data Stage].&[2]
										, [Process].[Process Code].[2G]
										) * -1;
                                        END SCOPE;


										// Earnings Percentage at high Levels

										SCOPE   (   [Time Series].[Time Series].[LTD],{[Measures].[Cur Amount],[Measures].[Converted Amount]}
										,{   [Account].[Account].&[1161001]
										,[Account].[Account].&[1161002]
										,[Account].[Account].&[1161003]
										,[Account].[Account].&[1161004]
										,[Account].[Account].&[1161005]
										,[Account].[Account].&[1161006]
										,[Account].[Account].&[1161007]
										,[Account].[Account].&[1161008]
										,[Account].[Account].&[1161009]
										,[Account].[Account].&[1161010]
										,[Account].[Account].&[1161011]
										,[Account].[Account].&[1161012]
										,[Account].[Account].&[1161013]
										,[Account].[Account].&[1161014]
										,[Account].[Account].&[1161015]
										}
										,  [EarningsProcess]
										);

										// Live Agresso RI Earning
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161015]) =
										IIF(DIVIDE(   ([Account].[Account].&[16100],[Process].[Process Code].[All])
										+([Account].[Account].&[16101],[Process].[Process Code].[All])
										+([Account].[Account].&[16102],[Process].[Process Code].[All])
										+([Account].[Account].&[16103],[Process].[Process Code].[All])
										+([Account].[Account].&[11100],[Process].[Process Code].[All])
										+([Account].[Account].&[11101],[Process].[Process Code].[All])
										+([Account].[Account].&[11102],[Process].[Process Code].[All])
										+([Account].[Account].&[11103],[Process].[Process Code].[All])
										+([Account].[Account].&[11250],[Process].[Process Code].[All])

										,([Account].[Account].&[11100],[Process].[Process Code].[All])
										+([Account].[Account].&[11101],[Process].[Process Code].[All])
										+([Account].[Account].&[11102],[Process].[Process Code].[All])
										+([Account].[Account].&[11103],[Process].[Process Code].[All])
										+([Account].[Account].&[11250],[Process].[Process Code].[All])
										)>1,1,
										DIVIDE(   ([Account].[Account].&[16100],[Process].[Process Code].[All])
										+([Account].[Account].&[16101],[Process].[Process Code].[All])
										+([Account].[Account].&[16102],[Process].[Process Code].[All])
										+([Account].[Account].&[16103],[Process].[Process Code].[All])
										+([Account].[Account].&[11100],[Process].[Process Code].[All])
										+([Account].[Account].&[11101],[Process].[Process Code].[All])
										+([Account].[Account].&[11102],[Process].[Process Code].[All])
										+([Account].[Account].&[11103],[Process].[Process Code].[All])
										+([Account].[Account].&[11250],[Process].[Process Code].[All])

										,([Account].[Account].&[11100],[Process].[Process Code].[All])
										+([Account].[Account].&[11101],[Process].[Process Code].[All])
										+([Account].[Account].&[11102],[Process].[Process Code].[All])
										+([Account].[Account].&[11103],[Process].[Process Code].[All])
										+([Account].[Account].&[11250],[Process].[Process Code].[All])
										)
										);


										// Live Agresso Earning
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161006])
										= DIVIDE( ROUND(    ([Account].[Account].&[10100],[Process].[Process Code].[All])
										-([Account].[Account].&[10100],[Process].[Process Code].[US])
										+([Account].[Account].&[15100],[Process].[Process Code].[All])
										+([Account].[Account].&[10200],[Process].[Process Code].[All]) ,2)
										,  ROUND( ([Account].[Account].&[10100],[Process].[Process Code].[All])
										-([Account].[Account].&[10100],[Process].[Process Code].[US]) ,2)
										);

										// Live Agresso Writting
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161005])
										= DIVIDE( ROUND(    ([Account].[Account].&[10100],[Process].[Process Code].[All])
										-([Account].[Account].&[10100],[Process].[Process Code].[US])
										+([Account].[Account].&[10200],[Process].[Process Code].[All]) ,2)
										, ROUND(  ([Account].[Account].&[10100],[Process].[Process Code].[All])
										-([Account].[Account].&[10100],[Process].[Process Code].[US]) ,2)
										);


										// Live Agresso Brokerage Earning
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161012])
										= DIVIDE( ROUND(    ([Account].[Account].&[30100],[Process].[Process Code].[All])
										-([Account].[Account].&[30100],[Process].[Process Code].[US])
										+([Account].[Account].&[35100],[Process].[Process Code].[All])
										+([Account].[Account].&[30200],[Process].[Process Code].[All]) ,2)
										, ROUND(  ([Account].[Account].&[30100],[Process].[Process Code].[All])
										-([Account].[Account].&[30100],[Process].[Process Code].[US]) ,2)
										);

										// Live Agresso Brokerage Writting
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161011])
										= DIVIDE( ROUND(    ([Account].[Account].&[30100],[Process].[Process Code].[All])
										-([Account].[Account].&[30100],[Process].[Process Code].[US])
										+([Account].[Account].&[30200],[Process].[Process Code].[All]) ,2)
										, ROUND(  ([Account].[Account].&[30100],[Process].[Process Code].[All])
										-([Account].[Account].&[30100],[Process].[Process Code].[US]) ,2)
										);


										// Live Agresso Internal Commission Earning
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161013])
										= DIVIDE(ROUND(     ([Account].[Account].&[30500],[Process].[Process Code].[All])
										+([Account].[Account].&[35600],[Process].[Process Code].[All]) ,2)
										,ROUND(    ([Account].[Account].&[30500],[Process].[Process Code].[All]) ,2)
										);


										// Live Agresso Net Earning Patterns
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161014])
										= DIVIDE(ROUND(     // Gross Premium
										([Account].[Account].&[10100],[Process].[Process Code].[All])
										-([Account].[Account].&[10100],[Process].[Process Code].[US])
										+([Account].[Account].&[15100],[Process].[Process Code].[All])
										+([Account].[Account].&[10200],[Process].[Process Code].[All])
										// Brokerage
										+([Account].[Account].&[30100],[Process].[Process Code].[All])
										-([Account].[Account].&[30100],[Process].[Process Code].[US])
										+([Account].[Account].&[35100],[Process].[Process Code].[All])
										+([Account].[Account].&[30200],[Process].[Process Code].[All])
										// ORC
										+([Account].[Account].&[30500],[Process].[Process Code].[All])
										+([Account].[Account].&[35600],[Process].[Process Code].[All])
										// Reinstatement Premium
										+([Account].[Account].&[10355],[Process].[Process Code].[All]) ,2)
										, ROUND(    // Gross Premium
										([Account].[Account].&[10100],[Process].[Process Code].[All])
										-([Account].[Account].&[10100],[Process].[Process Code].[US])
										+([Account].[Account].&[10200],[Process].[Process Code].[All])
										// Brokerage
										+([Account].[Account].&[30100],[Process].[Process Code].[All])
										-([Account].[Account].&[30100],[Process].[Process Code].[US])
										+([Account].[Account].&[30200],[Process].[Process Code].[All])
										// ORC
										+([Account].[Account].&[30500],[Process].[Process Code].[All])
										// Reinstatement Premium
										+([Account].[Account].&[10355],[Process].[Process Code].[All]) ,2)
										);

										// Combined Earning
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161006])
										=  DIVIDE(       ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10100],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[15100],[Process].[Process Code].[UM])
										+([Account].[Account].&[15100],[Process].[Process Code].[UN])
										+([Account].[Account].&[10200],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										,   ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10100],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										);

										// Binder Earning
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161004])
										=  DIVIDE(       ([Account].[Account].&[10100],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[15100],[Process].[Process Code].[UN])
										+([Account].[Account].&[10200],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										,   ([Account].[Account].&[10100],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										);

										// Non-Binder Earning
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161002])
										=  DIVIDE(       ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[15100],[Process].[Process Code].[UM])
										,   ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										);


										// Combined Writting
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161005])
										=  DIVIDE(       ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10100],[Process].[Process Code].[UJ],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10200],[Process].[Process Code].[UJ])
										,   ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10100],[Process].[Process Code].[UJ],[Data Stage].[Data Stage].&[1])
										);

										// Binder Writting
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161003])
										=  DIVIDE(       ([Account].[Account].&[10100],[Process].[Process Code].[UJ],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10200],[Process].[Process Code].[UJ])
										,   ([Account].[Account].&[10100],[Process].[Process Code].[UJ],[Data Stage].[Data Stage].&[1])
										);

										// Non- Binder Writting
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161001])
										=  DIVIDE(       ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										,   ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										);


										// Combined Brokerage Earning
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161012])
										=  DIVIDE(       ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30100],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[35100],[Process].[Process Code].[UP])
										+([Account].[Account].&[35100],[Process].[Process Code].[UQ])
										+([Account].[Account].&[30200],[Process].[Process Code].[UK])
										,   ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30100],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										);

										// Binder Brokerage Earning
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161010])
										=  DIVIDE(       ([Account].[Account].&[30100],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[35100],[Process].[Process Code].[UQ])
										+([Account].[Account].&[30200],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										,   ([Account].[Account].&[30100],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										);

										// Non-Binder Brokerage Earning
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161008])
										=  DIVIDE(       ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[35100],[Process].[Process Code].[UP])
										,   ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										);




										// Combined Brokerage Written
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161011])
										=  DIVIDE(       ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30100],[Process].[Process Code].[UK],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30200],[Process].[Process Code].[UK])
										,   ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30100],[Process].[Process Code].[UK],[Data Stage].[Data Stage].&[1])
										);

										// Binder Brokerage Written
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161009])
										=  DIVIDE(       ([Account].[Account].&[30100],[Process].[Process Code].[UK],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30200],[Process].[Process Code].[UK])
										,   ([Account].[Account].&[30100],[Process].[Process Code].[UK],[Data Stage].[Data Stage].&[1])
										);

										// Non-Binder Brokerage Written
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161007])
										=  DIVIDE(       ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										,   ([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										);


										// Non-Binder Internal Commission Earnings
										([Data Stage].[Data Stage].&[2],[Earnings].[Earnings].[All],[Account].[Account].&[1161013])
										= DIVIDE(     ([Account].[Account].&[30500],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[35600],[Process].[Process Code].[UP])
										,   ([Account].[Account].&[30500],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										);


									   // Base Allocation Net Earning Patterns(handled divided by zero on 02/01/2023 - FIN:6373)
										([Data Stage].[Data Stage].&[2],[Account].[Account].&[1161014])
										=  // Gross Premium
										IIF(Round(
                                        ([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10100],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10200],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										// Brokerage
										+([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30100],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30200],[Process].[Process Code].[UK])
										// ORC
										+([Account].[Account].&[30500],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										// Reinstatement Premium
										+([Account].[Account].&[10355],[Process].[Process Code].[1D]),2)=0,null,
                                        
                                        DIVIDE(    // Gross Premium
										([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10100],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[15100],[Process].[Process Code].[UM])
										+([Account].[Account].&[15100],[Process].[Process Code].[UN])
										+([Account].[Account].&[10200],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										// Brokerage
										+([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30100],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[35100],[Process].[Process Code].[UP])
										+([Account].[Account].&[35100],[Process].[Process Code].[UQ])
										+([Account].[Account].&[30200],[Process].[Process Code].[UK])
										// ORC
										+([Account].[Account].&[30500],[Process].[Process Code].[UP])
										+([Account].[Account].&[35600],[Process].[Process Code].[UP])
										// Reinstatement Premium
										+([Account].[Account].&[10355],[Process].[Process Code].[1D])
										,    // Gross Premium
										([Account].[Account].&[10100],[Process].[Process Code].[UM],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10100],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[10200],[Process].[Process Code].[UN],[Data Stage].[Data Stage].&[1])
										// Brokerage
										+([Account].[Account].&[30100],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30100],[Process].[Process Code].[UQ],[Data Stage].[Data Stage].&[1])
										+([Account].[Account].&[30200],[Process].[Process Code].[UK])
										// ORC
										+([Account].[Account].&[30500],[Process].[Process Code].[UP],[Data Stage].[Data Stage].&[1])
										// Reinstatement Premium
										+([Account].[Account].&[10355],[Process].[Process Code].[1D]))
                                        );


										Format_String (THIS) = "Percent";
										END SCOPE;
										// End of Full
										END SCOPE;


                                        /////////////////////////////////////////////////////////////////////////
										/////////// FIN-10737 LES Earnings Modified by Shashidhar Kandula, data: 13:Feb 2024
                                        //// summimg all the 3 accounts pushed into -ve account//////////////////
										//////////// FIN-11741 alternate solution to resolve fx postings dt: 20-mar-2024 ///
        
                                        SCOPE   ( FILTER ([YOA].[YOA].[YOA].Members,[YOA].[YOA].CURRENTMEMBER.MemberValue > 2023),
                                        [Time Series].[Time Series].MEMBERS  
										,[Measures].[Cur Amount]
                                        , [Entity].[Entity].[BIUSPE]
                                        , [Entity].[Entity Code].&[BIUSPE]										
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
                                        ,{[Account].[Account].&[16100],[Account].[Account].&[16102],[Account].[Account].&[16103],[Account].[Account].&[73100]}

										);
                                        
                                        ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UL]) =
                                      
                                       -1 * (
                                                ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UL])
                                         * (1 -
                                                (DIVIDE(([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[15250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30125],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30510],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[35650],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                          ,
                                         (([Account].[Account].&[10100],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[10265],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[30100],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[30125],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])),0
                                           ))) );

                                     ///////////////////////11103 Account calculation//////////////////////////////////////////

                                        ([Account].[Account].&[16102],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UL]) =
                                      
                                       -1 * (
                                                ([Account].[Account].&[11102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UL])
                                         * (1 -
                                                (DIVIDE(([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[15250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30125],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30510],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[35650],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                          ,
                                         (([Account].[Account].&[10100],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[10265],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[30100],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[30125],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])),0
                                           ))) );
    


                           ///////////////////////11103 Account calculation//////////////////////////////////////////

                                        ([Account].[Account].&[16103],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UL]) =
                                      
                                       -1 * (
                                                ([Account].[Account].&[11103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[UL])
                                         * (1 -
                                                (DIVIDE(([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[15250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30125],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30510],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[35650],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                          ,
                                         (([Account].[Account].&[10100],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[10265],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[30100],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +([Account].[Account].&[30125],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])),0
                                           ))) );
 
       
                                        ([Account].[Account].&[73100],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UL]) =
                                          (([Account].[Account].&[16100],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UL])
                                         +([Account].[Account].&[16102],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UL])
                                         +([Account].[Account].&[16103],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[UL]))  *  -1;

										Format_String( [Measures].[Cur Amount]	 ) = "#,##0.00 ;(#,##0.00)";     
                                        
                                        END SCOPE;

										//////////// FIN-12570 3I Process calclulations for BERE Entity dt: 27-Aug-2024 ///
        
                                        SCOPE   ( FILTER ([YOA].[YOA].[YOA].Members,[YOA].[YOA].CURRENTMEMBER.MemberValue > 2023),
                                        [Time Series].[Time Series].MEMBERS  
										, MeasureGroupMeasures('Amounts')
                                        , [Entity].[Entity].[BERE]
                                        , [Entity].[Entity Code].&[BERE]										
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS                                       
                                        ,{[Account].[Account].&[16102],[Account].[Account].&[73100]}

										);

                                        ([Account].[Account].&[16102],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[3I]) = 
                                       -1 * (
                                                ([Account].[Account].&[11102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[2B])
                                         * (1 -
                                                (DIVIDE((([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) - ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US]))
                                                 +([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +(([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) - ([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US]))
                                                 +([Account].[Account].&[15250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +(([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) - ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US]))
                                                 +([Account].[Account].&[30125],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +([Account].[Account].&[30510],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                                 +(([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) - ([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US]))
                                                 +([Account].[Account].&[35650],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                          ,
                                         ((([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) - ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US]))
                                         +([Account].[Account].&[10265],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])
                                         +(([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) - ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[US]))
                                         +([Account].[Account].&[30125],[Process].[Process Code].[ALL],[Data Stage].[Data Stage].&[4])),0
                                           ))) );


                                        ([Account].[Account].&[73100],[Process].[Process Code].[3I]) = -1 * ([Account].[Account].&[16102],[Process].[Process Code].[3I]) ;

                                        Format_String( MeasureGroupMeasures('Amounts')	 ) = "#,##0.00 ;(#,##0.00)";     
                                        
                                        END SCOPE;

										/////////////////////////////////////////////////////////////////////
										/////////// Open Years Signings
										/////////////////////////////////////////////////////////////////////

										// Create Set for Open Year Signings
										CREATE HIDDEN SET [BICITrifocus] AS
										FILTER ([Tri Focus].[Tri Focus].[Tri Focus].MEMBERS,LEFT([Tri Focus].[Tri Focus].Properties("Tri Focus Name"),4) = "BICI");

										CREATE HIDDEN SET [NonBICITrifocus] AS
										FILTER ([Tri Focus].[Tri Focus].[Tri Focus].MEMBERS,LEFT([Tri Focus].[Tri Focus].Properties("Tri Focus Name"),4) <> "BICI");


										// ULR Calculations - Wizi
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[1152105],[Account].[Account].&[1152106],[Account].[Account].&[1152107],[Account].[Account].&[1152108]
										,[Account].[Account].&[1152111],[Account].[Account].&[1152112],[Account].[Account].&[1152113],[Account].[Account].&[1152114]}
										, [Source System].[Source System].[Wizi]
										);
										// Gross ULR
										([Account].[Account].&[1152105]) = ([Account].[Account].&[1121008],[Entity].[Entity].[All]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD
										);
										// Net ULR Excluding BH
										([Account].[Account].&[1152106]) = DIVIDE(      ROUND(  ([Account].[Account].&[1123001],[Entity].[Entity].[All]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD
										)
										-
										([Account].[Account].&[1123001],[Entity].[Entity].[All],[Special].[Special Group Name].&[BERKSHIRE HATHAWAY]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										-
										([Account].[Account].&[1123001],[Entity].[Entity].[6107]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD
										)
										-
										([Account].[Account].&[1123001],[Entity].[Entity].[All],[Special].[Special Name].&[SIDECAR SURPLUS]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										-
										([Account].[Account].&[1123001],[Entity].[Entity].[All],[Special].[Special Name].&[SIDECAR GEN XL]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										-
										([Account].[Account].&[1123001],[Entity].[Entity].[All],[Special].[Special Name].&[SIDECAR XL]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										+
										([Account].[Account].&[1123001],[Entity].[Entity].[6107],[Special].[Special Name].&[SIDECAR XL]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										,2)
										,
										ROUND(  ([Account].[Account].&[1113001],[Entity].[Entity].[All]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD
										)
										-
										([Account].[Account].&[1113001],[Entity].[Entity].[All], [Special].[Special Group Name].&[BERKSHIRE HATHAWAY]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										-
										([Account].[Account].&[1113001],[Entity].[Entity].[6107]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD
										)
										-
										([Account].[Account].&[1113001],[Entity].[Entity].[All],[Special].[Special Name].&[SIDECAR SURPLUS]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										-
										([Account].[Account].&[1113001],[Entity].[Entity].[All],[Special].[Special Name].&[SIDECAR GEN XL]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										-
										([Account].[Account].&[1113001],[Entity].[Entity].[All],[Special].[Special Name].&[SIDECAR XL]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										+
										([Account].[Account].&[1113001],[Entity].[Entity].[6107],[Special].[Special Name].&[SIDECAR XL]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										,2)
										) * -1;

										// Sidecar ULR Core - UPDATED TO USE GROSS ULR
										([Account].[Account].&[1152107]) = ([Account].[Account].&[1121008],[Entity].[Entity].[All]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD
										);
										// Sidecar RI ULR (6107)
										([Account].[Account].&[1152108]) =   DIVIDE(      ROUND(([Account].[Account].&[1123001],[Entity].[Entity].[All],[Special].[Special Group Name].&[SIDECAR]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										+
										([Account].[Account].&[1123001],[Entity].[Entity].[6107],[Special].[Special Group Name].&[MUNICH QQS]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										,2)
										,
										ROUND(  ([Account].[Account].&[1113001],[Entity].[Entity].[All],[Special].[Special Group Name].&[SIDECAR]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										+
										([Account].[Account].&[1113001],[Entity].[Entity].[6107],[Special].[Special Group Name].&[MUNICH QQS]
										,   ANCESTOR    (
										[Accounting Period].[Y - H - Q - M].CURRENTMEMBER
										,[Accounting Period].[Y - H - Q - M].[Accounting Qtr]
										).PREVMEMBER.LASTCHILD

										)
										,2)
										) * -1;

										SCOPE(  {[Cur Transaction Currency].[Tran Curr].&[GBP],[Cur Transaction Currency].[Tran Curr].&[USD],[Cur Transaction Currency].[Tran Curr].&[CAD],[Cur Transaction Currency].[Tran Curr].&[EUR]});
										// CNV ULRs
										([Account].[Account].&[1152111]) = (  [Account].[Account].&[1152105],[Cur FX Rate].[FX Rate Name].[Spot],[Cur Rate Scenario].[Rate Scenario].[Agresso],[Measures].[Converted Amount]
										,[Cur Bridge Currency].[Bridge Currency].[GBP],[Cur Reporting Currency].[Rep Curr].&[GBP],[Cur Transaction Currency].[Tran Curr].[All]);
										([Account].[Account].&[1152112]) = (  [Account].[Account].&[1152106],[Cur FX Rate].[FX Rate Name].[Spot],[Cur Rate Scenario].[Rate Scenario].[Agresso],[Measures].[Converted Amount]
										,[Cur Bridge Currency].[Bridge Currency].[GBP],[Cur Reporting Currency].[Rep Curr].&[GBP],[Cur Transaction Currency].[Tran Curr].[All]);
										([Account].[Account].&[1152113]) = (  [Account].[Account].&[1152107],[Cur FX Rate].[FX Rate Name].[Spot],[Cur Rate Scenario].[Rate Scenario].[Agresso],[Measures].[Converted Amount]
										,[Cur Bridge Currency].[Bridge Currency].[GBP],[Cur Reporting Currency].[Rep Curr].&[GBP],[Cur Transaction Currency].[Tran Curr].[All]);
										([Account].[Account].&[1152114]) = (  [Account].[Account].&[1152108],[Cur FX Rate].[FX Rate Name].[Spot],[Cur Rate Scenario].[Rate Scenario].[Agresso],[Measures].[Converted Amount]
										,[Cur Bridge Currency].[Bridge Currency].[GBP],[Cur Reporting Currency].[Rep Curr].&[GBP],[Cur Transaction Currency].[Tran Curr].[All]);
										END SCOPE;

										Format_String (THIS) = "Percent";
										END SCOPE;

										// ULR Calculations - Manual Import
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[1152101],[Account].[Account].&[1152105],[Account].[Account].&[1152106],[Account].[Account].&[1152107],[Account].[Account].&[1152108]
										,[Account].[Account].&[1152111],[Account].[Account].&[1152112],[Account].[Account].&[1152113],[Account].[Account].&[1152114]}
										, [Source System].[Source System].[Manual Import]
										);
										THIS = [Time Series].[Time Series].[Current Period];
										([Account].[Account].&[1152101]) = ([Account].[Account].&[1152101],[Time Series].[Time Series].[Current Period])/100;

										Format_String (THIS) = "Percent";
										END SCOPE;

										// Bad Debt Calculations - Manual Import
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[1152102],[Account].[Account].&[1152103],[Account].[Account].&[1152104],[Account].[Account].&[1152109],[Account].[Account].&[1152115]}
										, [Source System].[Source System].[Manual Import]
										);
										THIS = [Time Series].[Time Series].[Current Period];
										END SCOPE;


										// CCY ULR Calculations - To be Applied SYND
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[1152106],[Account].[Account].&[1152107],[Account].[Account].&[1152108],[Account].[Account].&[1152105]}
										, [Source System].[Source System].[All]
										, {[Process].[Process Code].[6E],[Process].[Process Code].[6F],[Process].[Process Code].[6G],[Process].[Process Code].[6H],[Process].[Process Code].[6J]}
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);
										THIS = ([Source System].[Source System].[Manual Import],[Account].[Account].&[1152109],[Process].[Process Code].[All])*([Source System].[Source System].[Manual Import],[Process].[Process Code].[All])
										+ ( ([Source System].[Source System].[Wizi],[Process].[Process Code].[All],[Entity].[Entity].[All])
										*(  ([Source System].[Source System].[Manual Import],[Account].[Account].&[1152109],[Process].[Process Code].[All])-1) * -1
										);
										Format_String (THIS) = "Percent";
										END SCOPE;


										// CNV ULR Calculations - To be Applied SYND
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[1152111],[Account].[Account].&[1152112],[Account].[Account].&[1152113],[Account].[Account].&[1152114]}
										, [Source System].[Source System].[All]
										, {[Process].[Process Code].[6E],[Process].[Process Code].[6F],[Process].[Process Code].[6G],[Process].[Process Code].[6H],[Process].[Process Code].[6J]}
										, [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN
										);
										THIS = ([Source System].[Source System].[Manual Import],[Account].[Account].&[1152115],[Process].[Process Code].[All])*([Source System].[Source System].[Manual Import],[Process].[Process Code].[All])
										+ ( ([Source System].[Source System].[Wizi],[Process].[Process Code].[All])
										*(  ([Source System].[Source System].[Manual Import],[Account].[Account].&[1152115],[Process].[Process Code].[All])-1) * -1
										);
										Format_String (THIS) = "Percent";
										END SCOPE;

										// CCY ULR Calculations - To be Applied EIC
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[1152106],[Account].[Account].&[1152107],[Account].[Account].&[1152108],[Account].[Account].&[1152105]}
										, [Source System].[Source System].[All]
										, {[Process].[Process Code].[6E],[Process].[Process Code].[6F]}
										, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										);
										THIS = ([Source System].[Source System].[Manual Import],[Account].[Account].&[1152109],[Process].[Process Code].[All])*([Source System].[Source System].[Manual Import],[Process].[Process Code].[All]);
										Format_String (THIS) = "Percent";
										END SCOPE;


										// CNV ULR Calculations - To be Applied EIC
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1]
										, {[Account].[Account].&[1152111],[Account].[Account].&[1152112],[Account].[Account].&[1152113],[Account].[Account].&[1152114]}
										, [Source System].[Source System].[All]
										, {[Process].[Process Code].[6E],[Process].[Process Code].[6F]}
										, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN
										);
										THIS = ([Source System].[Source System].[Manual Import],[Account].[Account].&[1152115],[Process].[Process Code].[All])*([Source System].[Source System].[Manual Import],[Process].[Process Code].[All]);
										Format_String (THIS) = "Percent";
										END SCOPE;


										SCOPE([Calculation Mode].[Calculation Mode].&[Full]);


										// Data Stage 1 for Open Year IBNR Postings
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[1],[Measures].[Cur Amount]
										, { [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN }
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, {[Process].[Process Code].[6E],[Process].[Process Code].[6F],[Process].[Process Code].[6G],[Process].[Process Code].[6H],[Process].[Process Code].[6J]}
										);

										SCOPE([Process].[Process Code].[6E],{ [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN },Except([Entity].[Entity].[All].Children, {[Entity].[Entity].[BERE],[Entity].[Entity].[BIUSPE]}));
										// Gross IBNR Earned Premium
										([Account].[Account].&[1152116],[Process].[Process Code].[6E]) =
										(     ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										//+ ([Account].[Account].&[35600],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);
										([Account].[Account].&[1152117]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152105])*-1
										-(  (   ([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);
										([Account].[Account].&[1152118]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152111])*-1
										-(  (   ([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);

										END SCOPE;

                                         //FIN-10007 Added BIUSPE and BERE entity to the list,Modified by-Sruthi Pitchikala,Modified Dt:13-09-2023
										SCOPE([Process].[Process Code].[6E],{[Entity].[Entity].[BIUSPE],[Entity].[Entity].[BERE]});
										// Gross IBNR Earned Premium
										([Account].[Account].&[1152116]) =
										(     ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[15250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30125],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[35650],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										//+ ([Account].[Account].&[35600],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										);

										([Account].[Account].&[1152118]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152111])*-1
										-( ([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[20310],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22710],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]))
                                        + ([Account].[Account].&[22600],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) ;

										END SCOPE;
										// RI IBNR
										SCOPE ({[Entity].[Entity].[2623],[Entity].[Entity].[623],[Entity].[Entity].[3622],[Entity].[Entity].[3623],[Entity].[Entity].[5623]
										,[Entity].[Entity].[BIFR],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISP],[Entity].[Entity].[BIUK]},[Process].[Process Code].[6F]);
										([Account].[Account].&[1152116]) =
										(     ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										//+ ([Account].[Account].&[35600],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);


										([Account].[Account].&[1152117]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152106])*-1
										-(  (
										([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);
										([Account].[Account].&[1152118]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152112])*-1
										-(  (
										([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);

										END SCOPE;

                                         //FIN-10007 Added BIUSPE and BERE entity to the list,Modified by-Sruthi Pitchikala,Modified Dt:13-09-2023
										SCOPE ({[Entity].[Entity].[BERE],[Entity].[Entity].[BIUSPE]},[Process].[Process Code].[6F]);
										([Account].[Account].&[1152116]) =
										(     ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										//+ ([Account].[Account].&[35600],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10265],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[15250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30125],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[35650],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11110],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16110],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]));

									
										([Account].[Account].&[1152118]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152112])*-1
										-( 
										  ([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[20310],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22710],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										+([Account].[Account].&[22600],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
                                        +([Account].[Account].&[23450],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]);


										END SCOPE;

										// Sidecar IBNR
										SCOPE ({[Entity].[Entity].[2623],[Entity].[Entity].[623]},[Process].[Process Code].[6G]);
										([Account].[Account].&[1152116]) =
										(     ([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);
										([Account].[Account].&[1152117]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152107])*-1
										-(  (
										([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);
										([Account].[Account].&[1152118]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152113])*-1
										-(  (
										([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);


										END SCOPE;

                                        // Sidecar IBNR for [6J] Modifid by shashidhar kandula
										SCOPE (FILTER ([YOA].[YOA].[YOA].Members,[YOA].[YOA].CURRENTMEMBER.MemberValue > 2023),[Entity].[Entity].[3623],[Process].[Process Code].[6J]);
										([Account].[Account].&[1152116]) =
										(     ([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);
										([Account].[Account].&[1152117]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152107])*-1
										-(  (
										([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);
										([Account].[Account].&[1152118]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152113])*-1
										-(  (
										([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);


										END SCOPE;

										// RI Sidecar IBNR
										SCOPE([Process].[Process Code].[6H],[Entity].[Entity].[6107]);
										([Account].[Account].&[1152116]) =
										// LTD Premium
										(     ([Account].[Account].&[10100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30500],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10355],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[10200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[30200],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[15100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[35100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										//+ ([Account].[Account].&[35600],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[16103],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[11250],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);


										([Account].[Account].&[1152117]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152108])*-1
										-(  (
										([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);
										([Account].[Account].&[1152118]) = ([Account].[Account].&[1152116]) * ([Account].[Account].&[1152114])*-1
										-(  (
										([Account].[Account].&[20100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[22100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[21102],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										+ ([Account].[Account].&[23101],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All])
										)
										/
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										);

										END SCOPE;

										SCOPE ({[Process].[Process Code].[6E],[Process].[Process Code].[6F],[Process].[Process Code].[6H]});
										([Account].[Account].&[1152119]) = IIF([Account].[Account].&[1152117] < 0,[Account].[Account].&[1152117],NULL);

										([Account].[Account].&[1152120]) = IIF(   ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All])
										> ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All])
										,   IIF (   (([Account].[Account].&[1152119],[Cur Transaction Currency].[Tran Curr].[All]) * -1)
										< ( ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All]) - ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All]) )
										, ([Account].[Account].&[1152119]) * -1
										, DIVIDE(   ( ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All]) - ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All]) )
										* ([Account].[Account].&[1152119])
										, ([Account].[Account].&[1152119],[Cur Transaction Currency].[Tran Curr].[All])
										)
										)
										, NULL
										);
										END SCOPE;


										SCOPE ({[Process].[Process Code].[6G]});
										([Account].[Account].&[1152119]) = IIF([Account].[Account].&[1152117] > 0,[Account].[Account].&[1152117],NULL);

										([Account].[Account].&[1152120]) = IIF(   ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All])
										< ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All])
										,   IIF (   (([Account].[Account].&[1152119],[Cur Transaction Currency].[Tran Curr].[All]) * -1)
										> ( ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All]) - ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All]) )
										, ([Account].[Account].&[1152119]) * -1
										, DIVIDE(   ( ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All]) - ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All]) )
										* ([Account].[Account].&[1152119])
										, ([Account].[Account].&[1152119],[Cur Transaction Currency].[Tran Curr].[All])
										)
										)
										, NULL
										);
										END SCOPE;

                                        SCOPE (FILTER ([YOA].[YOA].[YOA].Members,[YOA].[YOA].CURRENTMEMBER.MemberValue > 2023),{[Process].[Process Code].[6J]});
										([Account].[Account].&[1152119]) = IIF([Account].[Account].&[1152117] > 0,[Account].[Account].&[1152117],NULL);

										([Account].[Account].&[1152120]) = IIF(   ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All])
										< ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All])
										,   IIF (   (([Account].[Account].&[1152119],[Cur Transaction Currency].[Tran Curr].[All]) * -1)
										> ( ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All]) - ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All]) )
										, ([Account].[Account].&[1152119]) * -1
										, DIVIDE(   ( ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All]) - ([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All]) )
										* ([Account].[Account].&[1152119])
										, ([Account].[Account].&[1152119],[Cur Transaction Currency].[Tran Curr].[All])
										)
										)
										, NULL
										);
										END SCOPE;

										([Account].[Account].&[1152121]) =  DIVIDE(     (   ([Account].[Account].&[1152118],[Cur Transaction Currency].[Tran Curr].[All])
										-([Account].[Account].&[1152117],[Cur Transaction Currency].[Tran Curr].[All])
										-([Account].[Account].&[1152120],[Cur Transaction Currency].[Tran Curr].[All])
										) * ([Account].[Account].&[1152116])
										, ([Account].[Account].&[1152116],[Cur Transaction Currency].[Tran Curr].[All])
										);


										END SCOPE;

										// Data Stage 2 for Open Year IBNR Postings
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										, { [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN }
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, {[Process].[Process Code].[6E],[Process].[Process Code].[6F],[Process].[Process Code].[6G],[Process].[Process Code].[6H],[Process].[Process Code].[6J]}
										);

										// Agresso as Source for IBNR calcualtion
										SCOPE( [Premium Source System].[Premium Source System].[Agresso]);
										// Gross IBNR
										SCOPE([Process].[Process Code].[6E],{ [Entity].[Platform Entity].[Platform].&[SYND].CHILDREN, [Entity].[Platform Entity].[Platform].&[BID].CHILDREN }
                                        , Except([Entity].[Entity].[All].Children, {[Entity].[Entity].[BERE],[Entity].[Entity].[BIUSPE]}));
										[Account].[Account].&[22200]  = ( ([Account].[Account].&[1152117],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152120],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152121],[Data Stage].[Data Stage].&[1])
										) *
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										[Account].[Account].&[80300] = ([Account].[Account].&[22200]) * -1;
										END SCOPE;

                                        //FIN-10007 Added BIUSPE entity to the list,Modified by-Sruthi Pitchikala,Modified Dt:13-09-2023
										SCOPE(([Process].[Process Code].[6E]),{[Entity].[Entity].[BERE],[Entity].[Entity].[BIUSPE]});
										[Account].[Account].&[22200]  = ( ([Account].[Account].&[1152118],[Data Stage].[Data Stage].&[1]));

										[Account].[Account].&[80300] = ([Account].[Account].&[22200]) * -1;
										END SCOPE;

										// RI IBNR
										SCOPE ({[Entity].[Entity].[2623],[Entity].[Entity].[623],[Entity].[Entity].[3622],[Entity].[Entity].[3623],[Entity].[Entity].[5623]
										,[Entity].[Entity].[BIFR],[Entity].[Entity].[BIGE],[Entity].[Entity].[BISP],[Entity].[Entity].[BIUK]},[Process].[Process Code].[6F]);
										([Account].[Account].&[23400]) =    ( ([Account].[Account].&[1152117],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152120],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152121],[Data Stage].[Data Stage].&[1])
										) *
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										// Less Gross
										- ([Account].[Account].&[22200],[Process].[Process Code].[6E]);

										([Account].[Account].&[73300]) = ([Account].[Account].&[23400]) * -1;
										END SCOPE;

                                       //FIN-10007 Added BIUSPE entity to the list,Modified by-Sruthi Pitchikala,Modified Dt:13-09-2023
										SCOPE ({[Entity].[Entity].[BERE],[Entity].[Entity].[BIUSPE]},[Process].[Process Code].[6F]);
										([Account].[Account].&[23400]) =    ( ([Account].[Account].&[1152118],[Data Stage].[Data Stage].&[1]))
										// Less Gross
										- ([Account].[Account].&[22200],[Process].[Process Code].[6E]);

										([Account].[Account].&[73300]) = ([Account].[Account].&[23400]) * -1;
										END SCOPE;

										// Sidecar IBNR
										SCOPE ({[Entity].[Entity].[2623],[Entity].[Entity].[623]},[Process].[Process Code].[6G]);
										([Account].[Account].&[23401]) = ( ([Account].[Account].&[1152117],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152120],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152121],[Data Stage].[Data Stage].&[1])
										) *
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);
										([Account].[Account].&[23400]) = ([Account].[Account].&[23401]) * -1;
										END SCOPE;

                                        // Sidecar IBNR for [6J] Modified by Shashidhar kandula
										SCOPE (FILTER ([YOA].[YOA].[YOA].Members,[YOA].[YOA].CURRENTMEMBER.MemberValue > 2023),[Entity].[Entity].[3623],[Process].[Process Code].[6J]);
										([Account].[Account].&[23401]) = ( ([Account].[Account].&[1152117],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152120],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152121],[Data Stage].[Data Stage].&[1])
										) *
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);
										([Account].[Account].&[23400]) = ([Account].[Account].&[23401]) * -1;
										END SCOPE;

										
										// RI Sidecar IBNR
										SCOPE([Entity].[Entity].[6107],[Process].[Process Code].[6H]);
										[Account].[Account].&[23400] = ( ([Account].[Account].&[1152117],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152120],[Data Stage].[Data Stage].&[1]) + ([Account].[Account].&[1152121],[Data Stage].[Data Stage].&[1])
										) *
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur FX Rate].[FX Rate Name].[SPOT]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										// Less Gross
										- ([Account].[Account].&[22200],[Process].[Process Code].[6E]);
										([Account].[Account].&[73300],[Process].[Process Code].[6H]) = ([Account].[Account].&[23400]) * -1;
										END SCOPE;
										END SCOPE;
										END SCOPE;





										// Data Stage 2 for Open Year CHR Postings
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										, [CoreEntities]
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, [Process].[Process Code].[7A]

										);
										SCOPE([BICITrifocus]);
										([Account].[Account].&[22111],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[USD])
										= (([Account].[Account].&[22200],[Process].[Process Code].[6E]
										,[Cur Transaction Currency].[Tran Curr].[All]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso]
										, [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD]
										, [Cur Reporting Currency].[Rep Curr].&[USD]
										, [Measures].[Converted Amount])
										+
										([Account].[Account].&[22100],[Process].[Process Code].[6A]
										,[Cur Transaction Currency].[Tran Curr].[All]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso]
										, [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD]
										, [Cur Reporting Currency].[Rep Curr].&[USD]
										, [Measures].[Converted Amount])
										)
										// CHP %
										* ([Account].[Account].&[1152101],[Data Stage].[Data Stage].&[1]
										,[Cur Transaction Currency].[Tran Curr].[Unknown],[Process].[Process Code].[All],[Entity].[Entity].[All]);
										([Account].[Account].&[80355],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[USD]) = ([Account].[Account].&[22111]) * -1;
										END SCOPE;

										SCOPE([NonBICITrifocus]);
										([Account].[Account].&[22110],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP])
										= (([Account].[Account].&[22200],[Process].[Process Code].[6E]
										,[Cur Transaction Currency].[Tran Curr].[All]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso]
										, [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[GBP]
										, [Cur Reporting Currency].[Rep Curr].&[GBP]
										, [Measures].[Converted Amount])
										+ ([Account].[Account].&[22100],[Process].[Process Code].[6A]
										,[Cur Transaction Currency].[Tran Curr].[All]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso]
										, [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[GBP]
										, [Cur Reporting Currency].[Rep Curr].&[GBP]
										, [Measures].[Converted Amount])
										)
										// CHP %
										* ([Account].[Account].&[1152101],[Data Stage].[Data Stage].&[1]
										,[Cur Transaction Currency].[Tran Curr].[Unknown],[Process].[Process Code].[All],[Entity].[Entity].[All]);
										([Account].[Account].&[80350],[Cur Transaction Currency].[Tran Curr].[Tran Curr].[GBP]) = ([Account].[Account].&[22110]) * -1;
										END SCOPE;

										END SCOPE;


										// Data Stage 2 for Open Year Bad debt Paid
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										, [SyndicateEntities]
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, [Process].[Process Code].[8A]
										);
										([Account].[Account].&[74170])
										= -1 * (  [Account].[Account].&[1152103],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[1]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All])
										//BD Allocation % CHP %
										* ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) // Modified for FDM-206
										/ ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All]);

										([Account].[Account].&[21200]) = ([Account].[Account].&[74170]) * -1;


										END SCOPE;


										// Data Stage 2 for Open Year Bad debt Outstanding
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										, [SyndicateEntities]
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, [Process].[Process Code].[8B]
										);
										([Account].[Account].&[73400])
										= -1 *  (  [Account].[Account].&[1152102],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[1]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All])
										//BD Allocation % CHP %
										* ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]) // Modified for FDM-206
										/ ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All]);

										([Account].[Account].&[23300]) = ([Account].[Account].&[73400]) * -1;



										END SCOPE;


										// Data Stage 2 for Open Year Bad debt IBNR
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]
										, [SyndicateEntities]
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, [Process].[Process Code].[8C]
										);
										([Account].[Account].&[73401])
										=
										-1 *
										(  [Account].[Account].&[1152104],[Process].[Process Code].[All],[Data Stage].[Data Stage].&[1],[Cur Transaction Currency].[Tran Curr].[USD]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All])
										//BD Allocation %
										*
										DIVIDE(   (   ([Account].[Account].&[23400],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[6F]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso], [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD], [Cur Reporting Currency].[Rep Curr].&[USD]
										, [Measures].[Converted Amount])
										+
										([Account].[Account].&[23400],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[6H]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso], [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD], [Cur Reporting Currency].[Rep Curr].&[USD]
										, [Measures].[Converted Amount])
										+
										([Account].[Account].&[23450],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso], [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD], [Cur Reporting Currency].[Rep Curr].&[USD]
										, [Measures].[Converted Amount])
										)
										,   (   ([Account].[Account].&[23400],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[6F]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso], [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD], [Cur Reporting Currency].[Rep Curr].&[USD]
										,[Cur Transaction Currency].[Tran Curr].[All], [Measures].[Converted Amount])
										+
										([Account].[Account].&[23400],[Data Stage].[Data Stage].&[2],[Process].[Process Code].[6H]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso], [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD], [Cur Reporting Currency].[Rep Curr].&[USD]
										,[Cur Transaction Currency].[Tran Curr].[All], [Measures].[Converted Amount])
										+
										([Account].[Account].&[23450],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso], [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD], [Cur Reporting Currency].[Rep Curr].&[USD]
										,[Cur Transaction Currency].[Tran Curr].[All], [Measures].[Converted Amount])
										)
										)
										*
										// RI Earning Percentage from Agresso
										([Data Stage].[Data Stage].&[4],[Account].[Account].&[1161015],[Process].[Process Code].[UM]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso], [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Bridge Currency].[Bridge Currency].[USD], [Cur Reporting Currency].[Rep Curr].&[USD]
										,[Cur Transaction Currency].[Tran Curr].[All], [Measures].[Converted Amount])

										//                    //Convert back to original currency
										*
										(   [Measures].[FX Rate Numerator]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										, [Cur Bridge Currency].[Bridge Currency].[USD]
										, [Cur Reporting Currency].[Rep Curr].&[USD]
										, [Cur FX Rate].[FX Rate Name].[Spot]
										, [Cur Rate Scenario].[Rate Scenario].[Agresso]
										)
										;

										([Account].[Account].&[23600]) = ([Account].[Account].&[73401]) * -1;


										END SCOPE;
										// C Mode Full
										END SCOPE;

                                        /////////////////////////////////////////////////////////////////////
										/////////// FDM-475 BIDAC Bad Debts new process
										/////////////////////////////////////////////////////////////////////
                                
                                         // Data Stage 2 for Open Year Bad debt Paid (BIDAC Entities)
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]										
                                        , [BIDACBadDebtsBidEntities]                                                                           
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, [Process].[Process Code].[8A]
										);
                                    
                                        ([Account].[Account].&[74170])
										= -1 * (  [Account].[Account].&[1152103],[Process].[Process Code].[All],[Entity].[Entity].[8033],[Data Stage].[Data Stage].&[1]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All])
									    //BD Allocation % CHP %
										*
                                        DIVIDE(
                                        ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
                                            ,[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All])                                        
										,Aggregate( ([Account].[Account].&[21100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
                                            ,[Tri Focus].[Tri Focus].[All],{[BIDACBadDebtsBidEntities]  }))
                                        ,
				                        0
		                                )
				                        ;

										([Account].[Account].&[21200]) = ([Account].[Account].&[74170]) * -1;


										END SCOPE;
                                                                
                                        // Data Stage 2 for Open Year Bad debt Outstanding (BID Entities)
										SCOPE   (     [Time Series].[Time Series].[LTD]
										, [Data Stage].[Data Stage].&[2],[Measures].[Cur Amount]										
                                        , [BIDACBadDebtsBidEntities]                                                                           
										, [YOA].[YOA].[YOA].MEMBERS
										, [Tri Focus].[Tri Focus].[Tri Focus].MEMBERS
										, [Cur Transaction Currency].[Tran Curr].[Tran Curr].MEMBERS
										, [Process].[Process Code].[8B]
										);
										([Account].[Account].&[73400])
                                        = -1 * (  [Account].[Account].&[1152102],[Process].[Process Code].[All],[Entity].[Entity].[8033],[Data Stage].[Data Stage].&[1]
										,[Tri Focus].[Tri Focus].[All],[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All])
									    //BD Allocation % CHP %
										*                                        
                                        DIVIDE (([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
                                           ,[Special].[Special Code].[All],[Class of Business].[Class of Business Code].[All])
                                        ,
                                        Aggregate( ([Account].[Account].&[23100],[Data Stage].[Data Stage].&[4],[Process].[Process Code].[All]
                                            ,[Tri Focus].[Tri Focus].[All],{[BIDACBadDebtsBidEntities]  }))
                                        ,0
                                        )
										;  
              										
										([Account].[Account].&[23300]) = ([Account].[Account].&[73400]) * -1;



										END SCOPE;

										/////////////////////////////////////////////////////////////////////
										/////////// Investment Reporting Data Stage 2
										/////////////////////////////////////////////////////////////////////
										SCOPE ( {[Process].[Process Code].[IV],[Process].[Process Code].[IW],[Process].[Process Code].[IX],[Process].[Process Code].[IY]}
										, [Time Series].[Time Series].[YTD]
										, {[Data Stage].[Data Stage].&[1]}
										);

										THIS = [Time Series].[Time Series].[Current Period];


										END SCOPE;

										/////////////////////////////////////////////////////////////////////
										/////////// Investment Reporting Data Stage 2
										/////////////////////////////////////////////////////////////////////
										SCOPE ( {[Process].[Process Code].[IV],[Process].[Process Code].[IW],[Process].[Process Code].[IX],[Process].[Process Code].[IY]}
										, [Time Series].[Time Series].[YTD]
										, {[Data Stage].[Data Stage].&[2]}
										);

										({[Process].[Process Code].[IV],[Process].[Process Code].[IW]})
										=DIVIDE( ([Data Stage].[Data Stage].&[1],[Account].[Account].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All]),([Data Stage].[Data Stage].&[1],[Account].[Account].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All]))
										* ( ([Data Stage].[Data Stage].&[1])
										-(	ANCESTOR([Accounting Period].[Y - H - Q - M].CURRENTMEMBER,[Accounting Period].[Y - H - Q - M].[Accounting Year]).PREVMEMBER.LASTCHILD.LASTCHILD.LASTCHILD.PREVMEMBER
										,[Data Stage].[Data Stage].&[4],[Time Series].[Time Series].[Current Period],[Process].[Process Code].[IW])
										);


										({[Process].[Process Code].[IX],[Process].[Process Code].[IY]})
										=DIVIDE( ([Data Stage].[Data Stage].&[1],[Account].[Account].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All]),([Data Stage].[Data Stage].&[1],[Account].[Account].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All]))
										* ( ([Data Stage].[Data Stage].&[1])
										-(	ANCESTOR([Accounting Period].[Y - H - Q - M].CURRENTMEMBER,[Accounting Period].[Y - H - Q - M].[Accounting Year]).PREVMEMBER.LASTCHILD.LASTCHILD.LASTCHILD.PREVMEMBER
										,[Data Stage].[Data Stage].&[4],[Time Series].[Time Series].[Current Period],[Process].[Process Code].[IY])
										);


										END SCOPE;



										/////////////////////////////////////////////////////////////////////
										/////////// True Up
										/////////////////////////////////////////////////////////////////////

										// Create RITC Process Set
										CREATE HIDDEN SET [RITCProcess] AS
										{
										[Process].[Process Code].[9A]
										, [Process].[Process Code].[4B]
										, [Process].[Process Code].[9B]
										, [Process].[Process Code].[4E]
										, [Process].[Process Code].[4L]
										, [Process].[Process Code].[9E]
										, [Process].[Process Code].[9I]
										, [Process].[Process Code].[4O]
										, [Process].[Process Code].[9F]
										, [Process].[Process Code].[9J]
										, [Process].[Process Code].[7B]
										, [Process].[Process Code].[8D]
										, [Process].[Process Code].[8E]
										, [Process].[Process Code].[8F]
										, [Process].[Process Code].[9C]
										, [Process].[Process Code].[4S]
										, [Process].[Process Code].[9G]
										, [Process].[Process Code].[9K]
										, [Process].[Process Code].[4I]
										, [Process].[Process Code].[9D]
										, [Process].[Process Code].[4T]
										, [Process].[Process Code].[9H]
										, [Process].[Process Code].[9L]
										};


										// Create OY Process Set
										CREATE HIDDEN SET [OYSigningsProcess] AS
										{
										[Process].[Process Code].[4A]
										, [Process].[Process Code].[4D]
										, [Process].[Process Code].[4G]
										, [Process].[Process Code].[4h]
										, [Process].[Process Code].[4K]
										, [Process].[Process Code].[4N]
										, [Process].[Process Code].[4Q]
										, [Process].[Process Code].[4R]
										, [Process].[Process Code].[6E]
										, [Process].[Process Code].[6F]
										, [Process].[Process Code].[6G]
                                        , [Process].[Process Code].[6J]
										, [Process].[Process Code].[6H]
										, [Process].[Process Code].[7A]
										, [Process].[Process Code].[8B]
										, [Process].[Process Code].[8C]

										};

										// Create OY Process Set
										CREATE HIDDEN SET [NonOverrideTruepProcess] AS
										{
										[Process].[Process Code].[Process Code].MEMBERS
										}
										- [EarningsProcess] - [OYSigningsProcess] - { [Process].[Process Code].[FX]} - [RITCProcess]
										- {[Process].[Process Code].[M2],[Process].[Process Code].[IV],[Process].[Process Code].[IW],[Process].[Process Code].[IX],[Process].[Process Code].[IY],[Process].[Process Code].[UO]};



										SCOPE ([NonOverrideTruepProcess],[Data Stage].[Data Stage].&[3], {[Measures].[Amount], [Measures].[Cur Amount], [Measures].[Value 2], [Measures].[Value 3]});
										This =  [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4];
										Format_String(This) = '#,##0.00;(#,##0.00)';
										END SCOPE;

                                       
										/////////////////////////////////////////////////////////////////////////////
										//////// G&A Reclass Trueup
										/////////////////////////////////////////////////////////////////////////////

										SCOPE (  MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[3]
										,[Account].[Account].&[1170003]
										,[Process].[Process Code].[EC]
										,[Entity].[Entity].[USCONSUS]
										,[Tri Focus].[Tri Focus].[Tri Focus].Members
										);
										THIS = NULL;

										END SCOPE;
										SCOPE (  MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[3]
										,[Account].[Account].&[1170004]
										,[Process].[Process Code].[EC]
										,[Entity].[Entity].[USCONSUS]
										,[Tri Focus].[Tri Focus].[Tri Focus].Members

										);
										THIS = NULL;

										END SCOPE;

										SCOPE (  MEASUREGROUPMEASURES( 'Amounts' )
										,[Data Stage].[Data Stage].&[3]
										,[Account].[Account].&[1170005]
										,[Process].[Process Code].[EC]
										,[Entity].[Entity].[USCONSUS]
										,[Tri Focus].[Tri Focus].[Tri Focus].Members

										);
										THIS = NULL;

										END SCOPE;
										/////////////////////////////////////////////////////////////////////////////
										//////// Investment Reporting Trueup
										/////////////////////////////////////////////////////////////////////////////

										SCOPE ({[Process].[Process Code].[IV],[Process].[Process Code].[IW],[Process].[Process Code].[IX],[Process].[Process Code].[IY]}
										,[Data Stage].[Data Stage].&[3],[Time Series].[Time Series].[YTD]);



										([Process].[Process Code].[IV]) =
										IIF(   ISEMPTY(([Process].[Process Code].[IW],[Time Series].[Time Series].[Current Period],[Data Stage].[Data Stage].&[4],[Account].[Account].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All]) )
										,    ( ([Data Stage].[Data Stage].&[2])
										- ([Process].[Process Code].[IV],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										- ([Process].[Process Code].[IW],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										)
										,NULL);


										([Process].[Process Code].[IW]) =  ( ([Data Stage].[Data Stage].&[2])
										- ([Process].[Process Code].[IV],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										- ([Process].[Process Code].[IW],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										);

										([Process].[Process Code].[IX]) =
										IIF(   ISEMPTY(([Process].[Process Code].[IY],[Time Series].[Time Series].[Current Period],[Data Stage].[Data Stage].&[4],[Account].[Account].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All]) )
										,   ( ([Data Stage].[Data Stage].&[2])
										- ([Process].[Process Code].[IX],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										- ([Process].[Process Code].[IY],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										)
										,NULL);

										([Process].[Process Code].[IY]) =   ( ([Data Stage].[Data Stage].&[2])
										- ([Process].[Process Code].[IX],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										- ([Process].[Process Code].[IY],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4])
										);


										//USBICI for Fast Close and Period End
										([Entity].[Entity].[USBICI],{[Process].[Process Code].[IV],[Process].[Process Code].[IW]}) = NULL;
										([Entity].[Entity].[GAAP],[Process].[Process Code].[IV]) = NULL;
										([Entity].[Entity].[GAAP],[Process].[Process Code].[IW]) = DIVIDE( ([Data Stage].[Data Stage].&[1],[Account].[Account Code].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All],[Target Entity].[Target Entity Code].[All]),([Data Stage].[Data Stage].&[1],[Account].[Account Code].[All],[Cur Transaction Currency].[Tran Curr].[All],[Entity].[Entity].[All],[Target Entity].[Target Entity Code].[All]))
										*
										( ([Data Stage].[Data Stage].&[2],[Entity].[Entity].[USBICI])
										- ([Process].[Process Code].[IV],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4],[Entity].[Entity].[GAAP])
										- ([Process].[Process Code].[IW],[Time Series].[Time Series].[YTD],[Data Stage].[Data Stage].&[4],[Entity].[Entity].[GAAP])
										);


										END SCOPE;

                                        

										SCOPE([Data Stage].[Data Stage].&[3],[Calculation Mode].[Calculation Mode].&[Full]);


										This =  [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4];
										/////////////////////////////////////////////////////////////////////////////
										///////// Earnings Trueup
										/////////////////////////////////////////////////////////////////////////////
										SCOPE ( [EarningsProcess] );
										([Time Series].[Time Series].[YTD]) = NULL;
										([Time Series].[Time Series].[Current Period]) = NULL;
										END SCOPE;


										/////////////////////////////////////////////////////////////////////////////
										///////// OY Signings Trueup
										/////////////////////////////////////////////////////////////////////////////
										SCOPE ( [OYSigningsProcess] );
										([Time Series].[Time Series].[YTD]) = NULL;
										([Time Series].[Time Series].[Current Period]) = NULL;
										END SCOPE;

										/////////////////////////////////////////////////////////////////////////////
										///////// 6107 ORC
										/////////////////////////////////////////////////////////////////////////////
										SCOPE ( [Process].[Process Code].[UO] );
										([Time Series].[Time Series].[YTD]) = NULL;
										([Time Series].[Time Series].[Current Period]) = NULL;
										SCOPE ( [YOA].[YOA].[YOA].MEMBERS );
										([Entity].[Entity].[2623],[Account].[Account].&[51310]) = ([Entity].[Entity].[6107],[Account].[Account].&[51310]) * ([Measures].[Syndicate Split],[Data Stage].[Data Stage].&[2]) *-1;
										([Entity].[Entity].[623],[Account].[Account].&[51310]) = ([Entity].[Entity].[6107],[Account].[Account].&[51310]) * ([Measures].[Syndicate Split],[Data Stage].[Data Stage].&[2]) *-1;
										([Entity].[Entity].[2623],[Account].[Account].&[82101]) =([Entity].[Entity].[2623],[Account].[Account].&[51310]) *-1;
										([Entity].[Entity].[623],[Account].[Account].&[82101]) = ([Entity].[Entity].[623],[Account].[Account].&[51310]) *-1;
										
                                        END SCOPE;
										END SCOPE;
                                        SCOPE ( [Process].[Process Code].[UO] );
										([Time Series].[Time Series].[YTD]) = NULL;
										([Time Series].[Time Series].[Current Period]) = NULL;
										SCOPE ( [YOA].[YOA].[YOA].MEMBERS );
										([Entity].[Entity].[2623],[Account].[Account].&[51331]) = ([Entity].[Entity].[6107],[Account].[Account].&[51331]) * ([Measures].[Syndicate Split],[Data Stage].[Data Stage].&[2]) *-1;
										([Entity].[Entity].[623],[Account].[Account].&[51331]) = ([Entity].[Entity].[6107],[Account].[Account].&[51331]) * ([Measures].[Syndicate Split],[Data Stage].[Data Stage].&[2]) *-1;
										([Entity].[Entity].[2623],[Account].[Account].&[83110]) =([Entity].[Entity].[2623],[Account].[Account].&[51331]) *-1;
										([Entity].[Entity].[623],[Account].[Account].&[83110]) = ([Entity].[Entity].[623],[Account].[Account].&[51331]) *-1;
										
                                        END SCOPE;
										END SCOPE;



                                        /////////////////////////////////////////////////////////////////////////////
										///////// 6107-3623 ORC
										/////////////////////////////////////////////////////////////////////////////

										SCOPE ( [Process].[Process Code].[U9] );
										([Time Series].[Time Series].[YTD]) = NULL;
										([Time Series].[Time Series].[Current Period]) = NULL;
										SCOPE ( [YOA].[YOA].[YOA].MEMBERS );

                                              // FIN-10055, Modified by : Sruthi Pitchikala, Modified Dt: 18-10-2023

                                        ([Entity].[Entity].[3623],[Account].[Account].&[51310]) = IIF(([YOA].[YOA].CURRENTMEMBER.MemberValue) > 2023,([Entity].[Entity].[6107],[Account].[Account].&[51310]) * -1, null );
                                        ([Entity].[Entity].[3623],[Account].[Account].&[82101]) = IIF(([YOA].[YOA].CURRENTMEMBER.MemberValue) > 2023,([Entity].[Entity].[3623],[Account].[Account].&[51310]) * -1, null );
										([Entity].[Entity].[3623],[Account].[Account].&[51331]) = IIF(([YOA].[YOA].CURRENTMEMBER.MemberValue) > 2023,([Entity].[Entity].[6107],[Account].[Account].&[51331]) * -1, null );
                                        ([Entity].[Entity].[3623],[Account].[Account].&[83110]) = IIF(([YOA].[YOA].CURRENTMEMBER.MemberValue) > 2023,([Entity].[Entity].[3623],[Account].[Account].&[51331]) * -1, null );
                                       
                                        END SCOPE;
										END SCOPE;

                                        

										//    ///////////////////////////////////////////////////////////////////////////
										//    /////// 6107 PC
										//    ///////////////////////////////////////////////////////////////////////////
										//    SCOPE ( [Process].[Process Code].[M2] );
										//            ([Time Series].[Time Series].[YTD]) = NULL;
										//            ([Time Series].[Time Series].[Current Period]) = NULL;
										//        SCOPE ( [YOA].[YOA].[YOA].MEMBERS );
										//            ([Entity].[Entity].[623],[Account].[Account].&[62100]) = NULL;
										//            ([Entity].[Entity].[2623],[Account].[Account].&[62100]) = NULL;
										//            ([Entity].[Entity].[2623],[Account].[Account].&[11160]) = ([Entity].[Entity].[6107],[Account].[Account].&[74501])
										//                                                                       ;-- +([Entity].[Entity].[2623],[Account].[Account].&[11160],[Data Stage].[Data Stage].&[4])
										//                                                                        --+([Entity].[Entity].[2623],[Account].[Account].&[62100],[Data Stage].[Data Stage].&[4]);
										//            ([Entity].[Entity].[623],[Account].[Account].&[11160]) = ([Entity].[Entity].[6107],[Account].[Account].&[74502])
										//                                                                        ;--+([Entity].[Entity].[623],[Account].[Account].&[11160],[Data Stage].[Data Stage].&[4])
										//                                                                        --+([Entity].[Entity].[623],[Account].[Account].&[62100],[Data Stage].[Data Stage].&[4]);
										//            ([Entity].[Entity].[2623],[Account].[Account].&[74534]) = ([Entity].[Entity].[6107],[Account].[Account].&[74501])*-1;
										//            ([Entity].[Entity].[623],[Account].[Account].&[74534]) = ([Entity].[Entity].[6107],[Account].[Account].&[74502])*-1;
										//        END SCOPE;
										//    END SCOPE;

										/////////////////////////////////////////////////////////////////////////////
										///////// FX True Up Exceptions
										/////////////////////////////////////////////////////////////////////////////
										SCOPE ([Process].[Process Code].[FX]);
										THIS =  NULL;
										SCOPE ( [Time Series].[Time Series].[YTD]);

										THIS = ([Data Stage].[Data Stage].&[2])  - ([Data Stage].[Data Stage].&[4]);

										[Account].[Account].&[82000] = NULL;
                                        [Account].[Account].&[82008] = NULL;
										[Account].[Account].&[82002] = NULL;
										[Account].[Account].&[82365] = NULL;
										[Account].[Account].&[82367] = NULL;
										[Account].[Account].&[82368] = NULL;
										[Account].[Account].&[74100] = NULL;
										[Account].[Account].&[74105] = NULL;
										[Account].[Account].&[82001] = ([Data Stage].[Data Stage].&[2])  - ([Data Stage].[Data Stage].&[4])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[82000])
										- ([Data Stage].[Data Stage].&[4],[Account].[Account].&[82000])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[82008])
										- ([Data Stage].[Data Stage].&[4],[Account].[Account].&[82008])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[82002])
										-([Data Stage].[Data Stage].&[4],[Account].[Account].&[82002])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[82365])
										- ([Data Stage].[Data Stage].&[4],[Account].[Account].&[82365])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[82367])
										- ([Data Stage].[Data Stage].&[4],[Account].[Account].&[82367])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[82368])
										- ([Data Stage].[Data Stage].&[4],[Account].[Account].&[82368]);
										[Account].[Account].&[74106] = ([Data Stage].[Data Stage].&[2])  - ([Data Stage].[Data Stage].&[4])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[74100])
										- ([Data Stage].[Data Stage].&[4],[Account].[Account].&[74100])
										+ ([Data Stage].[Data Stage].&[2],[Account].[Account].&[74105])
										- ([Data Stage].[Data Stage].&[4],[Account].[Account].&[74105]);



										SCOPE ( {[FXNonUSDEntities]},[Measures].[Value 2]);
										([Account].[Account].&[59500]) = ([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) /([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) *
										(  ROUND(      ([Account].[Account].[All],[Measures].[Value 2],[Data Stage].[Data Stage].&[2])
										-([Account].[Account].[All],[Account].[Account Status].[Status].&[Open],[Account].[Exclude FX].[Exclude From FX Calcs].&[N],[Measures].[Value 2],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[59500],[Measures].[Value 2],[Data Stage].[Data Stage].&[4])
										,2)) * -1;
										END SCOPE;


										SCOPE ( {[FXUSDEntities]},{[Measures].[Amount],[Measures].[Value 2]});
										([Account].[Account].&[59500]) = ([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) /([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) *
										(  ROUND(      ([Account].[Account].[All],[Data Stage].[Data Stage].&[2])
										-([Account].[Account].[All],[Account].[Account Status].[Status].&[Open],[Account].[Exclude FX].[Exclude From FX Calcs].&[N],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[59500],[Data Stage].[Data Stage].&[4])
										,2)) * -1;
										END SCOPE;


										SCOPE ([Account].[Account].&[90360],{[FXNonUSDEntities]} ,[Measures].[Amount]);
										THIS =  ([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) /([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) *
										(  ROUND(      ([Account].[Account].[All],[Data Stage].[Data Stage].&[2])
										- ([Account].[Account].[All],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[90360],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[64100],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[64200],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75700],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75710],[Data Stage].[Data Stage].&[4])
										,2)) * -1;
										END SCOPE;


										SCOPE ([Account].[Account].&[90360],{[NonSynNonUSDFXEntities]} ,[Measures].[Value 3]);
										THIS =  ([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) /([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) *
										(  ROUND(      ([Account].[Account].[All],[Data Stage].[Data Stage].&[2])
										- ([Account].[Account].[All],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[90360],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[64100],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[64200],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75700],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75710],[Data Stage].[Data Stage].&[4])
										,2)) * -1;
										END SCOPE;


										// Amount 4 STGL account for USD Entities
										SCOPE([SyndicateEntities],[GBPEntityCurrencies],[Measures].[Value 3]);
										SCOPE ( {[FXUSDEntities]},([Account].[Account].&[59600]) );
										THIS =  ([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) /([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) *
										(  ROUND(      ([Account].[Account].[All],[Data Stage].[Data Stage].&[2])
										- ([Account].[Account].[All],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[59600],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75700],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75710],[Data Stage].[Data Stage].&[4])
										,2)) * -1;
										END SCOPE;

										SCOPE ( {[FXNonUSDEntities]},([Account].[Account].&[59500]) );
										THIS =  ([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) /([Measures].[hBri Account Account Tree Count],[Data Stage].[Data Stage].&[2]) *
										(  ROUND(      ([Account].[Account].[All],[Data Stage].[Data Stage].&[2])
										- ([Account].[Account].[All],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[59500],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75700],[Data Stage].[Data Stage].&[4])
										+([Account].[Account].&[75710],[Data Stage].[Data Stage].&[4])
										,2)) * -1;
										END SCOPE;

										END SCOPE;


										END SCOPE;
										SCOPE ([Tri Focus].[Status - Trifocus].[Trifocus Status].&[Close].CHILDREN);
										THIS = NULL;
										END SCOPE;

										SCOPE ([CloseAccounts]);
										THIS = NULL;
										END SCOPE;

										SCOPE ( {[FXNonUSDEntities]},[Measures].[Amount],[FXNonUSDAmtExcludedAccounts]);
										THIS = NULL;
										END SCOPE;


										SCOPE   ([Account].[Exclude FX].[Exclude From FX Calcs].&[Y].CHILDREN);
										SCOPE ( {[FXNonUSDEntities]},[Measures].[Value 2]);
										THIS = NULL;
										END SCOPE;

										SCOPE ( {[FXUSDEntities]},{[Measures].[Amount],[Measures].[Value 2]});
										THIS = NULL;
										END SCOPE;
										END SCOPE;

										SCOPE ( {[FXNonUSDEntities]},[Measures].[Value 3],[FXNonUSDQMAExcludedAccounts]);
										THIS = NULL;
										END SCOPE;


										SCOPE ( {[FXUSDEntities]},[Measures].[Value 3],[FXUSDQMAExcludedAccounts]);
										THIS = NULL;
										END SCOPE;

										// 2017 fix for AMC
										SCOPE ( {[FXUSDEntities]},[Measures].[Value 2]);
										THIS = [Measures].[Amount];
										END SCOPE;

										END SCOPE;


										// 2017 fix for AMC
										SCOPE ([Process].[Process Code].[UI],{[FXUSDEntities]},[Measures].[Value 2]);
										THIS = [Measures].[Amount];
										END SCOPE;


										/////////////////////////////////////////////////////////////////////////
										/////////////RITC True Up Exceptions
										/////////////////////////////////////////////////////////////////////////

										SCOPE([RITCProcess]);
										([Time Series].[Time Series].[LTD]) = NULL;
										([Time Series].[Time Series].[YTD]) = NULL;

										//LTD True ups using either BS or P&L Account
										SCOPE ([Time Series].[Time Series].[Current Period]);

										// Claims Handling UK
										([Account].[Account].&[80400],[Process].[Process Code].[7B])
										= ([Data Stage].[Data Stage].&[2],[Time Series].[Time Series].[LTD])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Time Series].[Time Series].[YTD]);
										([Account].[Account].&[22500],[Process].[Process Code].[7B])
										= -1 * ([Account].[Account].&[80400]);

										// Claims Handling US
										([Account].[Account].&[80405],[Process].[Process Code].[7B])
										= ([Data Stage].[Data Stage].&[2],[Time Series].[Time Series].[LTD])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Time Series].[Time Series].[YTD]);
										([Account].[Account].&[22505],[Process].[Process Code].[7B])
										= -1 * ([Account].[Account].&[80405]);


										// Bad Debt Paid
										([Account].[Account].&[74170],[Process].[Process Code].[8D])
										= ([Data Stage].[Data Stage].&[2],[Time Series].[Time Series].[LTD])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Time Series].[Time Series].[YTD]);
										([Account].[Account].&[21210],[Process].[Process Code].[8D])
										= -1 * ([Account].[Account].&[74170]);


										// Bad Debt OS
										([Account].[Account].&[73450],[Process].[Process Code].[8E])
										= ([Data Stage].[Data Stage].&[2],[Time Series].[Time Series].[LTD])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Time Series].[Time Series].[YTD]);
										([Account].[Account].&[23800],[Process].[Process Code].[8E])
										= -1 * ([Account].[Account].&[73450]);

										// Bad Debt Paid
										([Account].[Account].&[73460],[Process].[Process Code].[8F])
										= ([Data Stage].[Data Stage].&[2],[Time Series].[Time Series].[LTD])
										- ([Data Stage].[Data Stage].&[4],[Process].[Process Code].[All],[Time Series].[Time Series].[YTD]);
										([Account].[Account].&[23801],[Process].[Process Code].[8F])
										= -1 * ([Account].[Account].&[73460]);


										//////////////////////////////////////////////////////////////////////////////////////////////
										/////////////RITC True Up Exceptions - YOA Ture Up for youngest closed YOA - Q1 //////////////
										//////////////////////////////////////////////////////////////////////////////////////////////

										SCOPE ( [YOA].[YOA].[YOA].MEMBERS
										, Filter(     [Accounting Period].[Accounting Period].MEMBERS
										, [Accounting Period].[Accounting Period].Properties("Accounting Month")   = "03" )
										);

										// Gross Claims IBNR
										([Account].[Account].&[22250],{[Process].[Process Code].[9I],[Process].[Process Code].[9K]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,    [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										-   ([Account].[Account].&[22200],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										-   ([Account].[Account].&[22600],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										([Account].[Account].&[80320],{[Process].[Process Code].[9I],[Process].[Process Code].[9K]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										+   ([Account].[Account].&[22200],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+   ([Account].[Account].&[22600],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);



										// RI Claims IBNR
										([Account].[Account].&[73360],{[Process].[Process Code].[9J],[Process].[Process Code].[9L]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,    [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										+   ([Account].[Account].&[23400],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+   ([Account].[Account].&[23401],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+   ([Account].[Account].&[23450],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
                                        +   ([Account].[Account].&[23405],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])//Added for 1166 change
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										([Account].[Account].&[23750],{[Process].[Process Code].[9J],[Process].[Process Code].[9L]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										-   ([Account].[Account].&[23400],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										-   ([Account].[Account].&[23401],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										-   ([Account].[Account].&[23450],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
                                        -   ([Account].[Account].&[23405],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])//Added for 1166 change
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);


										//Gross Ultimate Preium
										([Account].[Account].&[10350],{[Process].[Process Code].[9A],[Process].[Process Code].[9C]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										-
										(   ([Account].[Account].&[10100],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[10200],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[10355],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[10350],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										-([Account].[Account].&[10350],[Data Stage].&[4],[Time Series].[Time Series].[LTD])
										+([Account].[Account].&[30100],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[30200],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[30500],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										)
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										([Account].[Account].&[74400],{[Process].[Process Code].[9A],[Process].[Process Code].[9C]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										+
										(   ([Account].[Account].&[10100],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[10200],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[10355],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[10350],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										-([Account].[Account].&[10350],[Data Stage].&[4],[Time Series].[Time Series].[LTD])
										+([Account].[Account].&[30100],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[30200],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[30500],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										)
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);



										//RI Ultimate Preium
										([Account].[Account].&[11300],{[Process].[Process Code].[9B],[Process].[Process Code].[9D]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										-
										(   ([Account].[Account].&[11100],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11101],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11102],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11103],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11250],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
                                        +([Account].[Account].&[11104],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
                                        +([Account].[Account].&[11105],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										)
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										([Account].[Account].&[82160],{[Process].[Process Code].[9B],[Process].[Process Code].[9D]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										+
										(   ([Account].[Account].&[11100],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11101],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11102],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11103],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+([Account].[Account].&[11250],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
                                        +([Account].[Account].&[11104],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
                                        +([Account].[Account].&[11105],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										)
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										// End of Scope Q1 LTD True ups of youngest closed YOA
										END SCOPE;


										//////////////////////////////////////////////////////////////////////////////////////////////
										/////////////RITC True Up Exceptions - YOA Ture Up for youngest closed YOA - Q2 //////////////
										//////////////////////////////////////////////////////////////////////////////////////////////

										SCOPE ( [YOA].[YOA].[YOA].MEMBERS
										, Filter(     [Accounting Period].[Accounting Period].MEMBERS
										, [Accounting Period].[Accounting Period].Properties("Accounting Month")   = "06" )
										);


										// RI Ultimate Premium
										([Account].[Account].&[11300],{[Process].[Process Code].[9B]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,    [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										-   ([Account].[Account].&[51300],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										-   ([Account].[Account].&[51310],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										([Account].[Account].&[82160],{[Process].[Process Code].[9B]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										+   ([Account].[Account].&[51300],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+   ([Account].[Account].&[51310],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);



										// Gross Ultimate Premium (Sidecar)
										([Account].[Account].&[10350],{[Process].[Process Code].[9C]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,    [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										//-   ([Account].[Account].&[51300],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										-   ([Account].[Account].&[51310],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										([Account].[Account].&[74400],{[Process].[Process Code].[9C]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										//+   ([Account].[Account].&[51300],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										+   ([Account].[Account].&[51310],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

                                     //FDM-301 RITC Adjustment ORC amendment   
                                        ([Account].[Account].&[11300],{[Process].[Process Code].[9D]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,    [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										-   ([Account].[Account].&[51300],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										//-   ([Account].[Account].&[51310],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										([Account].[Account].&[82160],{[Process].[Process Code].[9D]})  =
										IIF(    [YOA].[YOA].CURRENTMEMBER IS StrtoMember("[YOA].[YOA].[" + str(int([accounting period].[accounting period].CURRENTMEMBER.Properties("Key")/100)-3) + "]")
										// Youngest Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										// Wizi vs Agresso
										+   ([Account].[Account].&[51300],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										//+   ([Account].[Account].&[51310],[Data Stage].&[4],[Time Series].[Time Series].[LTD],[Process].[Process].[All])
										// Other Closed YOA
										,   [Data Stage].[Data Stage].&[2] - [Data Stage].[Data Stage].&[4]
										);

										// End of Scope Q2 LTD True ups of youngest closed YOA
										END SCOPE;


										// End of Scope RITC Current Period
										END SCOPE;

										// End of Scope RITC Process
										END SCOPE;

										Format_String(This) = '#,##0.00;(#,##0.00)';
										// End of Scope True up allocation
										END SCOPE;

										/////////////////////////////////////////////////////////////////////
										/////////// True Up Override for Profit Commission
										/////////////////////////////////////////////////////////////////////
										//

										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[623]
										,{[Account].[Account].&[62155],[Account].[Account].&[83220]}
										,[Process].[Process Code].[M1]
										, {[Measures].[Amount],[Measures].[Value 2]}
										);

										This = [Measures].[Cur Amount] ;

										END SCOPE;


										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[BBFL]
										,{[Account].[Account].&[62155],[Account].[Account].&[76300]}
										,[Process].[Process Code].[M1]
										,[Measures].[Amount]
										);

										This = [Measures].[Cur Amount] ;

										END SCOPE;


										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[BBFL]
										,{[Account].[Account].&[59500],[Account].[Account].&[90360]}
										,[Process].[Process Code].[M1]
										,[Measures].[Amount]
										);

										([Account].[Account].&[59500]) = [Measures].[Value 2] /
										(   [Measures].[FX Rate Numerator]
										,[Data Stage].[Data Stage].&[2]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[USD]
										,[Cur Transaction Currency].[Tran Curr].&[GBP]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);
										([Account].[Account].&[90360]) =  ([Account].[Account].&[59500]) *-1;
										END SCOPE;

										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[BBFL]
										,{[Account].[Account].&[59500]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 2]
										);

										This = ( ([Account].[Account].&[62155]) + ([Account].[Account].&[76300]) ) *-1   ;
										END SCOPE;

										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[BBFL]
										,{[Account].[Account].&[62155]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 2]
										);

										This = [Measures].[Cur Amount] /
										(   [Measures].[FX Rate Numerator]
										,[Data Stage].[Data Stage].&[2]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Average]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										END SCOPE;

										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[BBFL]
										,{[Account].[Account].&[76300]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 2]
										);

										This = [Measures].[Cur Amount] /
										(   [Measures].[FX Rate Numerator]
										,[Data Stage].[Data Stage].&[2]
										,ClosingPeriod([Accounting Period].[Y - H - Q - M].[Accounting Period],[Accounting Period].[Y - H - Q - M].CurrentMember)
										,[Cur Bridge Currency].[Bridge Currency].[GBP]
										,[Cur Transaction Currency].[Tran Curr].&[USD]
										,[Cur FX Rate].[FX Rate Name].[Spot]
										,[Cur Rate Scenario].[Rate Scenario].[Agresso]
										);

										END SCOPE;

										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[623]
										,{[Account].[Account].&[59600]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 3]
										);

										This = ([Entity].[Entity].[BBFL], [Account].[Account].&[59500], [Measures].[Value 2]) * -1;

										END SCOPE;

										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[623]
										,{[Account].[Account].&[62155]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 3]
										);

										This = ([Entity].[Entity].[BBFL], [Measures].[Value 2]) * -1;

										END SCOPE;

										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[623]
										,{[Account].[Account].&[83220]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 3]
										);

										This = ([Entity].[Entity].[BBFL], [Account].[Account].&[76300], [Measures].[Value 2]) * -1;

										END SCOPE;

										// Added due to bad data in Live Agresso
										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[623]
										,{[Account].[Account].&[59500]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 2]
										);

										This = NULL;

										END SCOPE;

										// Added due to bad data in Live Agresso
										SCOPE([Data Stage].[Data Stage].&[3]
										,[Entity].[Entity].[BBFL]
										,{[Account].[Account].&[90360]}
										,[Process].[Process Code].[M1]
										,[Measures].[Value 2]
										);

										This = NULL;

										END SCOPE;




										/////////////////////////////////////////////////////////////////////
										/////////// True Up Override for Ultimates
										/////////////////////////////////////////////////////////////////////
										//
										/*
										SCOPE([Data Stage].[Data Stage].&[3]
										,[Account].[Account].&[74102]
										,[Process].[Process Code].&[152]
										, MeasureGroupMeasures('Amounts')
										);



										This =

										/*
										iif( //if 74280 Base Allocation is empty

										ISEMPTY(([Account].[Account].&[74280],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152], [Measures].CurrentMember))


										, // total 10100, 30100, 30500
										(
										([Account].[Account].&[10100]
										,[Data Stage].[Data Stage].&[3]
										,[Process].[Process Code].&[152]
										, [Measures].CurrentMember)
										+
										([Account].[Account].&[30100]
										,[Data Stage].[Data Stage].&[3]
										,[Process].[Process Code].&[152]
										, [Measures].CurrentMember)
										+
										([Account].[Account].&[30500]
										,[Data Stage].[Data Stage].&[3]
										,[Process].[Process Code].&[152]
										, [Measures].CurrentMember)

										) * -1

										, // else
										*/
										(
										([Account].[Account].&[10100]
										,[Data Stage].[Data Stage].&[3]
										,[Process].[Process Code].&[152]
										, [Measures].CurrentMember)
										+
										([Account].[Account].&[30100]
										,[Data Stage].[Data Stage].&[3]
										,[Process].[Process Code].&[152]
										, [Measures].CurrentMember)
										) * -1
										//   )
										;

										END SCOPE;


										/*
										SCOPE([Data Stage].[Data Stage].&[3]
										,[Account].[Account].&[74280]
										,[Process].[Process Code].&[152]
										, MeasureGroupMeasures('Amounts')
										);


										This =  iif( //if 74280 Base Allocation is empty

										ISEMPTY(([Account].[Account].&[74280],[Data Stage].[Data Stage].&[2],
										[Process].[Process Code].&[152], [Measures].CurrentMember))


										,

										NULL

										, // else

										([Account].[Account].&[30500]
										,[Data Stage].[Data Stage].&[3]
										,[Process].[Process Code].&[152]
										, [Measures].CurrentMember) * -1

										);

										// End of Ultimates True Up Override
										END SCOPE;
										*/

										*/




										SCOPE   ( [Measures].[Trans Currency Amount]
//                                        ,{[Account].[Account].[Account]} -({[Account].[Account].&[1010083],[Account].[Account].&[1010088]})  // Bidac lr claims (FIN 2434)
										);
										THIS  =  [Measures].[Cur Amount]  ;
										END SCOPE;

										SCOPE   ( [Measures].[Group Currency Amount]
										);
										THIS  =  [Measures].[Amount] ;

										END SCOPE;

										SCOPE   ( [Measures].[Lloyds Currency Amount]
										);
										THIS  =  [Measures].[Amount 4]  ;
										END SCOPE;

										SCOPE   ( [Measures].[Functional Currency Amount]
										);
										THIS  =  [Measures].[Amount 3]  ;
										END SCOPE;
									